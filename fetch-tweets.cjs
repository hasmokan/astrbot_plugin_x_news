"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all3) => {
  for (var name in all3)
    __defProp(target, name, { get: all3[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/.pnpm/tsup@8.4.0_typescript@5.8.3/node_modules/tsup/assets/cjs_shims.js
var init_cjs_shims = __esm({
  "node_modules/.pnpm/tsup@8.4.0_typescript@5.8.3/node_modules/tsup/assets/cjs_shims.js"() {
    "use strict";
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/runtime.js
var require_runtime = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/runtime.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TextApiResponse = exports2.BlobApiResponse = exports2.VoidApiResponse = exports2.JSONApiResponse = exports2.canConsumeForm = exports2.mapValues = exports2.exists = exports2.querystring = exports2.COLLECTION_FORMATS = exports2.RequiredError = exports2.FetchError = exports2.ResponseError = exports2.BaseAPI = exports2.DefaultConfig = exports2.Configuration = exports2.BASE_PATH = void 0;
    exports2.BASE_PATH = "https://x.com/i/api".replace(/\/+$/, "");
    var Configuration = (
      /** @class */
      function() {
        function Configuration2(configuration) {
          if (configuration === void 0) {
            configuration = {};
          }
          this.configuration = configuration;
        }
        Object.defineProperty(Configuration2.prototype, "config", {
          set: function(configuration) {
            this.configuration = configuration;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "basePath", {
          get: function() {
            return this.configuration.basePath != null ? this.configuration.basePath : exports2.BASE_PATH;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "fetchApi", {
          get: function() {
            return this.configuration.fetchApi;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "middleware", {
          get: function() {
            return this.configuration.middleware || [];
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "queryParamsStringify", {
          get: function() {
            return this.configuration.queryParamsStringify || querystring;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "username", {
          get: function() {
            return this.configuration.username;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "password", {
          get: function() {
            return this.configuration.password;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "apiKey", {
          get: function() {
            var apiKey = this.configuration.apiKey;
            if (apiKey) {
              return typeof apiKey === "function" ? apiKey : function() {
                return apiKey;
              };
            }
            return void 0;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "accessToken", {
          get: function() {
            var _this = this;
            var accessToken = this.configuration.accessToken;
            if (accessToken) {
              return typeof accessToken === "function" ? accessToken : function() {
                return __awaiter(_this, void 0, void 0, function() {
                  return __generator(this, function(_a) {
                    return [2, accessToken];
                  });
                });
              };
            }
            return void 0;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "headers", {
          get: function() {
            return this.configuration.headers;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Configuration2.prototype, "credentials", {
          get: function() {
            return this.configuration.credentials;
          },
          enumerable: false,
          configurable: true
        });
        return Configuration2;
      }()
    );
    exports2.Configuration = Configuration;
    exports2.DefaultConfig = new Configuration();
    var BaseAPI = (
      /** @class */
      function() {
        function BaseAPI2(configuration) {
          if (configuration === void 0) {
            configuration = exports2.DefaultConfig;
          }
          var _this = this;
          this.configuration = configuration;
          this.fetchApi = function(url2, init) {
            return __awaiter(_this, void 0, void 0, function() {
              var fetchParams, _i, _a, middleware, response, e_1, _b, _c, middleware, _d, _e, middleware;
              return __generator(this, function(_f) {
                switch (_f.label) {
                  case 0:
                    fetchParams = { url: url2, init };
                    _i = 0, _a = this.middleware;
                    _f.label = 1;
                  case 1:
                    if (!(_i < _a.length)) return [3, 4];
                    middleware = _a[_i];
                    if (!middleware.pre) return [3, 3];
                    return [4, middleware.pre(__assign({ fetch: this.fetchApi }, fetchParams))];
                  case 2:
                    fetchParams = _f.sent() || fetchParams;
                    _f.label = 3;
                  case 3:
                    _i++;
                    return [3, 1];
                  case 4:
                    response = void 0;
                    _f.label = 5;
                  case 5:
                    _f.trys.push([5, 7, , 12]);
                    return [4, (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init)];
                  case 6:
                    response = _f.sent();
                    return [3, 12];
                  case 7:
                    e_1 = _f.sent();
                    _b = 0, _c = this.middleware;
                    _f.label = 8;
                  case 8:
                    if (!(_b < _c.length)) return [3, 11];
                    middleware = _c[_b];
                    if (!middleware.onError) return [3, 10];
                    return [4, middleware.onError({
                      fetch: this.fetchApi,
                      url: fetchParams.url,
                      init: fetchParams.init,
                      error: e_1,
                      response: response ? response.clone() : void 0
                    })];
                  case 9:
                    response = _f.sent() || response;
                    _f.label = 10;
                  case 10:
                    _b++;
                    return [3, 8];
                  case 11:
                    if (response === void 0) {
                      if (e_1 instanceof Error) {
                        throw new FetchError(e_1, "The request failed and the interceptors did not return an alternative response");
                      } else {
                        throw e_1;
                      }
                    }
                    return [3, 12];
                  case 12:
                    _d = 0, _e = this.middleware;
                    _f.label = 13;
                  case 13:
                    if (!(_d < _e.length)) return [3, 16];
                    middleware = _e[_d];
                    if (!middleware.post) return [3, 15];
                    return [4, middleware.post({
                      fetch: this.fetchApi,
                      url: fetchParams.url,
                      init: fetchParams.init,
                      response: response.clone()
                    })];
                  case 14:
                    response = _f.sent() || response;
                    _f.label = 15;
                  case 15:
                    _d++;
                    return [3, 13];
                  case 16:
                    return [2, response];
                }
              });
            });
          };
          this.middleware = configuration.middleware;
        }
        BaseAPI2.prototype.withMiddleware = function() {
          var _a;
          var middlewares = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            middlewares[_i] = arguments[_i];
          }
          var next = this.clone();
          next.middleware = (_a = next.middleware).concat.apply(_a, middlewares);
          return next;
        };
        BaseAPI2.prototype.withPreMiddleware = function() {
          var preMiddlewares = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            preMiddlewares[_i] = arguments[_i];
          }
          var middlewares = preMiddlewares.map(function(pre) {
            return { pre };
          });
          return this.withMiddleware.apply(this, middlewares);
        };
        BaseAPI2.prototype.withPostMiddleware = function() {
          var postMiddlewares = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            postMiddlewares[_i] = arguments[_i];
          }
          var middlewares = postMiddlewares.map(function(post) {
            return { post };
          });
          return this.withMiddleware.apply(this, middlewares);
        };
        BaseAPI2.prototype.isJsonMime = function(mime) {
          if (!mime) {
            return false;
          }
          return BaseAPI2.jsonRegex.test(mime);
        };
        BaseAPI2.prototype.request = function(context, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var _a, url2, init, response;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  return [4, this.createFetchParams(context, initOverrides)];
                case 1:
                  _a = _b.sent(), url2 = _a.url, init = _a.init;
                  return [4, this.fetchApi(url2, init)];
                case 2:
                  response = _b.sent();
                  if (response && (response.status >= 200 && response.status < 300)) {
                    return [2, response];
                  }
                  throw new ResponseError(response, "Response returned an error code");
              }
            });
          });
        };
        BaseAPI2.prototype.createFetchParams = function(context, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var url2, headers, initOverrideFn, initParams, overriddenInit, _a, body, init;
            var _this = this;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  url2 = this.configuration.basePath + context.path;
                  if (context.query !== void 0 && Object.keys(context.query).length !== 0) {
                    url2 += "?" + this.configuration.queryParamsStringify(context.query);
                  }
                  headers = Object.assign({}, this.configuration.headers, context.headers);
                  Object.keys(headers).forEach(function(key) {
                    return headers[key] === void 0 ? delete headers[key] : {};
                  });
                  initOverrideFn = typeof initOverrides === "function" ? initOverrides : function() {
                    return __awaiter(_this, void 0, void 0, function() {
                      return __generator(this, function(_a2) {
                        return [2, initOverrides];
                      });
                    });
                  };
                  initParams = {
                    method: context.method,
                    headers,
                    body: context.body,
                    credentials: this.configuration.credentials
                  };
                  _a = [__assign({}, initParams)];
                  return [4, initOverrideFn({
                    init: initParams,
                    context
                  })];
                case 1:
                  overriddenInit = __assign.apply(void 0, _a.concat([_b.sent()]));
                  if (isFormData2(overriddenInit.body) || overriddenInit.body instanceof URLSearchParams || isBlob2(overriddenInit.body)) {
                    body = overriddenInit.body;
                  } else if (this.isJsonMime(headers["Content-Type"])) {
                    body = JSON.stringify(overriddenInit.body);
                  } else {
                    body = overriddenInit.body;
                  }
                  init = __assign(__assign({}, overriddenInit), { body });
                  return [2, { url: url2, init }];
              }
            });
          });
        };
        BaseAPI2.prototype.clone = function() {
          var constructor = this.constructor;
          var next = new constructor(this.configuration);
          next.middleware = this.middleware.slice();
          return next;
        };
        BaseAPI2.jsonRegex = new RegExp("^(:?application/json|[^;/ 	]+/[^;/ 	]+[+]json)[ 	]*(:?;.*)?$", "i");
        return BaseAPI2;
      }()
    );
    exports2.BaseAPI = BaseAPI;
    function isBlob2(value) {
      return typeof Blob !== "undefined" && value instanceof Blob;
    }
    function isFormData2(value) {
      return typeof FormData !== "undefined" && value instanceof FormData;
    }
    var ResponseError = (
      /** @class */
      function(_super) {
        __extends(ResponseError2, _super);
        function ResponseError2(response, msg) {
          var _this = _super.call(this, msg) || this;
          _this.response = response;
          _this.name = "ResponseError";
          return _this;
        }
        return ResponseError2;
      }(Error)
    );
    exports2.ResponseError = ResponseError;
    var FetchError = (
      /** @class */
      function(_super) {
        __extends(FetchError2, _super);
        function FetchError2(cause, msg) {
          var _this = _super.call(this, msg) || this;
          _this.cause = cause;
          _this.name = "FetchError";
          return _this;
        }
        return FetchError2;
      }(Error)
    );
    exports2.FetchError = FetchError;
    var RequiredError = (
      /** @class */
      function(_super) {
        __extends(RequiredError2, _super);
        function RequiredError2(field, msg) {
          var _this = _super.call(this, msg) || this;
          _this.field = field;
          _this.name = "RequiredError";
          return _this;
        }
        return RequiredError2;
      }(Error)
    );
    exports2.RequiredError = RequiredError;
    exports2.COLLECTION_FORMATS = {
      csv: ",",
      ssv: " ",
      tsv: "	",
      pipes: "|"
    };
    function querystring(params, prefix) {
      if (prefix === void 0) {
        prefix = "";
      }
      return Object.keys(params).map(function(key) {
        return querystringSingleKey(key, params[key], prefix);
      }).filter(function(part) {
        return part.length > 0;
      }).join("&");
    }
    exports2.querystring = querystring;
    function querystringSingleKey(key, value, keyPrefix) {
      if (keyPrefix === void 0) {
        keyPrefix = "";
      }
      var fullKey = keyPrefix + (keyPrefix.length ? "[".concat(key, "]") : key);
      if (value instanceof Array) {
        var multiValue = value.map(function(singleValue) {
          return encodeURIComponent(String(singleValue));
        }).join("&".concat(encodeURIComponent(fullKey), "="));
        return "".concat(encodeURIComponent(fullKey), "=").concat(multiValue);
      }
      if (value instanceof Set) {
        var valueAsArray = Array.from(value);
        return querystringSingleKey(key, valueAsArray, keyPrefix);
      }
      if (value instanceof Date) {
        return "".concat(encodeURIComponent(fullKey), "=").concat(encodeURIComponent(value.toISOString()));
      }
      if (value instanceof Object) {
        return querystring(value, fullKey);
      }
      return "".concat(encodeURIComponent(fullKey), "=").concat(encodeURIComponent(String(value)));
    }
    function exists(json, key) {
      var value = json[key];
      return value !== null && value !== void 0;
    }
    exports2.exists = exists;
    function mapValues(data, fn) {
      return Object.keys(data).reduce(function(acc, key) {
        var _a;
        return __assign(__assign({}, acc), (_a = {}, _a[key] = fn(data[key]), _a));
      }, {});
    }
    exports2.mapValues = mapValues;
    function canConsumeForm(consumes) {
      for (var _i = 0, consumes_1 = consumes; _i < consumes_1.length; _i++) {
        var consume = consumes_1[_i];
        if ("multipart/form-data" === consume.contentType) {
          return true;
        }
      }
      return false;
    }
    exports2.canConsumeForm = canConsumeForm;
    var JSONApiResponse = (
      /** @class */
      function() {
        function JSONApiResponse2(raw, transformer) {
          if (transformer === void 0) {
            transformer = function(jsonValue) {
              return jsonValue;
            };
          }
          this.raw = raw;
          this.transformer = transformer;
        }
        JSONApiResponse2.prototype.value = function() {
          return __awaiter(this, void 0, void 0, function() {
            var _a;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  _a = this.transformer;
                  return [4, this.raw.json()];
                case 1:
                  return [2, _a.apply(this, [_b.sent()])];
              }
            });
          });
        };
        return JSONApiResponse2;
      }()
    );
    exports2.JSONApiResponse = JSONApiResponse;
    var VoidApiResponse = (
      /** @class */
      function() {
        function VoidApiResponse2(raw) {
          this.raw = raw;
        }
        VoidApiResponse2.prototype.value = function() {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [2, void 0];
            });
          });
        };
        return VoidApiResponse2;
      }()
    );
    exports2.VoidApiResponse = VoidApiResponse;
    var BlobApiResponse = (
      /** @class */
      function() {
        function BlobApiResponse2(raw) {
          this.raw = raw;
        }
        BlobApiResponse2.prototype.value = function() {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.raw.blob()];
                case 1:
                  return [2, _a.sent()];
              }
            });
          });
        };
        ;
        return BlobApiResponse2;
      }()
    );
    exports2.BlobApiResponse = BlobApiResponse;
    var TextApiResponse = (
      /** @class */
      function() {
        function TextApiResponse2(raw) {
          this.raw = raw;
        }
        TextApiResponse2.prototype.value = function() {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.raw.text()];
                case 1:
                  return [2, _a.sent()];
              }
            });
          });
        };
        ;
        return TextApiResponse2;
      }()
    );
    exports2.TextApiResponse = TextApiResponse;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsInfo.js
var require_UserHighlightsInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserHighlightsInfoToJSONTyped = exports2.UserHighlightsInfoToJSON = exports2.UserHighlightsInfoFromJSONTyped = exports2.UserHighlightsInfoFromJSON = exports2.instanceOfUserHighlightsInfo = void 0;
    function instanceOfUserHighlightsInfo(value) {
      if (!("canHighlightTweets" in value) || value["canHighlightTweets"] === void 0)
        return false;
      if (!("highlightedTweets" in value) || value["highlightedTweets"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserHighlightsInfo = instanceOfUserHighlightsInfo;
    function UserHighlightsInfoFromJSON(json) {
      return UserHighlightsInfoFromJSONTyped(json, false);
    }
    exports2.UserHighlightsInfoFromJSON = UserHighlightsInfoFromJSON;
    function UserHighlightsInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "canHighlightTweets": json["can_highlight_tweets"],
        "highlightedTweets": json["highlighted_tweets"]
      };
    }
    exports2.UserHighlightsInfoFromJSONTyped = UserHighlightsInfoFromJSONTyped;
    function UserHighlightsInfoToJSON(json) {
      return UserHighlightsInfoToJSONTyped(json, false);
    }
    exports2.UserHighlightsInfoToJSON = UserHighlightsInfoToJSON;
    function UserHighlightsInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "can_highlight_tweets": value["canHighlightTweets"],
        "highlighted_tweets": value["highlightedTweets"]
      };
    }
    exports2.UserHighlightsInfoToJSONTyped = UserHighlightsInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TypeName.js
var require_TypeName = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TypeName.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TypeNameToJSONTyped = exports2.TypeNameToJSON = exports2.TypeNameFromJSONTyped = exports2.TypeNameFromJSON = exports2.instanceOfTypeName = exports2.TypeName = void 0;
    exports2.TypeName = {
      TimelineTweet: "TimelineTweet",
      TimelineTimelineItem: "TimelineTimelineItem",
      TimelineUser: "TimelineUser",
      TimelineTimelineCursor: "TimelineTimelineCursor",
      TweetWithVisibilityResults: "TweetWithVisibilityResults",
      ContextualTweetInterstitial: "ContextualTweetInterstitial",
      TimelineTimelineModule: "TimelineTimelineModule",
      TweetTombstone: "TweetTombstone",
      TimelinePrompt: "TimelinePrompt",
      TimelineMessagePrompt: "TimelineMessagePrompt",
      TimelineCommunity: "TimelineCommunity",
      TweetUnavailable: "TweetUnavailable",
      Tweet: "Tweet",
      User: "User",
      UserUnavailable: "UserUnavailable",
      Community: "Community",
      CommunityDeleteActionUnavailable: "CommunityDeleteActionUnavailable",
      CommunityJoinAction: "CommunityJoinAction",
      CommunityJoinActionUnavailable: "CommunityJoinActionUnavailable",
      CommunityLeaveActionUnavailable: "CommunityLeaveActionUnavailable",
      CommunityTweetPinActionUnavailable: "CommunityTweetPinActionUnavailable",
      CommunityTweetUnpinActionUnavailable: "CommunityTweetUnpinActionUnavailable",
      CommunityInvitesUnavailable: "CommunityInvitesUnavailable",
      CommunityJoinRequestsUnavailable: "CommunityJoinRequestsUnavailable",
      ApiImage: "ApiImage"
    };
    function instanceOfTypeName(value) {
      for (var key in exports2.TypeName) {
        if (Object.prototype.hasOwnProperty.call(exports2.TypeName, key)) {
          if (exports2.TypeName[key] === value) {
            return true;
          }
        }
      }
      return false;
    }
    exports2.instanceOfTypeName = instanceOfTypeName;
    function TypeNameFromJSON(json) {
      return TypeNameFromJSONTyped(json, false);
    }
    exports2.TypeNameFromJSON = TypeNameFromJSON;
    function TypeNameFromJSONTyped(json, ignoreDiscriminator) {
      return json;
    }
    exports2.TypeNameFromJSONTyped = TypeNameFromJSONTyped;
    function TypeNameToJSON(value) {
      return value;
    }
    exports2.TypeNameToJSON = TypeNameToJSON;
    function TypeNameToJSONTyped(value, ignoreDiscriminator) {
      return value;
    }
    exports2.TypeNameToJSONTyped = TypeNameToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfoReasonDescriptionEntitiesRef.js
var require_UserVerificationInfoReasonDescriptionEntitiesRef = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfoReasonDescriptionEntitiesRef.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserVerificationInfoReasonDescriptionEntitiesRefToJSONTyped = exports2.UserVerificationInfoReasonDescriptionEntitiesRefToJSON = exports2.UserVerificationInfoReasonDescriptionEntitiesRefFromJSONTyped = exports2.UserVerificationInfoReasonDescriptionEntitiesRefFromJSON = exports2.instanceOfUserVerificationInfoReasonDescriptionEntitiesRef = exports2.UserVerificationInfoReasonDescriptionEntitiesRefUrlTypeEnum = void 0;
    exports2.UserVerificationInfoReasonDescriptionEntitiesRefUrlTypeEnum = {
      ExternalUrl: "ExternalUrl"
    };
    function instanceOfUserVerificationInfoReasonDescriptionEntitiesRef(value) {
      if (!("url" in value) || value["url"] === void 0)
        return false;
      if (!("urlType" in value) || value["urlType"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserVerificationInfoReasonDescriptionEntitiesRef = instanceOfUserVerificationInfoReasonDescriptionEntitiesRef;
    function UserVerificationInfoReasonDescriptionEntitiesRefFromJSON(json) {
      return UserVerificationInfoReasonDescriptionEntitiesRefFromJSONTyped(json, false);
    }
    exports2.UserVerificationInfoReasonDescriptionEntitiesRefFromJSON = UserVerificationInfoReasonDescriptionEntitiesRefFromJSON;
    function UserVerificationInfoReasonDescriptionEntitiesRefFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "url": json["url"],
        "urlType": json["url_type"]
      };
    }
    exports2.UserVerificationInfoReasonDescriptionEntitiesRefFromJSONTyped = UserVerificationInfoReasonDescriptionEntitiesRefFromJSONTyped;
    function UserVerificationInfoReasonDescriptionEntitiesRefToJSON(json) {
      return UserVerificationInfoReasonDescriptionEntitiesRefToJSONTyped(json, false);
    }
    exports2.UserVerificationInfoReasonDescriptionEntitiesRefToJSON = UserVerificationInfoReasonDescriptionEntitiesRefToJSON;
    function UserVerificationInfoReasonDescriptionEntitiesRefToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "url": value["url"],
        "url_type": value["urlType"]
      };
    }
    exports2.UserVerificationInfoReasonDescriptionEntitiesRefToJSONTyped = UserVerificationInfoReasonDescriptionEntitiesRefToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfoReasonDescriptionEntities.js
var require_UserVerificationInfoReasonDescriptionEntities = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfoReasonDescriptionEntities.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserVerificationInfoReasonDescriptionEntitiesToJSONTyped = exports2.UserVerificationInfoReasonDescriptionEntitiesToJSON = exports2.UserVerificationInfoReasonDescriptionEntitiesFromJSONTyped = exports2.UserVerificationInfoReasonDescriptionEntitiesFromJSON = exports2.instanceOfUserVerificationInfoReasonDescriptionEntities = void 0;
    var UserVerificationInfoReasonDescriptionEntitiesRef_1 = require_UserVerificationInfoReasonDescriptionEntitiesRef();
    function instanceOfUserVerificationInfoReasonDescriptionEntities(value) {
      if (!("fromIndex" in value) || value["fromIndex"] === void 0)
        return false;
      if (!("ref" in value) || value["ref"] === void 0)
        return false;
      if (!("toIndex" in value) || value["toIndex"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserVerificationInfoReasonDescriptionEntities = instanceOfUserVerificationInfoReasonDescriptionEntities;
    function UserVerificationInfoReasonDescriptionEntitiesFromJSON(json) {
      return UserVerificationInfoReasonDescriptionEntitiesFromJSONTyped(json, false);
    }
    exports2.UserVerificationInfoReasonDescriptionEntitiesFromJSON = UserVerificationInfoReasonDescriptionEntitiesFromJSON;
    function UserVerificationInfoReasonDescriptionEntitiesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "fromIndex": json["from_index"],
        "ref": (0, UserVerificationInfoReasonDescriptionEntitiesRef_1.UserVerificationInfoReasonDescriptionEntitiesRefFromJSON)(json["ref"]),
        "toIndex": json["to_index"]
      };
    }
    exports2.UserVerificationInfoReasonDescriptionEntitiesFromJSONTyped = UserVerificationInfoReasonDescriptionEntitiesFromJSONTyped;
    function UserVerificationInfoReasonDescriptionEntitiesToJSON(json) {
      return UserVerificationInfoReasonDescriptionEntitiesToJSONTyped(json, false);
    }
    exports2.UserVerificationInfoReasonDescriptionEntitiesToJSON = UserVerificationInfoReasonDescriptionEntitiesToJSON;
    function UserVerificationInfoReasonDescriptionEntitiesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "from_index": value["fromIndex"],
        "ref": (0, UserVerificationInfoReasonDescriptionEntitiesRef_1.UserVerificationInfoReasonDescriptionEntitiesRefToJSON)(value["ref"]),
        "to_index": value["toIndex"]
      };
    }
    exports2.UserVerificationInfoReasonDescriptionEntitiesToJSONTyped = UserVerificationInfoReasonDescriptionEntitiesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfoReasonDescription.js
var require_UserVerificationInfoReasonDescription = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfoReasonDescription.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserVerificationInfoReasonDescriptionToJSONTyped = exports2.UserVerificationInfoReasonDescriptionToJSON = exports2.UserVerificationInfoReasonDescriptionFromJSONTyped = exports2.UserVerificationInfoReasonDescriptionFromJSON = exports2.instanceOfUserVerificationInfoReasonDescription = void 0;
    var UserVerificationInfoReasonDescriptionEntities_1 = require_UserVerificationInfoReasonDescriptionEntities();
    function instanceOfUserVerificationInfoReasonDescription(value) {
      if (!("entities" in value) || value["entities"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserVerificationInfoReasonDescription = instanceOfUserVerificationInfoReasonDescription;
    function UserVerificationInfoReasonDescriptionFromJSON(json) {
      return UserVerificationInfoReasonDescriptionFromJSONTyped(json, false);
    }
    exports2.UserVerificationInfoReasonDescriptionFromJSON = UserVerificationInfoReasonDescriptionFromJSON;
    function UserVerificationInfoReasonDescriptionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entities": json["entities"].map(UserVerificationInfoReasonDescriptionEntities_1.UserVerificationInfoReasonDescriptionEntitiesFromJSON),
        "text": json["text"]
      };
    }
    exports2.UserVerificationInfoReasonDescriptionFromJSONTyped = UserVerificationInfoReasonDescriptionFromJSONTyped;
    function UserVerificationInfoReasonDescriptionToJSON(json) {
      return UserVerificationInfoReasonDescriptionToJSONTyped(json, false);
    }
    exports2.UserVerificationInfoReasonDescriptionToJSON = UserVerificationInfoReasonDescriptionToJSON;
    function UserVerificationInfoReasonDescriptionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entities": value["entities"].map(UserVerificationInfoReasonDescriptionEntities_1.UserVerificationInfoReasonDescriptionEntitiesToJSON),
        "text": value["text"]
      };
    }
    exports2.UserVerificationInfoReasonDescriptionToJSONTyped = UserVerificationInfoReasonDescriptionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfoReason.js
var require_UserVerificationInfoReason = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfoReason.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserVerificationInfoReasonToJSONTyped = exports2.UserVerificationInfoReasonToJSON = exports2.UserVerificationInfoReasonFromJSONTyped = exports2.UserVerificationInfoReasonFromJSON = exports2.instanceOfUserVerificationInfoReason = void 0;
    var UserVerificationInfoReasonDescription_1 = require_UserVerificationInfoReasonDescription();
    function instanceOfUserVerificationInfoReason(value) {
      if (!("description" in value) || value["description"] === void 0)
        return false;
      if (!("verifiedSinceMsec" in value) || value["verifiedSinceMsec"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserVerificationInfoReason = instanceOfUserVerificationInfoReason;
    function UserVerificationInfoReasonFromJSON(json) {
      return UserVerificationInfoReasonFromJSONTyped(json, false);
    }
    exports2.UserVerificationInfoReasonFromJSON = UserVerificationInfoReasonFromJSON;
    function UserVerificationInfoReasonFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "description": (0, UserVerificationInfoReasonDescription_1.UserVerificationInfoReasonDescriptionFromJSON)(json["description"]),
        "overrideVerifiedYear": json["override_verified_year"] == null ? void 0 : json["override_verified_year"],
        "verifiedSinceMsec": json["verified_since_msec"]
      };
    }
    exports2.UserVerificationInfoReasonFromJSONTyped = UserVerificationInfoReasonFromJSONTyped;
    function UserVerificationInfoReasonToJSON(json) {
      return UserVerificationInfoReasonToJSONTyped(json, false);
    }
    exports2.UserVerificationInfoReasonToJSON = UserVerificationInfoReasonToJSON;
    function UserVerificationInfoReasonToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "description": (0, UserVerificationInfoReasonDescription_1.UserVerificationInfoReasonDescriptionToJSON)(value["description"]),
        "override_verified_year": value["overrideVerifiedYear"],
        "verified_since_msec": value["verifiedSinceMsec"]
      };
    }
    exports2.UserVerificationInfoReasonToJSONTyped = UserVerificationInfoReasonToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfo.js
var require_UserVerificationInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserVerificationInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserVerificationInfoToJSONTyped = exports2.UserVerificationInfoToJSON = exports2.UserVerificationInfoFromJSONTyped = exports2.UserVerificationInfoFromJSON = exports2.instanceOfUserVerificationInfo = void 0;
    var UserVerificationInfoReason_1 = require_UserVerificationInfoReason();
    function instanceOfUserVerificationInfo(value) {
      if (!("isIdentityVerified" in value) || value["isIdentityVerified"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserVerificationInfo = instanceOfUserVerificationInfo;
    function UserVerificationInfoFromJSON(json) {
      return UserVerificationInfoFromJSONTyped(json, false);
    }
    exports2.UserVerificationInfoFromJSON = UserVerificationInfoFromJSON;
    function UserVerificationInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "isIdentityVerified": json["is_identity_verified"],
        "reason": json["reason"] == null ? void 0 : (0, UserVerificationInfoReason_1.UserVerificationInfoReasonFromJSON)(json["reason"])
      };
    }
    exports2.UserVerificationInfoFromJSONTyped = UserVerificationInfoFromJSONTyped;
    function UserVerificationInfoToJSON(json) {
      return UserVerificationInfoToJSONTyped(json, false);
    }
    exports2.UserVerificationInfoToJSON = UserVerificationInfoToJSON;
    function UserVerificationInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "is_identity_verified": value["isIdentityVerified"],
        "reason": (0, UserVerificationInfoReason_1.UserVerificationInfoReasonToJSON)(value["reason"])
      };
    }
    exports2.UserVerificationInfoToJSONTyped = UserVerificationInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserLegacy.js
var require_UserLegacy = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserLegacy.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserLegacyToJSONTyped = exports2.UserLegacyToJSON = exports2.UserLegacyFromJSONTyped = exports2.UserLegacyFromJSON = exports2.instanceOfUserLegacy = exports2.UserLegacyVerifiedTypeEnum = void 0;
    exports2.UserLegacyVerifiedTypeEnum = {
      Business: "Business",
      Government: "Government"
    };
    function instanceOfUserLegacy(value) {
      if (!("createdAt" in value) || value["createdAt"] === void 0)
        return false;
      if (!("defaultProfile" in value) || value["defaultProfile"] === void 0)
        return false;
      if (!("defaultProfileImage" in value) || value["defaultProfileImage"] === void 0)
        return false;
      if (!("description" in value) || value["description"] === void 0)
        return false;
      if (!("entities" in value) || value["entities"] === void 0)
        return false;
      if (!("fastFollowersCount" in value) || value["fastFollowersCount"] === void 0)
        return false;
      if (!("favouritesCount" in value) || value["favouritesCount"] === void 0)
        return false;
      if (!("followersCount" in value) || value["followersCount"] === void 0)
        return false;
      if (!("friendsCount" in value) || value["friendsCount"] === void 0)
        return false;
      if (!("hasCustomTimelines" in value) || value["hasCustomTimelines"] === void 0)
        return false;
      if (!("isTranslator" in value) || value["isTranslator"] === void 0)
        return false;
      if (!("listedCount" in value) || value["listedCount"] === void 0)
        return false;
      if (!("location" in value) || value["location"] === void 0)
        return false;
      if (!("mediaCount" in value) || value["mediaCount"] === void 0)
        return false;
      if (!("name" in value) || value["name"] === void 0)
        return false;
      if (!("normalFollowersCount" in value) || value["normalFollowersCount"] === void 0)
        return false;
      if (!("pinnedTweetIdsStr" in value) || value["pinnedTweetIdsStr"] === void 0)
        return false;
      if (!("possiblySensitive" in value) || value["possiblySensitive"] === void 0)
        return false;
      if (!("profileImageUrlHttps" in value) || value["profileImageUrlHttps"] === void 0)
        return false;
      if (!("profileInterstitialType" in value) || value["profileInterstitialType"] === void 0)
        return false;
      if (!("screenName" in value) || value["screenName"] === void 0)
        return false;
      if (!("statusesCount" in value) || value["statusesCount"] === void 0)
        return false;
      if (!("translatorType" in value) || value["translatorType"] === void 0)
        return false;
      if (!("verified" in value) || value["verified"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserLegacy = instanceOfUserLegacy;
    function UserLegacyFromJSON(json) {
      return UserLegacyFromJSONTyped(json, false);
    }
    exports2.UserLegacyFromJSON = UserLegacyFromJSON;
    function UserLegacyFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "blockedBy": json["blocked_by"] == null ? void 0 : json["blocked_by"],
        "blocking": json["blocking"] == null ? void 0 : json["blocking"],
        "canDm": json["can_dm"] == null ? void 0 : json["can_dm"],
        "canMediaTag": json["can_media_tag"] == null ? void 0 : json["can_media_tag"],
        "createdAt": json["created_at"],
        "defaultProfile": json["default_profile"],
        "defaultProfileImage": json["default_profile_image"],
        "description": json["description"],
        "entities": json["entities"],
        "fastFollowersCount": json["fast_followers_count"],
        "favouritesCount": json["favourites_count"],
        "followRequestSent": json["follow_request_sent"] == null ? void 0 : json["follow_request_sent"],
        "followedBy": json["followed_by"] == null ? void 0 : json["followed_by"],
        "followersCount": json["followers_count"],
        "following": json["following"] == null ? void 0 : json["following"],
        "friendsCount": json["friends_count"],
        "hasCustomTimelines": json["has_custom_timelines"],
        "isTranslator": json["is_translator"],
        "listedCount": json["listed_count"],
        "location": json["location"],
        "mediaCount": json["media_count"],
        "muting": json["muting"] == null ? void 0 : json["muting"],
        "name": json["name"],
        "normalFollowersCount": json["normal_followers_count"],
        "notifications": json["notifications"] == null ? void 0 : json["notifications"],
        "pinnedTweetIdsStr": json["pinned_tweet_ids_str"],
        "possiblySensitive": json["possibly_sensitive"],
        "profileBannerExtensions": json["profile_banner_extensions"] == null ? void 0 : json["profile_banner_extensions"],
        "profileBannerUrl": json["profile_banner_url"] == null ? void 0 : json["profile_banner_url"],
        "profileImageExtensions": json["profile_image_extensions"] == null ? void 0 : json["profile_image_extensions"],
        "profileImageUrlHttps": json["profile_image_url_https"],
        "profileInterstitialType": json["profile_interstitial_type"],
        "_protected": json["protected"] == null ? void 0 : json["protected"],
        "screenName": json["screen_name"],
        "statusesCount": json["statuses_count"],
        "translatorType": json["translator_type"],
        "url": json["url"] == null ? void 0 : json["url"],
        "verified": json["verified"],
        "verifiedType": json["verified_type"] == null ? void 0 : json["verified_type"],
        "wantRetweets": json["want_retweets"] == null ? void 0 : json["want_retweets"],
        "withheldInCountries": json["withheld_in_countries"] == null ? void 0 : json["withheld_in_countries"]
      };
    }
    exports2.UserLegacyFromJSONTyped = UserLegacyFromJSONTyped;
    function UserLegacyToJSON(json) {
      return UserLegacyToJSONTyped(json, false);
    }
    exports2.UserLegacyToJSON = UserLegacyToJSON;
    function UserLegacyToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "blocked_by": value["blockedBy"],
        "blocking": value["blocking"],
        "can_dm": value["canDm"],
        "can_media_tag": value["canMediaTag"],
        "created_at": value["createdAt"],
        "default_profile": value["defaultProfile"],
        "default_profile_image": value["defaultProfileImage"],
        "description": value["description"],
        "entities": value["entities"],
        "fast_followers_count": value["fastFollowersCount"],
        "favourites_count": value["favouritesCount"],
        "follow_request_sent": value["followRequestSent"],
        "followed_by": value["followedBy"],
        "followers_count": value["followersCount"],
        "following": value["following"],
        "friends_count": value["friendsCount"],
        "has_custom_timelines": value["hasCustomTimelines"],
        "is_translator": value["isTranslator"],
        "listed_count": value["listedCount"],
        "location": value["location"],
        "media_count": value["mediaCount"],
        "muting": value["muting"],
        "name": value["name"],
        "normal_followers_count": value["normalFollowersCount"],
        "notifications": value["notifications"],
        "pinned_tweet_ids_str": value["pinnedTweetIdsStr"],
        "possibly_sensitive": value["possiblySensitive"],
        "profile_banner_extensions": value["profileBannerExtensions"],
        "profile_banner_url": value["profileBannerUrl"],
        "profile_image_extensions": value["profileImageExtensions"],
        "profile_image_url_https": value["profileImageUrlHttps"],
        "profile_interstitial_type": value["profileInterstitialType"],
        "protected": value["_protected"],
        "screen_name": value["screenName"],
        "statuses_count": value["statusesCount"],
        "translator_type": value["translatorType"],
        "url": value["url"],
        "verified": value["verified"],
        "verified_type": value["verifiedType"],
        "want_retweets": value["wantRetweets"],
        "withheld_in_countries": value["withheldInCountries"]
      };
    }
    exports2.UserLegacyToJSONTyped = UserLegacyToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserLegacyExtendedProfileBirthdate.js
var require_UserLegacyExtendedProfileBirthdate = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserLegacyExtendedProfileBirthdate.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserLegacyExtendedProfileBirthdateToJSONTyped = exports2.UserLegacyExtendedProfileBirthdateToJSON = exports2.UserLegacyExtendedProfileBirthdateFromJSONTyped = exports2.UserLegacyExtendedProfileBirthdateFromJSON = exports2.instanceOfUserLegacyExtendedProfileBirthdate = exports2.UserLegacyExtendedProfileBirthdateYearVisibilityEnum = exports2.UserLegacyExtendedProfileBirthdateVisibilityEnum = void 0;
    exports2.UserLegacyExtendedProfileBirthdateVisibilityEnum = {
      Self: "Self",
      Public: "Public",
      MutualFollow: "MutualFollow",
      Followers: "Followers",
      Following: "Following"
    };
    exports2.UserLegacyExtendedProfileBirthdateYearVisibilityEnum = {
      Self: "Self",
      Public: "Public",
      MutualFollow: "MutualFollow",
      Followers: "Followers",
      Following: "Following"
    };
    function instanceOfUserLegacyExtendedProfileBirthdate(value) {
      if (!("day" in value) || value["day"] === void 0)
        return false;
      if (!("month" in value) || value["month"] === void 0)
        return false;
      if (!("visibility" in value) || value["visibility"] === void 0)
        return false;
      if (!("yearVisibility" in value) || value["yearVisibility"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserLegacyExtendedProfileBirthdate = instanceOfUserLegacyExtendedProfileBirthdate;
    function UserLegacyExtendedProfileBirthdateFromJSON(json) {
      return UserLegacyExtendedProfileBirthdateFromJSONTyped(json, false);
    }
    exports2.UserLegacyExtendedProfileBirthdateFromJSON = UserLegacyExtendedProfileBirthdateFromJSON;
    function UserLegacyExtendedProfileBirthdateFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "day": json["day"],
        "month": json["month"],
        "visibility": json["visibility"],
        "year": json["year"] == null ? void 0 : json["year"],
        "yearVisibility": json["year_visibility"]
      };
    }
    exports2.UserLegacyExtendedProfileBirthdateFromJSONTyped = UserLegacyExtendedProfileBirthdateFromJSONTyped;
    function UserLegacyExtendedProfileBirthdateToJSON(json) {
      return UserLegacyExtendedProfileBirthdateToJSONTyped(json, false);
    }
    exports2.UserLegacyExtendedProfileBirthdateToJSON = UserLegacyExtendedProfileBirthdateToJSON;
    function UserLegacyExtendedProfileBirthdateToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "day": value["day"],
        "month": value["month"],
        "visibility": value["visibility"],
        "year": value["year"],
        "year_visibility": value["yearVisibility"]
      };
    }
    exports2.UserLegacyExtendedProfileBirthdateToJSONTyped = UserLegacyExtendedProfileBirthdateToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserLegacyExtendedProfile.js
var require_UserLegacyExtendedProfile = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserLegacyExtendedProfile.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserLegacyExtendedProfileToJSONTyped = exports2.UserLegacyExtendedProfileToJSON = exports2.UserLegacyExtendedProfileFromJSONTyped = exports2.UserLegacyExtendedProfileFromJSON = exports2.instanceOfUserLegacyExtendedProfile = void 0;
    var UserLegacyExtendedProfileBirthdate_1 = require_UserLegacyExtendedProfileBirthdate();
    function instanceOfUserLegacyExtendedProfile(value) {
      return true;
    }
    exports2.instanceOfUserLegacyExtendedProfile = instanceOfUserLegacyExtendedProfile;
    function UserLegacyExtendedProfileFromJSON(json) {
      return UserLegacyExtendedProfileFromJSONTyped(json, false);
    }
    exports2.UserLegacyExtendedProfileFromJSON = UserLegacyExtendedProfileFromJSON;
    function UserLegacyExtendedProfileFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "birthdate": json["birthdate"] == null ? void 0 : (0, UserLegacyExtendedProfileBirthdate_1.UserLegacyExtendedProfileBirthdateFromJSON)(json["birthdate"])
      };
    }
    exports2.UserLegacyExtendedProfileFromJSONTyped = UserLegacyExtendedProfileFromJSONTyped;
    function UserLegacyExtendedProfileToJSON(json) {
      return UserLegacyExtendedProfileToJSONTyped(json, false);
    }
    exports2.UserLegacyExtendedProfileToJSON = UserLegacyExtendedProfileToJSON;
    function UserLegacyExtendedProfileToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "birthdate": (0, UserLegacyExtendedProfileBirthdate_1.UserLegacyExtendedProfileBirthdateToJSON)(value["birthdate"])
      };
    }
    exports2.UserLegacyExtendedProfileToJSONTyped = UserLegacyExtendedProfileToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTipJarSettings.js
var require_UserTipJarSettings = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTipJarSettings.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserTipJarSettingsToJSONTyped = exports2.UserTipJarSettingsToJSON = exports2.UserTipJarSettingsFromJSONTyped = exports2.UserTipJarSettingsFromJSON = exports2.instanceOfUserTipJarSettings = void 0;
    function instanceOfUserTipJarSettings(value) {
      return true;
    }
    exports2.instanceOfUserTipJarSettings = instanceOfUserTipJarSettings;
    function UserTipJarSettingsFromJSON(json) {
      return UserTipJarSettingsFromJSONTyped(json, false);
    }
    exports2.UserTipJarSettingsFromJSON = UserTipJarSettingsFromJSON;
    function UserTipJarSettingsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "bandcampHandle": json["bandcamp_handle"] == null ? void 0 : json["bandcamp_handle"],
        "bitcoinHandle": json["bitcoin_handle"] == null ? void 0 : json["bitcoin_handle"],
        "cashAppHandle": json["cash_app_handle"] == null ? void 0 : json["cash_app_handle"],
        "ethereumHandle": json["ethereum_handle"] == null ? void 0 : json["ethereum_handle"],
        "gofundmeHandle": json["gofundme_handle"] == null ? void 0 : json["gofundme_handle"],
        "isEnabled": json["is_enabled"] == null ? void 0 : json["is_enabled"],
        "patreonHandle": json["patreon_handle"] == null ? void 0 : json["patreon_handle"],
        "payPalHandle": json["pay_pal_handle"] == null ? void 0 : json["pay_pal_handle"],
        "venmoHandle": json["venmo_handle"] == null ? void 0 : json["venmo_handle"]
      };
    }
    exports2.UserTipJarSettingsFromJSONTyped = UserTipJarSettingsFromJSONTyped;
    function UserTipJarSettingsToJSON(json) {
      return UserTipJarSettingsToJSONTyped(json, false);
    }
    exports2.UserTipJarSettingsToJSON = UserTipJarSettingsToJSON;
    function UserTipJarSettingsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "bandcamp_handle": value["bandcampHandle"],
        "bitcoin_handle": value["bitcoinHandle"],
        "cash_app_handle": value["cashAppHandle"],
        "ethereum_handle": value["ethereumHandle"],
        "gofundme_handle": value["gofundmeHandle"],
        "is_enabled": value["isEnabled"],
        "patreon_handle": value["patreonHandle"],
        "pay_pal_handle": value["payPalHandle"],
        "venmo_handle": value["venmoHandle"]
      };
    }
    exports2.UserTipJarSettingsToJSONTyped = UserTipJarSettingsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserProfessionalCategory.js
var require_UserProfessionalCategory = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserProfessionalCategory.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserProfessionalCategoryToJSONTyped = exports2.UserProfessionalCategoryToJSON = exports2.UserProfessionalCategoryFromJSONTyped = exports2.UserProfessionalCategoryFromJSON = exports2.instanceOfUserProfessionalCategory = void 0;
    function instanceOfUserProfessionalCategory(value) {
      if (!("iconName" in value) || value["iconName"] === void 0)
        return false;
      if (!("id" in value) || value["id"] === void 0)
        return false;
      if (!("name" in value) || value["name"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserProfessionalCategory = instanceOfUserProfessionalCategory;
    function UserProfessionalCategoryFromJSON(json) {
      return UserProfessionalCategoryFromJSONTyped(json, false);
    }
    exports2.UserProfessionalCategoryFromJSON = UserProfessionalCategoryFromJSON;
    function UserProfessionalCategoryFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "iconName": json["icon_name"],
        "id": json["id"],
        "name": json["name"]
      };
    }
    exports2.UserProfessionalCategoryFromJSONTyped = UserProfessionalCategoryFromJSONTyped;
    function UserProfessionalCategoryToJSON(json) {
      return UserProfessionalCategoryToJSONTyped(json, false);
    }
    exports2.UserProfessionalCategoryToJSON = UserProfessionalCategoryToJSON;
    function UserProfessionalCategoryToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "icon_name": value["iconName"],
        "id": value["id"],
        "name": value["name"]
      };
    }
    exports2.UserProfessionalCategoryToJSONTyped = UserProfessionalCategoryToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserProfessional.js
var require_UserProfessional = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserProfessional.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserProfessionalToJSONTyped = exports2.UserProfessionalToJSON = exports2.UserProfessionalFromJSONTyped = exports2.UserProfessionalFromJSON = exports2.instanceOfUserProfessional = exports2.UserProfessionalProfessionalTypeEnum = void 0;
    var UserProfessionalCategory_1 = require_UserProfessionalCategory();
    exports2.UserProfessionalProfessionalTypeEnum = {
      Business: "Business",
      Creator: "Creator"
    };
    function instanceOfUserProfessional(value) {
      if (!("category" in value) || value["category"] === void 0)
        return false;
      if (!("professionalType" in value) || value["professionalType"] === void 0)
        return false;
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserProfessional = instanceOfUserProfessional;
    function UserProfessionalFromJSON(json) {
      return UserProfessionalFromJSONTyped(json, false);
    }
    exports2.UserProfessionalFromJSON = UserProfessionalFromJSON;
    function UserProfessionalFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "category": json["category"].map(UserProfessionalCategory_1.UserProfessionalCategoryFromJSON),
        "professionalType": json["professional_type"],
        "restId": json["rest_id"]
      };
    }
    exports2.UserProfessionalFromJSONTyped = UserProfessionalFromJSONTyped;
    function UserProfessionalToJSON(json) {
      return UserProfessionalToJSONTyped(json, false);
    }
    exports2.UserProfessionalToJSON = UserProfessionalToJSON;
    function UserProfessionalToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "category": value["category"].map(UserProfessionalCategory_1.UserProfessionalCategoryToJSON),
        "professional_type": value["professionalType"],
        "rest_id": value["restId"]
      };
    }
    exports2.UserProfessionalToJSONTyped = UserProfessionalToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/User.js
var require_User = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/User.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserToJSONTyped = exports2.UserToJSON = exports2.UserFromJSONTyped = exports2.UserFromJSON = exports2.instanceOfUser = exports2.UserProfileImageShapeEnum = void 0;
    var UserHighlightsInfo_1 = require_UserHighlightsInfo();
    var TypeName_1 = require_TypeName();
    var UserVerificationInfo_1 = require_UserVerificationInfo();
    var UserLegacy_1 = require_UserLegacy();
    var UserLegacyExtendedProfile_1 = require_UserLegacyExtendedProfile();
    var UserTipJarSettings_1 = require_UserTipJarSettings();
    var UserProfessional_1 = require_UserProfessional();
    exports2.UserProfileImageShapeEnum = {
      Circle: "Circle",
      Square: "Square",
      Hexagon: "Hexagon"
    };
    function instanceOfUser(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("id" in value) || value["id"] === void 0)
        return false;
      if (!("isBlueVerified" in value) || value["isBlueVerified"] === void 0)
        return false;
      if (!("legacy" in value) || value["legacy"] === void 0)
        return false;
      if (!("profileImageShape" in value) || value["profileImageShape"] === void 0)
        return false;
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUser = instanceOfUser;
    function UserFromJSON(json) {
      return UserFromJSONTyped(json, false);
    }
    exports2.UserFromJSON = UserFromJSON;
    function UserFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "affiliatesHighlightedLabel": json["affiliates_highlighted_label"] == null ? void 0 : json["affiliates_highlighted_label"],
        "businessAccount": json["business_account"] == null ? void 0 : json["business_account"],
        "creatorSubscriptionsCount": json["creator_subscriptions_count"] == null ? void 0 : json["creator_subscriptions_count"],
        "hasGraduatedAccess": json["has_graduated_access"] == null ? void 0 : json["has_graduated_access"],
        "hasHiddenLikesOnProfile": json["has_hidden_likes_on_profile"] == null ? void 0 : json["has_hidden_likes_on_profile"],
        "hasNftAvatar": json["has_nft_avatar"] == null ? void 0 : json["has_nft_avatar"],
        "highlightsInfo": json["highlights_info"] == null ? void 0 : (0, UserHighlightsInfo_1.UserHighlightsInfoFromJSON)(json["highlights_info"]),
        "id": json["id"],
        "isBlueVerified": json["is_blue_verified"],
        "isProfileTranslatable": json["is_profile_translatable"] == null ? void 0 : json["is_profile_translatable"],
        "legacy": (0, UserLegacy_1.UserLegacyFromJSON)(json["legacy"]),
        "legacyExtendedProfile": json["legacy_extended_profile"] == null ? void 0 : (0, UserLegacyExtendedProfile_1.UserLegacyExtendedProfileFromJSON)(json["legacy_extended_profile"]),
        "premiumGiftingEligible": json["premium_gifting_eligible"] == null ? void 0 : json["premium_gifting_eligible"],
        "professional": json["professional"] == null ? void 0 : (0, UserProfessional_1.UserProfessionalFromJSON)(json["professional"]),
        "profileImageShape": json["profile_image_shape"],
        "restId": json["rest_id"],
        "superFollowEligible": json["super_follow_eligible"] == null ? void 0 : json["super_follow_eligible"],
        "superFollowedBy": json["super_followed_by"] == null ? void 0 : json["super_followed_by"],
        "superFollowing": json["super_following"] == null ? void 0 : json["super_following"],
        "tipjarSettings": json["tipjar_settings"] == null ? void 0 : (0, UserTipJarSettings_1.UserTipJarSettingsFromJSON)(json["tipjar_settings"]),
        "userSeedTweetCount": json["user_seed_tweet_count"] == null ? void 0 : json["user_seed_tweet_count"],
        "verificationInfo": json["verification_info"] == null ? void 0 : (0, UserVerificationInfo_1.UserVerificationInfoFromJSON)(json["verification_info"])
      };
    }
    exports2.UserFromJSONTyped = UserFromJSONTyped;
    function UserToJSON(json) {
      return UserToJSONTyped(json, false);
    }
    exports2.UserToJSON = UserToJSON;
    function UserToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "affiliates_highlighted_label": value["affiliatesHighlightedLabel"],
        "business_account": value["businessAccount"],
        "creator_subscriptions_count": value["creatorSubscriptionsCount"],
        "has_graduated_access": value["hasGraduatedAccess"],
        "has_hidden_likes_on_profile": value["hasHiddenLikesOnProfile"],
        "has_nft_avatar": value["hasNftAvatar"],
        "highlights_info": (0, UserHighlightsInfo_1.UserHighlightsInfoToJSON)(value["highlightsInfo"]),
        "id": value["id"],
        "is_blue_verified": value["isBlueVerified"],
        "is_profile_translatable": value["isProfileTranslatable"],
        "legacy": (0, UserLegacy_1.UserLegacyToJSON)(value["legacy"]),
        "legacy_extended_profile": (0, UserLegacyExtendedProfile_1.UserLegacyExtendedProfileToJSON)(value["legacyExtendedProfile"]),
        "premium_gifting_eligible": value["premiumGiftingEligible"],
        "professional": (0, UserProfessional_1.UserProfessionalToJSON)(value["professional"]),
        "profile_image_shape": value["profileImageShape"],
        "rest_id": value["restId"],
        "super_follow_eligible": value["superFollowEligible"],
        "super_followed_by": value["superFollowedBy"],
        "super_following": value["superFollowing"],
        "tipjar_settings": (0, UserTipJarSettings_1.UserTipJarSettingsToJSON)(value["tipjarSettings"]),
        "user_seed_tweet_count": value["userSeedTweetCount"],
        "verification_info": (0, UserVerificationInfo_1.UserVerificationInfoToJSON)(value["verificationInfo"])
      };
    }
    exports2.UserToJSONTyped = UserToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserUnavailable.js
var require_UserUnavailable = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserUnavailable.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserUnavailableToJSONTyped = exports2.UserUnavailableToJSON = exports2.UserUnavailableFromJSONTyped = exports2.UserUnavailableFromJSON = exports2.instanceOfUserUnavailable = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfUserUnavailable(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("reason" in value) || value["reason"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserUnavailable = instanceOfUserUnavailable;
    function UserUnavailableFromJSON(json) {
      return UserUnavailableFromJSONTyped(json, false);
    }
    exports2.UserUnavailableFromJSON = UserUnavailableFromJSON;
    function UserUnavailableFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "message": json["message"] == null ? void 0 : json["message"],
        "reason": json["reason"]
      };
    }
    exports2.UserUnavailableFromJSONTyped = UserUnavailableFromJSONTyped;
    function UserUnavailableToJSON(json) {
      return UserUnavailableToJSONTyped(json, false);
    }
    exports2.UserUnavailableToJSON = UserUnavailableToJSON;
    function UserUnavailableToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "message": value["message"],
        "reason": value["reason"]
      };
    }
    exports2.UserUnavailableToJSONTyped = UserUnavailableToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserUnion.js
var require_UserUnion = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserUnion.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserUnionToJSONTyped = exports2.UserUnionToJSON = exports2.UserUnionFromJSONTyped = exports2.UserUnionFromJSON = void 0;
    var User_1 = require_User();
    var UserUnavailable_1 = require_UserUnavailable();
    function UserUnionFromJSON(json) {
      return UserUnionFromJSONTyped(json, false);
    }
    exports2.UserUnionFromJSON = UserUnionFromJSON;
    function UserUnionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      switch (json["__typename"]) {
        case "User":
          return Object.assign({}, (0, User_1.UserFromJSONTyped)(json, true), { typename: "User" });
        case "UserUnavailable":
          return Object.assign({}, (0, UserUnavailable_1.UserUnavailableFromJSONTyped)(json, true), { typename: "UserUnavailable" });
        default:
          throw new Error("No variant of UserUnion exists with 'typename=".concat(json["typename"], "'"));
      }
    }
    exports2.UserUnionFromJSONTyped = UserUnionFromJSONTyped;
    function UserUnionToJSON(json) {
      return UserUnionToJSONTyped(json, false);
    }
    exports2.UserUnionToJSON = UserUnionToJSON;
    function UserUnionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      switch (value["typename"]) {
        case "User":
          return Object.assign({}, (0, User_1.UserToJSON)(value), { typename: "User" });
        case "UserUnavailable":
          return Object.assign({}, (0, UserUnavailable_1.UserUnavailableToJSON)(value), { typename: "UserUnavailable" });
        default:
          throw new Error("No variant of UserUnion exists with 'typename=".concat(value["typename"], "'"));
      }
    }
    exports2.UserUnionToJSONTyped = UserUnionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResults.js
var require_UserResults = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResults.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserResultsToJSONTyped = exports2.UserResultsToJSON = exports2.UserResultsFromJSONTyped = exports2.UserResultsFromJSON = exports2.instanceOfUserResults = void 0;
    var UserUnion_1 = require_UserUnion();
    function instanceOfUserResults(value) {
      return true;
    }
    exports2.instanceOfUserResults = instanceOfUserResults;
    function UserResultsFromJSON(json) {
      return UserResultsFromJSONTyped(json, false);
    }
    exports2.UserResultsFromJSON = UserResultsFromJSON;
    function UserResultsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": json["result"] == null ? void 0 : (0, UserUnion_1.UserUnionFromJSON)(json["result"])
      };
    }
    exports2.UserResultsFromJSONTyped = UserResultsFromJSONTyped;
    function UserResultsToJSON(json) {
      return UserResultsToJSONTyped(json, false);
    }
    exports2.UserResultsToJSON = UserResultsToJSON;
    function UserResultsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, UserUnion_1.UserUnionToJSON)(value["result"])
      };
    }
    exports2.UserResultsToJSONTyped = UserResultsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResultCore.js
var require_UserResultCore = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResultCore.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserResultCoreToJSONTyped = exports2.UserResultCoreToJSON = exports2.UserResultCoreFromJSONTyped = exports2.UserResultCoreFromJSON = exports2.instanceOfUserResultCore = void 0;
    var UserResults_1 = require_UserResults();
    function instanceOfUserResultCore(value) {
      if (!("userResults" in value) || value["userResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserResultCore = instanceOfUserResultCore;
    function UserResultCoreFromJSON(json) {
      return UserResultCoreFromJSONTyped(json, false);
    }
    exports2.UserResultCoreFromJSON = UserResultCoreFromJSON;
    function UserResultCoreFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "userResults": (0, UserResults_1.UserResultsFromJSON)(json["user_results"])
      };
    }
    exports2.UserResultCoreFromJSONTyped = UserResultCoreFromJSONTyped;
    function UserResultCoreToJSON(json) {
      return UserResultCoreToJSONTyped(json, false);
    }
    exports2.UserResultCoreToJSON = UserResultCoreToJSON;
    function UserResultCoreToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "user_results": (0, UserResults_1.UserResultsToJSON)(value["userResults"])
      };
    }
    exports2.UserResultCoreToJSONTyped = UserResultCoreToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AdditionalMediaInfoCallToActionsUrl.js
var require_AdditionalMediaInfoCallToActionsUrl = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AdditionalMediaInfoCallToActionsUrl.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.AdditionalMediaInfoCallToActionsUrlToJSONTyped = exports2.AdditionalMediaInfoCallToActionsUrlToJSON = exports2.AdditionalMediaInfoCallToActionsUrlFromJSONTyped = exports2.AdditionalMediaInfoCallToActionsUrlFromJSON = exports2.instanceOfAdditionalMediaInfoCallToActionsUrl = void 0;
    function instanceOfAdditionalMediaInfoCallToActionsUrl(value) {
      if (!("url" in value) || value["url"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfAdditionalMediaInfoCallToActionsUrl = instanceOfAdditionalMediaInfoCallToActionsUrl;
    function AdditionalMediaInfoCallToActionsUrlFromJSON(json) {
      return AdditionalMediaInfoCallToActionsUrlFromJSONTyped(json, false);
    }
    exports2.AdditionalMediaInfoCallToActionsUrlFromJSON = AdditionalMediaInfoCallToActionsUrlFromJSON;
    function AdditionalMediaInfoCallToActionsUrlFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "url": json["url"]
      };
    }
    exports2.AdditionalMediaInfoCallToActionsUrlFromJSONTyped = AdditionalMediaInfoCallToActionsUrlFromJSONTyped;
    function AdditionalMediaInfoCallToActionsUrlToJSON(json) {
      return AdditionalMediaInfoCallToActionsUrlToJSONTyped(json, false);
    }
    exports2.AdditionalMediaInfoCallToActionsUrlToJSON = AdditionalMediaInfoCallToActionsUrlToJSON;
    function AdditionalMediaInfoCallToActionsUrlToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "url": value["url"]
      };
    }
    exports2.AdditionalMediaInfoCallToActionsUrlToJSONTyped = AdditionalMediaInfoCallToActionsUrlToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AdditionalMediaInfoCallToActions.js
var require_AdditionalMediaInfoCallToActions = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AdditionalMediaInfoCallToActions.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.AdditionalMediaInfoCallToActionsToJSONTyped = exports2.AdditionalMediaInfoCallToActionsToJSON = exports2.AdditionalMediaInfoCallToActionsFromJSONTyped = exports2.AdditionalMediaInfoCallToActionsFromJSON = exports2.instanceOfAdditionalMediaInfoCallToActions = void 0;
    var AdditionalMediaInfoCallToActionsUrl_1 = require_AdditionalMediaInfoCallToActionsUrl();
    function instanceOfAdditionalMediaInfoCallToActions(value) {
      return true;
    }
    exports2.instanceOfAdditionalMediaInfoCallToActions = instanceOfAdditionalMediaInfoCallToActions;
    function AdditionalMediaInfoCallToActionsFromJSON(json) {
      return AdditionalMediaInfoCallToActionsFromJSONTyped(json, false);
    }
    exports2.AdditionalMediaInfoCallToActionsFromJSON = AdditionalMediaInfoCallToActionsFromJSON;
    function AdditionalMediaInfoCallToActionsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "visitSite": json["visit_site"] == null ? void 0 : (0, AdditionalMediaInfoCallToActionsUrl_1.AdditionalMediaInfoCallToActionsUrlFromJSON)(json["visit_site"]),
        "watchNow": json["watch_now"] == null ? void 0 : (0, AdditionalMediaInfoCallToActionsUrl_1.AdditionalMediaInfoCallToActionsUrlFromJSON)(json["watch_now"])
      };
    }
    exports2.AdditionalMediaInfoCallToActionsFromJSONTyped = AdditionalMediaInfoCallToActionsFromJSONTyped;
    function AdditionalMediaInfoCallToActionsToJSON(json) {
      return AdditionalMediaInfoCallToActionsToJSONTyped(json, false);
    }
    exports2.AdditionalMediaInfoCallToActionsToJSON = AdditionalMediaInfoCallToActionsToJSON;
    function AdditionalMediaInfoCallToActionsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "visit_site": (0, AdditionalMediaInfoCallToActionsUrl_1.AdditionalMediaInfoCallToActionsUrlToJSON)(value["visitSite"]),
        "watch_now": (0, AdditionalMediaInfoCallToActionsUrl_1.AdditionalMediaInfoCallToActionsUrlToJSON)(value["watchNow"])
      };
    }
    exports2.AdditionalMediaInfoCallToActionsToJSONTyped = AdditionalMediaInfoCallToActionsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AdditionalMediaInfo.js
var require_AdditionalMediaInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AdditionalMediaInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.AdditionalMediaInfoToJSONTyped = exports2.AdditionalMediaInfoToJSON = exports2.AdditionalMediaInfoFromJSONTyped = exports2.AdditionalMediaInfoFromJSON = exports2.instanceOfAdditionalMediaInfo = void 0;
    var UserResultCore_1 = require_UserResultCore();
    var AdditionalMediaInfoCallToActions_1 = require_AdditionalMediaInfoCallToActions();
    function instanceOfAdditionalMediaInfo(value) {
      if (!("monetizable" in value) || value["monetizable"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfAdditionalMediaInfo = instanceOfAdditionalMediaInfo;
    function AdditionalMediaInfoFromJSON(json) {
      return AdditionalMediaInfoFromJSONTyped(json, false);
    }
    exports2.AdditionalMediaInfoFromJSON = AdditionalMediaInfoFromJSON;
    function AdditionalMediaInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "callToActions": json["call_to_actions"] == null ? void 0 : (0, AdditionalMediaInfoCallToActions_1.AdditionalMediaInfoCallToActionsFromJSON)(json["call_to_actions"]),
        "description": json["description"] == null ? void 0 : json["description"],
        "embeddable": json["embeddable"] == null ? void 0 : json["embeddable"],
        "monetizable": json["monetizable"],
        "sourceUser": json["source_user"] == null ? void 0 : (0, UserResultCore_1.UserResultCoreFromJSON)(json["source_user"]),
        "title": json["title"] == null ? void 0 : json["title"]
      };
    }
    exports2.AdditionalMediaInfoFromJSONTyped = AdditionalMediaInfoFromJSONTyped;
    function AdditionalMediaInfoToJSON(json) {
      return AdditionalMediaInfoToJSONTyped(json, false);
    }
    exports2.AdditionalMediaInfoToJSON = AdditionalMediaInfoToJSON;
    function AdditionalMediaInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "call_to_actions": (0, AdditionalMediaInfoCallToActions_1.AdditionalMediaInfoCallToActionsToJSON)(value["callToActions"]),
        "description": value["description"],
        "embeddable": value["embeddable"],
        "monetizable": value["monetizable"],
        "source_user": (0, UserResultCore_1.UserResultCoreToJSON)(value["sourceUser"]),
        "title": value["title"]
      };
    }
    exports2.AdditionalMediaInfoToJSONTyped = AdditionalMediaInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AllowDownloadStatus.js
var require_AllowDownloadStatus = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AllowDownloadStatus.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.AllowDownloadStatusToJSONTyped = exports2.AllowDownloadStatusToJSON = exports2.AllowDownloadStatusFromJSONTyped = exports2.AllowDownloadStatusFromJSON = exports2.instanceOfAllowDownloadStatus = void 0;
    function instanceOfAllowDownloadStatus(value) {
      return true;
    }
    exports2.instanceOfAllowDownloadStatus = instanceOfAllowDownloadStatus;
    function AllowDownloadStatusFromJSON(json) {
      return AllowDownloadStatusFromJSONTyped(json, false);
    }
    exports2.AllowDownloadStatusFromJSON = AllowDownloadStatusFromJSON;
    function AllowDownloadStatusFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "allowDownload": json["allow_download"] == null ? void 0 : json["allow_download"]
      };
    }
    exports2.AllowDownloadStatusFromJSONTyped = AllowDownloadStatusFromJSONTyped;
    function AllowDownloadStatusToJSON(json) {
      return AllowDownloadStatusToJSONTyped(json, false);
    }
    exports2.AllowDownloadStatusToJSON = AllowDownloadStatusToJSON;
    function AllowDownloadStatusToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "allow_download": value["allowDownload"]
      };
    }
    exports2.AllowDownloadStatusToJSONTyped = AllowDownloadStatusToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleLifecycleState.js
var require_ArticleLifecycleState = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleLifecycleState.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleLifecycleStateToJSONTyped = exports2.ArticleLifecycleStateToJSON = exports2.ArticleLifecycleStateFromJSONTyped = exports2.ArticleLifecycleStateFromJSON = exports2.instanceOfArticleLifecycleState = void 0;
    function instanceOfArticleLifecycleState(value) {
      if (!("modifiedAtSecs" in value) || value["modifiedAtSecs"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleLifecycleState = instanceOfArticleLifecycleState;
    function ArticleLifecycleStateFromJSON(json) {
      return ArticleLifecycleStateFromJSONTyped(json, false);
    }
    exports2.ArticleLifecycleStateFromJSON = ArticleLifecycleStateFromJSON;
    function ArticleLifecycleStateFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "modifiedAtSecs": json["modified_at_secs"]
      };
    }
    exports2.ArticleLifecycleStateFromJSONTyped = ArticleLifecycleStateFromJSONTyped;
    function ArticleLifecycleStateToJSON(json) {
      return ArticleLifecycleStateToJSONTyped(json, false);
    }
    exports2.ArticleLifecycleStateToJSON = ArticleLifecycleStateToJSON;
    function ArticleLifecycleStateToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "modified_at_secs": value["modifiedAtSecs"]
      };
    }
    exports2.ArticleLifecycleStateToJSONTyped = ArticleLifecycleStateToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMediaColorInfoPaletteRGB.js
var require_ArticleCoverMediaColorInfoPaletteRGB = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMediaColorInfoPaletteRGB.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleCoverMediaColorInfoPaletteRGBToJSONTyped = exports2.ArticleCoverMediaColorInfoPaletteRGBToJSON = exports2.ArticleCoverMediaColorInfoPaletteRGBFromJSONTyped = exports2.ArticleCoverMediaColorInfoPaletteRGBFromJSON = exports2.instanceOfArticleCoverMediaColorInfoPaletteRGB = void 0;
    function instanceOfArticleCoverMediaColorInfoPaletteRGB(value) {
      if (!("blue" in value) || value["blue"] === void 0)
        return false;
      if (!("green" in value) || value["green"] === void 0)
        return false;
      if (!("red" in value) || value["red"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleCoverMediaColorInfoPaletteRGB = instanceOfArticleCoverMediaColorInfoPaletteRGB;
    function ArticleCoverMediaColorInfoPaletteRGBFromJSON(json) {
      return ArticleCoverMediaColorInfoPaletteRGBFromJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaColorInfoPaletteRGBFromJSON = ArticleCoverMediaColorInfoPaletteRGBFromJSON;
    function ArticleCoverMediaColorInfoPaletteRGBFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "blue": json["blue"],
        "green": json["green"],
        "red": json["red"]
      };
    }
    exports2.ArticleCoverMediaColorInfoPaletteRGBFromJSONTyped = ArticleCoverMediaColorInfoPaletteRGBFromJSONTyped;
    function ArticleCoverMediaColorInfoPaletteRGBToJSON(json) {
      return ArticleCoverMediaColorInfoPaletteRGBToJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaColorInfoPaletteRGBToJSON = ArticleCoverMediaColorInfoPaletteRGBToJSON;
    function ArticleCoverMediaColorInfoPaletteRGBToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "blue": value["blue"],
        "green": value["green"],
        "red": value["red"]
      };
    }
    exports2.ArticleCoverMediaColorInfoPaletteRGBToJSONTyped = ArticleCoverMediaColorInfoPaletteRGBToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMediaColorInfoPalette.js
var require_ArticleCoverMediaColorInfoPalette = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMediaColorInfoPalette.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleCoverMediaColorInfoPaletteToJSONTyped = exports2.ArticleCoverMediaColorInfoPaletteToJSON = exports2.ArticleCoverMediaColorInfoPaletteFromJSONTyped = exports2.ArticleCoverMediaColorInfoPaletteFromJSON = exports2.instanceOfArticleCoverMediaColorInfoPalette = void 0;
    var ArticleCoverMediaColorInfoPaletteRGB_1 = require_ArticleCoverMediaColorInfoPaletteRGB();
    function instanceOfArticleCoverMediaColorInfoPalette(value) {
      if (!("percentage" in value) || value["percentage"] === void 0)
        return false;
      if (!("rgb" in value) || value["rgb"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleCoverMediaColorInfoPalette = instanceOfArticleCoverMediaColorInfoPalette;
    function ArticleCoverMediaColorInfoPaletteFromJSON(json) {
      return ArticleCoverMediaColorInfoPaletteFromJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaColorInfoPaletteFromJSON = ArticleCoverMediaColorInfoPaletteFromJSON;
    function ArticleCoverMediaColorInfoPaletteFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "percentage": json["percentage"],
        "rgb": (0, ArticleCoverMediaColorInfoPaletteRGB_1.ArticleCoverMediaColorInfoPaletteRGBFromJSON)(json["rgb"])
      };
    }
    exports2.ArticleCoverMediaColorInfoPaletteFromJSONTyped = ArticleCoverMediaColorInfoPaletteFromJSONTyped;
    function ArticleCoverMediaColorInfoPaletteToJSON(json) {
      return ArticleCoverMediaColorInfoPaletteToJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaColorInfoPaletteToJSON = ArticleCoverMediaColorInfoPaletteToJSON;
    function ArticleCoverMediaColorInfoPaletteToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "percentage": value["percentage"],
        "rgb": (0, ArticleCoverMediaColorInfoPaletteRGB_1.ArticleCoverMediaColorInfoPaletteRGBToJSON)(value["rgb"])
      };
    }
    exports2.ArticleCoverMediaColorInfoPaletteToJSONTyped = ArticleCoverMediaColorInfoPaletteToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMediaColorInfo.js
var require_ArticleCoverMediaColorInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMediaColorInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleCoverMediaColorInfoToJSONTyped = exports2.ArticleCoverMediaColorInfoToJSON = exports2.ArticleCoverMediaColorInfoFromJSONTyped = exports2.ArticleCoverMediaColorInfoFromJSON = exports2.instanceOfArticleCoverMediaColorInfo = void 0;
    var ArticleCoverMediaColorInfoPalette_1 = require_ArticleCoverMediaColorInfoPalette();
    function instanceOfArticleCoverMediaColorInfo(value) {
      if (!("palette" in value) || value["palette"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleCoverMediaColorInfo = instanceOfArticleCoverMediaColorInfo;
    function ArticleCoverMediaColorInfoFromJSON(json) {
      return ArticleCoverMediaColorInfoFromJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaColorInfoFromJSON = ArticleCoverMediaColorInfoFromJSON;
    function ArticleCoverMediaColorInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "palette": json["palette"].map(ArticleCoverMediaColorInfoPalette_1.ArticleCoverMediaColorInfoPaletteFromJSON)
      };
    }
    exports2.ArticleCoverMediaColorInfoFromJSONTyped = ArticleCoverMediaColorInfoFromJSONTyped;
    function ArticleCoverMediaColorInfoToJSON(json) {
      return ArticleCoverMediaColorInfoToJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaColorInfoToJSON = ArticleCoverMediaColorInfoToJSON;
    function ArticleCoverMediaColorInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "palette": value["palette"].map(ArticleCoverMediaColorInfoPalette_1.ArticleCoverMediaColorInfoPaletteToJSON)
      };
    }
    exports2.ArticleCoverMediaColorInfoToJSONTyped = ArticleCoverMediaColorInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMediaInfo.js
var require_ArticleCoverMediaInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMediaInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleCoverMediaInfoToJSONTyped = exports2.ArticleCoverMediaInfoToJSON = exports2.ArticleCoverMediaInfoFromJSONTyped = exports2.ArticleCoverMediaInfoFromJSON = exports2.instanceOfArticleCoverMediaInfo = void 0;
    var TypeName_1 = require_TypeName();
    var ArticleCoverMediaColorInfo_1 = require_ArticleCoverMediaColorInfo();
    function instanceOfArticleCoverMediaInfo(value) {
      if (!("colorInfo" in value) || value["colorInfo"] === void 0)
        return false;
      if (!("originalImgHeight" in value) || value["originalImgHeight"] === void 0)
        return false;
      if (!("originalImgUrl" in value) || value["originalImgUrl"] === void 0)
        return false;
      if (!("originalImgWidth" in value) || value["originalImgWidth"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleCoverMediaInfo = instanceOfArticleCoverMediaInfo;
    function ArticleCoverMediaInfoFromJSON(json) {
      return ArticleCoverMediaInfoFromJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaInfoFromJSON = ArticleCoverMediaInfoFromJSON;
    function ArticleCoverMediaInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": json["__typename"] == null ? void 0 : (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "colorInfo": (0, ArticleCoverMediaColorInfo_1.ArticleCoverMediaColorInfoFromJSON)(json["color_info"]),
        "originalImgHeight": json["original_img_height"],
        "originalImgUrl": json["original_img_url"],
        "originalImgWidth": json["original_img_width"]
      };
    }
    exports2.ArticleCoverMediaInfoFromJSONTyped = ArticleCoverMediaInfoFromJSONTyped;
    function ArticleCoverMediaInfoToJSON(json) {
      return ArticleCoverMediaInfoToJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaInfoToJSON = ArticleCoverMediaInfoToJSON;
    function ArticleCoverMediaInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "color_info": (0, ArticleCoverMediaColorInfo_1.ArticleCoverMediaColorInfoToJSON)(value["colorInfo"]),
        "original_img_height": value["originalImgHeight"],
        "original_img_url": value["originalImgUrl"],
        "original_img_width": value["originalImgWidth"]
      };
    }
    exports2.ArticleCoverMediaInfoToJSONTyped = ArticleCoverMediaInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMedia.js
var require_ArticleCoverMedia = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleCoverMedia.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleCoverMediaToJSONTyped = exports2.ArticleCoverMediaToJSON = exports2.ArticleCoverMediaFromJSONTyped = exports2.ArticleCoverMediaFromJSON = exports2.instanceOfArticleCoverMedia = void 0;
    var ArticleCoverMediaInfo_1 = require_ArticleCoverMediaInfo();
    function instanceOfArticleCoverMedia(value) {
      if (!("id" in value) || value["id"] === void 0)
        return false;
      if (!("mediaId" in value) || value["mediaId"] === void 0)
        return false;
      if (!("mediaInfo" in value) || value["mediaInfo"] === void 0)
        return false;
      if (!("mediaKey" in value) || value["mediaKey"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleCoverMedia = instanceOfArticleCoverMedia;
    function ArticleCoverMediaFromJSON(json) {
      return ArticleCoverMediaFromJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaFromJSON = ArticleCoverMediaFromJSON;
    function ArticleCoverMediaFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "id": json["id"],
        "mediaId": json["media_id"],
        "mediaInfo": (0, ArticleCoverMediaInfo_1.ArticleCoverMediaInfoFromJSON)(json["media_info"]),
        "mediaKey": json["media_key"]
      };
    }
    exports2.ArticleCoverMediaFromJSONTyped = ArticleCoverMediaFromJSONTyped;
    function ArticleCoverMediaToJSON(json) {
      return ArticleCoverMediaToJSONTyped(json, false);
    }
    exports2.ArticleCoverMediaToJSON = ArticleCoverMediaToJSON;
    function ArticleCoverMediaToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "id": value["id"],
        "media_id": value["mediaId"],
        "media_info": (0, ArticleCoverMediaInfo_1.ArticleCoverMediaInfoToJSON)(value["mediaInfo"]),
        "media_key": value["mediaKey"]
      };
    }
    exports2.ArticleCoverMediaToJSONTyped = ArticleCoverMediaToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleMetadata.js
var require_ArticleMetadata = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleMetadata.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleMetadataToJSONTyped = exports2.ArticleMetadataToJSON = exports2.ArticleMetadataFromJSONTyped = exports2.ArticleMetadataFromJSON = exports2.instanceOfArticleMetadata = void 0;
    function instanceOfArticleMetadata(value) {
      if (!("firstPublishedAtSecs" in value) || value["firstPublishedAtSecs"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleMetadata = instanceOfArticleMetadata;
    function ArticleMetadataFromJSON(json) {
      return ArticleMetadataFromJSONTyped(json, false);
    }
    exports2.ArticleMetadataFromJSON = ArticleMetadataFromJSON;
    function ArticleMetadataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "firstPublishedAtSecs": json["first_published_at_secs"]
      };
    }
    exports2.ArticleMetadataFromJSONTyped = ArticleMetadataFromJSONTyped;
    function ArticleMetadataToJSON(json) {
      return ArticleMetadataToJSONTyped(json, false);
    }
    exports2.ArticleMetadataToJSON = ArticleMetadataToJSON;
    function ArticleMetadataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "first_published_at_secs": value["firstPublishedAtSecs"]
      };
    }
    exports2.ArticleMetadataToJSONTyped = ArticleMetadataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleResult.js
var require_ArticleResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleResultToJSONTyped = exports2.ArticleResultToJSON = exports2.ArticleResultFromJSONTyped = exports2.ArticleResultFromJSON = exports2.instanceOfArticleResult = void 0;
    var ArticleLifecycleState_1 = require_ArticleLifecycleState();
    var ArticleCoverMedia_1 = require_ArticleCoverMedia();
    var ArticleMetadata_1 = require_ArticleMetadata();
    function instanceOfArticleResult(value) {
      if (!("coverMedia" in value) || value["coverMedia"] === void 0)
        return false;
      if (!("id" in value) || value["id"] === void 0)
        return false;
      if (!("metadata" in value) || value["metadata"] === void 0)
        return false;
      if (!("previewText" in value) || value["previewText"] === void 0)
        return false;
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      if (!("title" in value) || value["title"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleResult = instanceOfArticleResult;
    function ArticleResultFromJSON(json) {
      return ArticleResultFromJSONTyped(json, false);
    }
    exports2.ArticleResultFromJSON = ArticleResultFromJSON;
    function ArticleResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "coverMedia": (0, ArticleCoverMedia_1.ArticleCoverMediaFromJSON)(json["cover_media"]),
        "id": json["id"],
        "lifecycleState": json["lifecycle_state"] == null ? void 0 : (0, ArticleLifecycleState_1.ArticleLifecycleStateFromJSON)(json["lifecycle_state"]),
        "metadata": (0, ArticleMetadata_1.ArticleMetadataFromJSON)(json["metadata"]),
        "previewText": json["preview_text"],
        "restId": json["rest_id"],
        "title": json["title"]
      };
    }
    exports2.ArticleResultFromJSONTyped = ArticleResultFromJSONTyped;
    function ArticleResultToJSON(json) {
      return ArticleResultToJSONTyped(json, false);
    }
    exports2.ArticleResultToJSON = ArticleResultToJSON;
    function ArticleResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "cover_media": (0, ArticleCoverMedia_1.ArticleCoverMediaToJSON)(value["coverMedia"]),
        "id": value["id"],
        "lifecycle_state": (0, ArticleLifecycleState_1.ArticleLifecycleStateToJSON)(value["lifecycleState"]),
        "metadata": (0, ArticleMetadata_1.ArticleMetadataToJSON)(value["metadata"]),
        "preview_text": value["previewText"],
        "rest_id": value["restId"],
        "title": value["title"]
      };
    }
    exports2.ArticleResultToJSONTyped = ArticleResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleResults.js
var require_ArticleResults = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ArticleResults.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleResultsToJSONTyped = exports2.ArticleResultsToJSON = exports2.ArticleResultsFromJSONTyped = exports2.ArticleResultsFromJSON = exports2.instanceOfArticleResults = void 0;
    var ArticleResult_1 = require_ArticleResult();
    function instanceOfArticleResults(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticleResults = instanceOfArticleResults;
    function ArticleResultsFromJSON(json) {
      return ArticleResultsFromJSONTyped(json, false);
    }
    exports2.ArticleResultsFromJSON = ArticleResultsFromJSON;
    function ArticleResultsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, ArticleResult_1.ArticleResultFromJSON)(json["result"])
      };
    }
    exports2.ArticleResultsFromJSONTyped = ArticleResultsFromJSONTyped;
    function ArticleResultsToJSON(json) {
      return ArticleResultsToJSONTyped(json, false);
    }
    exports2.ArticleResultsToJSON = ArticleResultsToJSON;
    function ArticleResultsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, ArticleResult_1.ArticleResultToJSON)(value["result"])
      };
    }
    exports2.ArticleResultsToJSONTyped = ArticleResultsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Article.js
var require_Article = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Article.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ArticleToJSONTyped = exports2.ArticleToJSON = exports2.ArticleFromJSONTyped = exports2.ArticleFromJSON = exports2.instanceOfArticle = void 0;
    var ArticleResults_1 = require_ArticleResults();
    function instanceOfArticle(value) {
      if (!("articleResults" in value) || value["articleResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfArticle = instanceOfArticle;
    function ArticleFromJSON(json) {
      return ArticleFromJSONTyped(json, false);
    }
    exports2.ArticleFromJSON = ArticleFromJSON;
    function ArticleFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "articleResults": (0, ArticleResults_1.ArticleResultsFromJSON)(json["article_results"])
      };
    }
    exports2.ArticleFromJSONTyped = ArticleFromJSONTyped;
    function ArticleToJSON(json) {
      return ArticleToJSONTyped(json, false);
    }
    exports2.ArticleToJSON = ArticleToJSON;
    function ArticleToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "article_results": (0, ArticleResults_1.ArticleResultsToJSON)(value["articleResults"])
      };
    }
    exports2.ArticleToJSONTyped = ArticleToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PrimaryCommunityTopic.js
var require_PrimaryCommunityTopic = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PrimaryCommunityTopic.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PrimaryCommunityTopicToJSONTyped = exports2.PrimaryCommunityTopicToJSON = exports2.PrimaryCommunityTopicFromJSONTyped = exports2.PrimaryCommunityTopicFromJSON = exports2.instanceOfPrimaryCommunityTopic = void 0;
    function instanceOfPrimaryCommunityTopic(value) {
      if (!("topicId" in value) || value["topicId"] === void 0)
        return false;
      if (!("topicName" in value) || value["topicName"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPrimaryCommunityTopic = instanceOfPrimaryCommunityTopic;
    function PrimaryCommunityTopicFromJSON(json) {
      return PrimaryCommunityTopicFromJSONTyped(json, false);
    }
    exports2.PrimaryCommunityTopicFromJSON = PrimaryCommunityTopicFromJSON;
    function PrimaryCommunityTopicFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "topicId": json["topic_id"],
        "topicName": json["topic_name"]
      };
    }
    exports2.PrimaryCommunityTopicFromJSONTyped = PrimaryCommunityTopicFromJSONTyped;
    function PrimaryCommunityTopicToJSON(json) {
      return PrimaryCommunityTopicToJSONTyped(json, false);
    }
    exports2.PrimaryCommunityTopicToJSON = PrimaryCommunityTopicToJSON;
    function PrimaryCommunityTopicToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "topic_id": value["topicId"],
        "topic_name": value["topicName"]
      };
    }
    exports2.PrimaryCommunityTopicToJSONTyped = PrimaryCommunityTopicToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityJoinAction.js
var require_CommunityJoinAction = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityJoinAction.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityJoinActionToJSONTyped = exports2.CommunityJoinActionToJSON = exports2.CommunityJoinActionFromJSONTyped = exports2.CommunityJoinActionFromJSON = exports2.instanceOfCommunityJoinAction = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfCommunityJoinAction(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityJoinAction = instanceOfCommunityJoinAction;
    function CommunityJoinActionFromJSON(json) {
      return CommunityJoinActionFromJSONTyped(json, false);
    }
    exports2.CommunityJoinActionFromJSON = CommunityJoinActionFromJSON;
    function CommunityJoinActionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"])
      };
    }
    exports2.CommunityJoinActionFromJSONTyped = CommunityJoinActionFromJSONTyped;
    function CommunityJoinActionToJSON(json) {
      return CommunityJoinActionToJSONTyped(json, false);
    }
    exports2.CommunityJoinActionToJSON = CommunityJoinActionToJSON;
    function CommunityJoinActionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"])
      };
    }
    exports2.CommunityJoinActionToJSONTyped = CommunityJoinActionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityJoinActionUnavailable.js
var require_CommunityJoinActionUnavailable = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityJoinActionUnavailable.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityJoinActionUnavailableToJSONTyped = exports2.CommunityJoinActionUnavailableToJSON = exports2.CommunityJoinActionUnavailableFromJSONTyped = exports2.CommunityJoinActionUnavailableFromJSON = exports2.instanceOfCommunityJoinActionUnavailable = exports2.CommunityJoinActionUnavailableReasonEnum = void 0;
    var TypeName_1 = require_TypeName();
    exports2.CommunityJoinActionUnavailableReasonEnum = {
      ViewerRequestRequired: "ViewerRequestRequired"
    };
    function instanceOfCommunityJoinActionUnavailable(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("message" in value) || value["message"] === void 0)
        return false;
      if (!("reason" in value) || value["reason"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityJoinActionUnavailable = instanceOfCommunityJoinActionUnavailable;
    function CommunityJoinActionUnavailableFromJSON(json) {
      return CommunityJoinActionUnavailableFromJSONTyped(json, false);
    }
    exports2.CommunityJoinActionUnavailableFromJSON = CommunityJoinActionUnavailableFromJSON;
    function CommunityJoinActionUnavailableFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "message": json["message"],
        "reason": json["reason"]
      };
    }
    exports2.CommunityJoinActionUnavailableFromJSONTyped = CommunityJoinActionUnavailableFromJSONTyped;
    function CommunityJoinActionUnavailableToJSON(json) {
      return CommunityJoinActionUnavailableToJSONTyped(json, false);
    }
    exports2.CommunityJoinActionUnavailableToJSON = CommunityJoinActionUnavailableToJSON;
    function CommunityJoinActionUnavailableToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "message": value["message"],
        "reason": value["reason"]
      };
    }
    exports2.CommunityJoinActionUnavailableToJSONTyped = CommunityJoinActionUnavailableToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityJoinActionResultUnion.js
var require_CommunityJoinActionResultUnion = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityJoinActionResultUnion.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityJoinActionResultUnionToJSONTyped = exports2.CommunityJoinActionResultUnionToJSON = exports2.CommunityJoinActionResultUnionFromJSONTyped = exports2.CommunityJoinActionResultUnionFromJSON = void 0;
    var CommunityJoinAction_1 = require_CommunityJoinAction();
    var CommunityJoinActionUnavailable_1 = require_CommunityJoinActionUnavailable();
    function CommunityJoinActionResultUnionFromJSON(json) {
      return CommunityJoinActionResultUnionFromJSONTyped(json, false);
    }
    exports2.CommunityJoinActionResultUnionFromJSON = CommunityJoinActionResultUnionFromJSON;
    function CommunityJoinActionResultUnionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      switch (json["__typename"]) {
        case "CommunityJoinAction":
          return Object.assign({}, (0, CommunityJoinAction_1.CommunityJoinActionFromJSONTyped)(json, true), { typename: "CommunityJoinAction" });
        case "CommunityJoinActionUnavailable":
          return Object.assign({}, (0, CommunityJoinActionUnavailable_1.CommunityJoinActionUnavailableFromJSONTyped)(json, true), { typename: "CommunityJoinActionUnavailable" });
        default:
          throw new Error("No variant of CommunityJoinActionResultUnion exists with 'typename=".concat(json["typename"], "'"));
      }
    }
    exports2.CommunityJoinActionResultUnionFromJSONTyped = CommunityJoinActionResultUnionFromJSONTyped;
    function CommunityJoinActionResultUnionToJSON(json) {
      return CommunityJoinActionResultUnionToJSONTyped(json, false);
    }
    exports2.CommunityJoinActionResultUnionToJSON = CommunityJoinActionResultUnionToJSON;
    function CommunityJoinActionResultUnionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      switch (value["typename"]) {
        case "CommunityJoinAction":
          return Object.assign({}, (0, CommunityJoinAction_1.CommunityJoinActionToJSON)(value), { typename: "CommunityJoinAction" });
        case "CommunityJoinActionUnavailable":
          return Object.assign({}, (0, CommunityJoinActionUnavailable_1.CommunityJoinActionUnavailableToJSON)(value), { typename: "CommunityJoinActionUnavailable" });
        default:
          throw new Error("No variant of CommunityJoinActionResultUnion exists with 'typename=".concat(value["typename"], "'"));
      }
    }
    exports2.CommunityJoinActionResultUnionToJSONTyped = CommunityJoinActionResultUnionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityDeleteActionResult.js
var require_CommunityDeleteActionResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityDeleteActionResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityDeleteActionResultToJSONTyped = exports2.CommunityDeleteActionResultToJSON = exports2.CommunityDeleteActionResultFromJSONTyped = exports2.CommunityDeleteActionResultFromJSON = exports2.instanceOfCommunityDeleteActionResult = exports2.CommunityDeleteActionResultReasonEnum = void 0;
    var TypeName_1 = require_TypeName();
    exports2.CommunityDeleteActionResultReasonEnum = {
      Unavailable: "Unavailable"
    };
    function instanceOfCommunityDeleteActionResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("reason" in value) || value["reason"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityDeleteActionResult = instanceOfCommunityDeleteActionResult;
    function CommunityDeleteActionResultFromJSON(json) {
      return CommunityDeleteActionResultFromJSONTyped(json, false);
    }
    exports2.CommunityDeleteActionResultFromJSON = CommunityDeleteActionResultFromJSON;
    function CommunityDeleteActionResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "reason": json["reason"]
      };
    }
    exports2.CommunityDeleteActionResultFromJSONTyped = CommunityDeleteActionResultFromJSONTyped;
    function CommunityDeleteActionResultToJSON(json) {
      return CommunityDeleteActionResultToJSONTyped(json, false);
    }
    exports2.CommunityDeleteActionResultToJSON = CommunityDeleteActionResultToJSON;
    function CommunityDeleteActionResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "reason": value["reason"]
      };
    }
    exports2.CommunityDeleteActionResultToJSONTyped = CommunityDeleteActionResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityPinActionResult.js
var require_CommunityPinActionResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityPinActionResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityPinActionResultToJSONTyped = exports2.CommunityPinActionResultToJSON = exports2.CommunityPinActionResultFromJSONTyped = exports2.CommunityPinActionResultFromJSON = exports2.instanceOfCommunityPinActionResult = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfCommunityPinActionResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityPinActionResult = instanceOfCommunityPinActionResult;
    function CommunityPinActionResultFromJSON(json) {
      return CommunityPinActionResultFromJSONTyped(json, false);
    }
    exports2.CommunityPinActionResultFromJSON = CommunityPinActionResultFromJSON;
    function CommunityPinActionResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"])
      };
    }
    exports2.CommunityPinActionResultFromJSONTyped = CommunityPinActionResultFromJSONTyped;
    function CommunityPinActionResultToJSON(json) {
      return CommunityPinActionResultToJSONTyped(json, false);
    }
    exports2.CommunityPinActionResultToJSON = CommunityPinActionResultToJSON;
    function CommunityPinActionResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"])
      };
    }
    exports2.CommunityPinActionResultToJSONTyped = CommunityPinActionResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityLeaveActionResult.js
var require_CommunityLeaveActionResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityLeaveActionResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityLeaveActionResultToJSONTyped = exports2.CommunityLeaveActionResultToJSON = exports2.CommunityLeaveActionResultFromJSONTyped = exports2.CommunityLeaveActionResultFromJSON = exports2.instanceOfCommunityLeaveActionResult = exports2.CommunityLeaveActionResultReasonEnum = void 0;
    var TypeName_1 = require_TypeName();
    exports2.CommunityLeaveActionResultReasonEnum = {
      ViewerNotMember: "ViewerNotMember"
    };
    function instanceOfCommunityLeaveActionResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("message" in value) || value["message"] === void 0)
        return false;
      if (!("reason" in value) || value["reason"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityLeaveActionResult = instanceOfCommunityLeaveActionResult;
    function CommunityLeaveActionResultFromJSON(json) {
      return CommunityLeaveActionResultFromJSONTyped(json, false);
    }
    exports2.CommunityLeaveActionResultFromJSON = CommunityLeaveActionResultFromJSON;
    function CommunityLeaveActionResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "message": json["message"],
        "reason": json["reason"]
      };
    }
    exports2.CommunityLeaveActionResultFromJSONTyped = CommunityLeaveActionResultFromJSONTyped;
    function CommunityLeaveActionResultToJSON(json) {
      return CommunityLeaveActionResultToJSONTyped(json, false);
    }
    exports2.CommunityLeaveActionResultToJSON = CommunityLeaveActionResultToJSON;
    function CommunityLeaveActionResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "message": value["message"],
        "reason": value["reason"]
      };
    }
    exports2.CommunityLeaveActionResultToJSONTyped = CommunityLeaveActionResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityUnpinActionResult.js
var require_CommunityUnpinActionResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityUnpinActionResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityUnpinActionResultToJSONTyped = exports2.CommunityUnpinActionResultToJSON = exports2.CommunityUnpinActionResultFromJSONTyped = exports2.CommunityUnpinActionResultFromJSON = exports2.instanceOfCommunityUnpinActionResult = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfCommunityUnpinActionResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityUnpinActionResult = instanceOfCommunityUnpinActionResult;
    function CommunityUnpinActionResultFromJSON(json) {
      return CommunityUnpinActionResultFromJSONTyped(json, false);
    }
    exports2.CommunityUnpinActionResultFromJSON = CommunityUnpinActionResultFromJSON;
    function CommunityUnpinActionResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"])
      };
    }
    exports2.CommunityUnpinActionResultFromJSONTyped = CommunityUnpinActionResultFromJSONTyped;
    function CommunityUnpinActionResultToJSON(json) {
      return CommunityUnpinActionResultToJSONTyped(json, false);
    }
    exports2.CommunityUnpinActionResultToJSON = CommunityUnpinActionResultToJSON;
    function CommunityUnpinActionResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"])
      };
    }
    exports2.CommunityUnpinActionResultToJSONTyped = CommunityUnpinActionResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityActions.js
var require_CommunityActions = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityActions.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityActionsToJSONTyped = exports2.CommunityActionsToJSON = exports2.CommunityActionsFromJSONTyped = exports2.CommunityActionsFromJSON = exports2.instanceOfCommunityActions = void 0;
    var CommunityJoinActionResultUnion_1 = require_CommunityJoinActionResultUnion();
    var CommunityDeleteActionResult_1 = require_CommunityDeleteActionResult();
    var CommunityPinActionResult_1 = require_CommunityPinActionResult();
    var CommunityLeaveActionResult_1 = require_CommunityLeaveActionResult();
    var CommunityUnpinActionResult_1 = require_CommunityUnpinActionResult();
    function instanceOfCommunityActions(value) {
      return true;
    }
    exports2.instanceOfCommunityActions = instanceOfCommunityActions;
    function CommunityActionsFromJSON(json) {
      return CommunityActionsFromJSONTyped(json, false);
    }
    exports2.CommunityActionsFromJSON = CommunityActionsFromJSON;
    function CommunityActionsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "deleteActionResult": json["delete_action_result"] == null ? void 0 : (0, CommunityDeleteActionResult_1.CommunityDeleteActionResultFromJSON)(json["delete_action_result"]),
        "joinActionResult": json["join_action_result"] == null ? void 0 : (0, CommunityJoinActionResultUnion_1.CommunityJoinActionResultUnionFromJSON)(json["join_action_result"]),
        "leaveActionResult": json["leave_action_result"] == null ? void 0 : (0, CommunityLeaveActionResult_1.CommunityLeaveActionResultFromJSON)(json["leave_action_result"]),
        "pinActionResult": json["pin_action_result"] == null ? void 0 : (0, CommunityPinActionResult_1.CommunityPinActionResultFromJSON)(json["pin_action_result"]),
        "unpinActionResult": json["unpin_action_result"] == null ? void 0 : (0, CommunityUnpinActionResult_1.CommunityUnpinActionResultFromJSON)(json["unpin_action_result"])
      };
    }
    exports2.CommunityActionsFromJSONTyped = CommunityActionsFromJSONTyped;
    function CommunityActionsToJSON(json) {
      return CommunityActionsToJSONTyped(json, false);
    }
    exports2.CommunityActionsToJSON = CommunityActionsToJSON;
    function CommunityActionsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "delete_action_result": (0, CommunityDeleteActionResult_1.CommunityDeleteActionResultToJSON)(value["deleteActionResult"]),
        "join_action_result": (0, CommunityJoinActionResultUnion_1.CommunityJoinActionResultUnionToJSON)(value["joinActionResult"]),
        "leave_action_result": (0, CommunityLeaveActionResult_1.CommunityLeaveActionResultToJSON)(value["leaveActionResult"]),
        "pin_action_result": (0, CommunityPinActionResult_1.CommunityPinActionResultToJSON)(value["pinActionResult"]),
        "unpin_action_result": (0, CommunityUnpinActionResult_1.CommunityUnpinActionResultToJSON)(value["unpinActionResult"])
      };
    }
    exports2.CommunityActionsToJSONTyped = CommunityActionsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityJoinRequestsResult.js
var require_CommunityJoinRequestsResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityJoinRequestsResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityJoinRequestsResultToJSONTyped = exports2.CommunityJoinRequestsResultToJSON = exports2.CommunityJoinRequestsResultFromJSONTyped = exports2.CommunityJoinRequestsResultFromJSON = exports2.instanceOfCommunityJoinRequestsResult = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfCommunityJoinRequestsResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityJoinRequestsResult = instanceOfCommunityJoinRequestsResult;
    function CommunityJoinRequestsResultFromJSON(json) {
      return CommunityJoinRequestsResultFromJSONTyped(json, false);
    }
    exports2.CommunityJoinRequestsResultFromJSON = CommunityJoinRequestsResultFromJSON;
    function CommunityJoinRequestsResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"])
      };
    }
    exports2.CommunityJoinRequestsResultFromJSONTyped = CommunityJoinRequestsResultFromJSONTyped;
    function CommunityJoinRequestsResultToJSON(json) {
      return CommunityJoinRequestsResultToJSONTyped(json, false);
    }
    exports2.CommunityJoinRequestsResultToJSON = CommunityJoinRequestsResultToJSON;
    function CommunityJoinRequestsResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"])
      };
    }
    exports2.CommunityJoinRequestsResultToJSONTyped = CommunityJoinRequestsResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityInvitesResult.js
var require_CommunityInvitesResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityInvitesResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityInvitesResultToJSONTyped = exports2.CommunityInvitesResultToJSON = exports2.CommunityInvitesResultFromJSONTyped = exports2.CommunityInvitesResultFromJSON = exports2.instanceOfCommunityInvitesResult = exports2.CommunityInvitesResultReasonEnum = void 0;
    var TypeName_1 = require_TypeName();
    exports2.CommunityInvitesResultReasonEnum = {
      Unavailable: "Unavailable"
    };
    function instanceOfCommunityInvitesResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("message" in value) || value["message"] === void 0)
        return false;
      if (!("reason" in value) || value["reason"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityInvitesResult = instanceOfCommunityInvitesResult;
    function CommunityInvitesResultFromJSON(json) {
      return CommunityInvitesResultFromJSONTyped(json, false);
    }
    exports2.CommunityInvitesResultFromJSON = CommunityInvitesResultFromJSON;
    function CommunityInvitesResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "message": json["message"],
        "reason": json["reason"]
      };
    }
    exports2.CommunityInvitesResultFromJSONTyped = CommunityInvitesResultFromJSONTyped;
    function CommunityInvitesResultToJSON(json) {
      return CommunityInvitesResultToJSONTyped(json, false);
    }
    exports2.CommunityInvitesResultToJSON = CommunityInvitesResultToJSON;
    function CommunityInvitesResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "message": value["message"],
        "reason": value["reason"]
      };
    }
    exports2.CommunityInvitesResultToJSONTyped = CommunityInvitesResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityRule.js
var require_CommunityRule = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityRule.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityRuleToJSONTyped = exports2.CommunityRuleToJSON = exports2.CommunityRuleFromJSONTyped = exports2.CommunityRuleFromJSON = exports2.instanceOfCommunityRule = void 0;
    function instanceOfCommunityRule(value) {
      if (!("name" in value) || value["name"] === void 0)
        return false;
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityRule = instanceOfCommunityRule;
    function CommunityRuleFromJSON(json) {
      return CommunityRuleFromJSONTyped(json, false);
    }
    exports2.CommunityRuleFromJSON = CommunityRuleFromJSON;
    function CommunityRuleFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "description": json["description"] == null ? void 0 : json["description"],
        "name": json["name"],
        "restId": json["rest_id"]
      };
    }
    exports2.CommunityRuleFromJSONTyped = CommunityRuleFromJSONTyped;
    function CommunityRuleToJSON(json) {
      return CommunityRuleToJSONTyped(json, false);
    }
    exports2.CommunityRuleToJSON = CommunityRuleToJSON;
    function CommunityRuleToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "description": value["description"],
        "name": value["name"],
        "rest_id": value["restId"]
      };
    }
    exports2.CommunityRuleToJSONTyped = CommunityRuleToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityUrlsPermalink.js
var require_CommunityUrlsPermalink = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityUrlsPermalink.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityUrlsPermalinkToJSONTyped = exports2.CommunityUrlsPermalinkToJSON = exports2.CommunityUrlsPermalinkFromJSONTyped = exports2.CommunityUrlsPermalinkFromJSON = exports2.instanceOfCommunityUrlsPermalink = void 0;
    function instanceOfCommunityUrlsPermalink(value) {
      if (!("url" in value) || value["url"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityUrlsPermalink = instanceOfCommunityUrlsPermalink;
    function CommunityUrlsPermalinkFromJSON(json) {
      return CommunityUrlsPermalinkFromJSONTyped(json, false);
    }
    exports2.CommunityUrlsPermalinkFromJSON = CommunityUrlsPermalinkFromJSON;
    function CommunityUrlsPermalinkFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "url": json["url"]
      };
    }
    exports2.CommunityUrlsPermalinkFromJSONTyped = CommunityUrlsPermalinkFromJSONTyped;
    function CommunityUrlsPermalinkToJSON(json) {
      return CommunityUrlsPermalinkToJSONTyped(json, false);
    }
    exports2.CommunityUrlsPermalinkToJSON = CommunityUrlsPermalinkToJSON;
    function CommunityUrlsPermalinkToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "url": value["url"]
      };
    }
    exports2.CommunityUrlsPermalinkToJSONTyped = CommunityUrlsPermalinkToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityUrls.js
var require_CommunityUrls = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityUrls.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityUrlsToJSONTyped = exports2.CommunityUrlsToJSON = exports2.CommunityUrlsFromJSONTyped = exports2.CommunityUrlsFromJSON = exports2.instanceOfCommunityUrls = void 0;
    var CommunityUrlsPermalink_1 = require_CommunityUrlsPermalink();
    function instanceOfCommunityUrls(value) {
      if (!("permalink" in value) || value["permalink"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityUrls = instanceOfCommunityUrls;
    function CommunityUrlsFromJSON(json) {
      return CommunityUrlsFromJSONTyped(json, false);
    }
    exports2.CommunityUrlsFromJSON = CommunityUrlsFromJSON;
    function CommunityUrlsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "permalink": (0, CommunityUrlsPermalink_1.CommunityUrlsPermalinkFromJSON)(json["permalink"])
      };
    }
    exports2.CommunityUrlsFromJSONTyped = CommunityUrlsFromJSONTyped;
    function CommunityUrlsToJSON(json) {
      return CommunityUrlsToJSONTyped(json, false);
    }
    exports2.CommunityUrlsToJSON = CommunityUrlsToJSON;
    function CommunityUrlsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "permalink": (0, CommunityUrlsPermalink_1.CommunityUrlsPermalinkToJSON)(value["permalink"])
      };
    }
    exports2.CommunityUrlsToJSONTyped = CommunityUrlsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityData.js
var require_CommunityData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityDataToJSONTyped = exports2.CommunityDataToJSON = exports2.CommunityDataFromJSONTyped = exports2.CommunityDataFromJSON = exports2.instanceOfCommunityData = exports2.CommunityDataRoleEnum = exports2.CommunityDataJoinPolicyEnum = exports2.CommunityDataInvitesPolicyEnum = void 0;
    var PrimaryCommunityTopic_1 = require_PrimaryCommunityTopic();
    var CommunityActions_1 = require_CommunityActions();
    var TypeName_1 = require_TypeName();
    var CommunityJoinRequestsResult_1 = require_CommunityJoinRequestsResult();
    var CommunityInvitesResult_1 = require_CommunityInvitesResult();
    var CommunityRule_1 = require_CommunityRule();
    var CommunityUrls_1 = require_CommunityUrls();
    var UserResults_1 = require_UserResults();
    exports2.CommunityDataInvitesPolicyEnum = {
      MemberInvitesAllowed: "MemberInvitesAllowed",
      ModeratorInvitesAllowed: "ModeratorInvitesAllowed"
    };
    exports2.CommunityDataJoinPolicyEnum = {
      Open: "Open",
      RestrictedJoinRequestsRequireModeratorApproval: "RestrictedJoinRequestsRequireModeratorApproval"
    };
    exports2.CommunityDataRoleEnum = {
      NonMember: "NonMember"
    };
    function instanceOfCommunityData(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("actions" in value) || value["actions"] === void 0)
        return false;
      if (!("adminResults" in value) || value["adminResults"] === void 0)
        return false;
      if (!("creatorResults" in value) || value["creatorResults"] === void 0)
        return false;
      if (!("description" in value) || value["description"] === void 0)
        return false;
      if (!("idStr" in value) || value["idStr"] === void 0)
        return false;
      if (!("invitesPolicy" in value) || value["invitesPolicy"] === void 0)
        return false;
      if (!("invitesResult" in value) || value["invitesResult"] === void 0)
        return false;
      if (!("isPinned" in value) || value["isPinned"] === void 0)
        return false;
      if (!("joinPolicy" in value) || value["joinPolicy"] === void 0)
        return false;
      if (!("memberCount" in value) || value["memberCount"] === void 0)
        return false;
      if (!("membersFacepileResults" in value) || value["membersFacepileResults"] === void 0)
        return false;
      if (!("moderatorCount" in value) || value["moderatorCount"] === void 0)
        return false;
      if (!("name" in value) || value["name"] === void 0)
        return false;
      if (!("role" in value) || value["role"] === void 0)
        return false;
      if (!("rules" in value) || value["rules"] === void 0)
        return false;
      if (!("searchTags" in value) || value["searchTags"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityData = instanceOfCommunityData;
    function CommunityDataFromJSON(json) {
      return CommunityDataFromJSONTyped(json, false);
    }
    exports2.CommunityDataFromJSON = CommunityDataFromJSON;
    function CommunityDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "actions": (0, CommunityActions_1.CommunityActionsFromJSON)(json["actions"]),
        "adminResults": (0, UserResults_1.UserResultsFromJSON)(json["admin_results"]),
        "createdAt": json["created_at"] == null ? void 0 : json["created_at"],
        "creatorResults": (0, UserResults_1.UserResultsFromJSON)(json["creator_results"]),
        "customBannerMedia": json["custom_banner_media"] == null ? void 0 : json["custom_banner_media"],
        "defaultBannerMedia": json["default_banner_media"] == null ? void 0 : json["default_banner_media"],
        "description": json["description"],
        "idStr": json["id_str"],
        "invitesPolicy": json["invites_policy"],
        "invitesResult": (0, CommunityInvitesResult_1.CommunityInvitesResultFromJSON)(json["invites_result"]),
        "isPinned": json["is_pinned"],
        "joinPolicy": json["join_policy"],
        "joinRequestsResult": json["join_requests_result"] == null ? void 0 : (0, CommunityJoinRequestsResult_1.CommunityJoinRequestsResultFromJSON)(json["join_requests_result"]),
        "memberCount": json["member_count"],
        "membersFacepileResults": json["members_facepile_results"].map(UserResults_1.UserResultsFromJSON),
        "moderatorCount": json["moderator_count"],
        "name": json["name"],
        "primaryCommunityTopic": json["primary_community_topic"] == null ? void 0 : (0, PrimaryCommunityTopic_1.PrimaryCommunityTopicFromJSON)(json["primary_community_topic"]),
        "question": json["question"] == null ? void 0 : json["question"],
        "role": json["role"],
        "rules": json["rules"].map(CommunityRule_1.CommunityRuleFromJSON),
        "searchTags": json["search_tags"],
        "showOnlyUsersToDisplay": json["show_only_users_to_display"] == null ? void 0 : json["show_only_users_to_display"],
        "urls": json["urls"] == null ? void 0 : (0, CommunityUrls_1.CommunityUrlsFromJSON)(json["urls"]),
        "viewerRelationship": json["viewer_relationship"] == null ? void 0 : json["viewer_relationship"]
      };
    }
    exports2.CommunityDataFromJSONTyped = CommunityDataFromJSONTyped;
    function CommunityDataToJSON(json) {
      return CommunityDataToJSONTyped(json, false);
    }
    exports2.CommunityDataToJSON = CommunityDataToJSON;
    function CommunityDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "actions": (0, CommunityActions_1.CommunityActionsToJSON)(value["actions"]),
        "admin_results": (0, UserResults_1.UserResultsToJSON)(value["adminResults"]),
        "created_at": value["createdAt"],
        "creator_results": (0, UserResults_1.UserResultsToJSON)(value["creatorResults"]),
        "custom_banner_media": value["customBannerMedia"],
        "default_banner_media": value["defaultBannerMedia"],
        "description": value["description"],
        "id_str": value["idStr"],
        "invites_policy": value["invitesPolicy"],
        "invites_result": (0, CommunityInvitesResult_1.CommunityInvitesResultToJSON)(value["invitesResult"]),
        "is_pinned": value["isPinned"],
        "join_policy": value["joinPolicy"],
        "join_requests_result": (0, CommunityJoinRequestsResult_1.CommunityJoinRequestsResultToJSON)(value["joinRequestsResult"]),
        "member_count": value["memberCount"],
        "members_facepile_results": value["membersFacepileResults"].map(UserResults_1.UserResultsToJSON),
        "moderator_count": value["moderatorCount"],
        "name": value["name"],
        "primary_community_topic": (0, PrimaryCommunityTopic_1.PrimaryCommunityTopicToJSON)(value["primaryCommunityTopic"]),
        "question": value["question"],
        "role": value["role"],
        "rules": value["rules"].map(CommunityRule_1.CommunityRuleToJSON),
        "search_tags": value["searchTags"],
        "show_only_users_to_display": value["showOnlyUsersToDisplay"],
        "urls": (0, CommunityUrls_1.CommunityUrlsToJSON)(value["urls"]),
        "viewer_relationship": value["viewerRelationship"]
      };
    }
    exports2.CommunityDataToJSONTyped = CommunityDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Community.js
var require_Community = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Community.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityToJSONTyped = exports2.CommunityToJSON = exports2.CommunityFromJSONTyped = exports2.CommunityFromJSON = exports2.instanceOfCommunity = void 0;
    var CommunityData_1 = require_CommunityData();
    function instanceOfCommunity(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunity = instanceOfCommunity;
    function CommunityFromJSON(json) {
      return CommunityFromJSONTyped(json, false);
    }
    exports2.CommunityFromJSON = CommunityFromJSON;
    function CommunityFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, CommunityData_1.CommunityDataFromJSON)(json["result"])
      };
    }
    exports2.CommunityFromJSONTyped = CommunityFromJSONTyped;
    function CommunityToJSON(json) {
      return CommunityToJSONTyped(json, false);
    }
    exports2.CommunityToJSON = CommunityToJSON;
    function CommunityToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, CommunityData_1.CommunityDataToJSON)(value["result"])
      };
    }
    exports2.CommunityToJSONTyped = CommunityToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AuthorCommunityRelationship.js
var require_AuthorCommunityRelationship = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/AuthorCommunityRelationship.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.AuthorCommunityRelationshipToJSONTyped = exports2.AuthorCommunityRelationshipToJSON = exports2.AuthorCommunityRelationshipFromJSONTyped = exports2.AuthorCommunityRelationshipFromJSON = exports2.instanceOfAuthorCommunityRelationship = exports2.AuthorCommunityRelationshipRoleEnum = void 0;
    var UserResults_1 = require_UserResults();
    var Community_1 = require_Community();
    exports2.AuthorCommunityRelationshipRoleEnum = {
      Member: "Member",
      Moderator: "Moderator",
      Admin: "Admin"
    };
    function instanceOfAuthorCommunityRelationship(value) {
      if (!("communityResults" in value) || value["communityResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfAuthorCommunityRelationship = instanceOfAuthorCommunityRelationship;
    function AuthorCommunityRelationshipFromJSON(json) {
      return AuthorCommunityRelationshipFromJSONTyped(json, false);
    }
    exports2.AuthorCommunityRelationshipFromJSON = AuthorCommunityRelationshipFromJSON;
    function AuthorCommunityRelationshipFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "communityResults": (0, Community_1.CommunityFromJSON)(json["community_results"]),
        "role": json["role"] == null ? void 0 : json["role"],
        "userResults": json["user_results"] == null ? void 0 : (0, UserResults_1.UserResultsFromJSON)(json["user_results"])
      };
    }
    exports2.AuthorCommunityRelationshipFromJSONTyped = AuthorCommunityRelationshipFromJSONTyped;
    function AuthorCommunityRelationshipToJSON(json) {
      return AuthorCommunityRelationshipToJSONTyped(json, false);
    }
    exports2.AuthorCommunityRelationshipToJSON = AuthorCommunityRelationshipToJSON;
    function AuthorCommunityRelationshipToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "community_results": (0, Community_1.CommunityToJSON)(value["communityResults"]),
        "role": value["role"],
        "user_results": (0, UserResults_1.UserResultsToJSON)(value["userResults"])
      };
    }
    exports2.AuthorCommunityRelationshipToJSONTyped = AuthorCommunityRelationshipToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchEntityRef.js
var require_BirdwatchEntityRef = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchEntityRef.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BirdwatchEntityRefToJSONTyped = exports2.BirdwatchEntityRefToJSON = exports2.BirdwatchEntityRefFromJSONTyped = exports2.BirdwatchEntityRefFromJSON = exports2.instanceOfBirdwatchEntityRef = exports2.BirdwatchEntityRefUrlTypeEnum = exports2.BirdwatchEntityRefTypeEnum = void 0;
    exports2.BirdwatchEntityRefTypeEnum = {
      TimelineUrl: "TimelineUrl",
      TimelineRichTextHashtag: "TimelineRichTextHashtag"
    };
    exports2.BirdwatchEntityRefUrlTypeEnum = {
      ExternalUrl: "ExternalUrl"
    };
    function instanceOfBirdwatchEntityRef(value) {
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBirdwatchEntityRef = instanceOfBirdwatchEntityRef;
    function BirdwatchEntityRefFromJSON(json) {
      return BirdwatchEntityRefFromJSONTyped(json, false);
    }
    exports2.BirdwatchEntityRefFromJSON = BirdwatchEntityRefFromJSON;
    function BirdwatchEntityRefFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "text": json["text"] == null ? void 0 : json["text"],
        "type": json["type"],
        "url": json["url"] == null ? void 0 : json["url"],
        "urlType": json["urlType"] == null ? void 0 : json["urlType"]
      };
    }
    exports2.BirdwatchEntityRefFromJSONTyped = BirdwatchEntityRefFromJSONTyped;
    function BirdwatchEntityRefToJSON(json) {
      return BirdwatchEntityRefToJSONTyped(json, false);
    }
    exports2.BirdwatchEntityRefToJSON = BirdwatchEntityRefToJSON;
    function BirdwatchEntityRefToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "text": value["text"],
        "type": value["type"],
        "url": value["url"],
        "urlType": value["urlType"]
      };
    }
    exports2.BirdwatchEntityRefToJSONTyped = BirdwatchEntityRefToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchEntity.js
var require_BirdwatchEntity = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchEntity.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BirdwatchEntityToJSONTyped = exports2.BirdwatchEntityToJSON = exports2.BirdwatchEntityFromJSONTyped = exports2.BirdwatchEntityFromJSON = exports2.instanceOfBirdwatchEntity = void 0;
    var BirdwatchEntityRef_1 = require_BirdwatchEntityRef();
    function instanceOfBirdwatchEntity(value) {
      if (!("fromIndex" in value) || value["fromIndex"] === void 0)
        return false;
      if (!("ref" in value) || value["ref"] === void 0)
        return false;
      if (!("toIndex" in value) || value["toIndex"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBirdwatchEntity = instanceOfBirdwatchEntity;
    function BirdwatchEntityFromJSON(json) {
      return BirdwatchEntityFromJSONTyped(json, false);
    }
    exports2.BirdwatchEntityFromJSON = BirdwatchEntityFromJSON;
    function BirdwatchEntityFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "fromIndex": json["fromIndex"],
        "ref": (0, BirdwatchEntityRef_1.BirdwatchEntityRefFromJSON)(json["ref"]),
        "toIndex": json["toIndex"]
      };
    }
    exports2.BirdwatchEntityFromJSONTyped = BirdwatchEntityFromJSONTyped;
    function BirdwatchEntityToJSON(json) {
      return BirdwatchEntityToJSONTyped(json, false);
    }
    exports2.BirdwatchEntityToJSON = BirdwatchEntityToJSON;
    function BirdwatchEntityToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "fromIndex": value["fromIndex"],
        "ref": (0, BirdwatchEntityRef_1.BirdwatchEntityRefToJSON)(value["ref"]),
        "toIndex": value["toIndex"]
      };
    }
    exports2.BirdwatchEntityToJSONTyped = BirdwatchEntityToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivotFooter.js
var require_BirdwatchPivotFooter = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivotFooter.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BirdwatchPivotFooterToJSONTyped = exports2.BirdwatchPivotFooterToJSON = exports2.BirdwatchPivotFooterFromJSONTyped = exports2.BirdwatchPivotFooterFromJSON = exports2.instanceOfBirdwatchPivotFooter = void 0;
    var BirdwatchEntity_1 = require_BirdwatchEntity();
    function instanceOfBirdwatchPivotFooter(value) {
      if (!("entities" in value) || value["entities"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBirdwatchPivotFooter = instanceOfBirdwatchPivotFooter;
    function BirdwatchPivotFooterFromJSON(json) {
      return BirdwatchPivotFooterFromJSONTyped(json, false);
    }
    exports2.BirdwatchPivotFooterFromJSON = BirdwatchPivotFooterFromJSON;
    function BirdwatchPivotFooterFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entities": json["entities"].map(BirdwatchEntity_1.BirdwatchEntityFromJSON),
        "text": json["text"]
      };
    }
    exports2.BirdwatchPivotFooterFromJSONTyped = BirdwatchPivotFooterFromJSONTyped;
    function BirdwatchPivotFooterToJSON(json) {
      return BirdwatchPivotFooterToJSONTyped(json, false);
    }
    exports2.BirdwatchPivotFooterToJSON = BirdwatchPivotFooterToJSON;
    function BirdwatchPivotFooterToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entities": value["entities"].map(BirdwatchEntity_1.BirdwatchEntityToJSON),
        "text": value["text"]
      };
    }
    exports2.BirdwatchPivotFooterToJSONTyped = BirdwatchPivotFooterToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivotSubtitle.js
var require_BirdwatchPivotSubtitle = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivotSubtitle.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BirdwatchPivotSubtitleToJSONTyped = exports2.BirdwatchPivotSubtitleToJSON = exports2.BirdwatchPivotSubtitleFromJSONTyped = exports2.BirdwatchPivotSubtitleFromJSON = exports2.instanceOfBirdwatchPivotSubtitle = void 0;
    var BirdwatchEntity_1 = require_BirdwatchEntity();
    function instanceOfBirdwatchPivotSubtitle(value) {
      if (!("entities" in value) || value["entities"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBirdwatchPivotSubtitle = instanceOfBirdwatchPivotSubtitle;
    function BirdwatchPivotSubtitleFromJSON(json) {
      return BirdwatchPivotSubtitleFromJSONTyped(json, false);
    }
    exports2.BirdwatchPivotSubtitleFromJSON = BirdwatchPivotSubtitleFromJSON;
    function BirdwatchPivotSubtitleFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entities": json["entities"].map(BirdwatchEntity_1.BirdwatchEntityFromJSON),
        "text": json["text"]
      };
    }
    exports2.BirdwatchPivotSubtitleFromJSONTyped = BirdwatchPivotSubtitleFromJSONTyped;
    function BirdwatchPivotSubtitleToJSON(json) {
      return BirdwatchPivotSubtitleToJSONTyped(json, false);
    }
    exports2.BirdwatchPivotSubtitleToJSON = BirdwatchPivotSubtitleToJSON;
    function BirdwatchPivotSubtitleToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entities": value["entities"].map(BirdwatchEntity_1.BirdwatchEntityToJSON),
        "text": value["text"]
      };
    }
    exports2.BirdwatchPivotSubtitleToJSONTyped = BirdwatchPivotSubtitleToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivotNote.js
var require_BirdwatchPivotNote = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivotNote.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BirdwatchPivotNoteToJSONTyped = exports2.BirdwatchPivotNoteToJSON = exports2.BirdwatchPivotNoteFromJSONTyped = exports2.BirdwatchPivotNoteFromJSON = exports2.instanceOfBirdwatchPivotNote = void 0;
    function instanceOfBirdwatchPivotNote(value) {
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBirdwatchPivotNote = instanceOfBirdwatchPivotNote;
    function BirdwatchPivotNoteFromJSON(json) {
      return BirdwatchPivotNoteFromJSONTyped(json, false);
    }
    exports2.BirdwatchPivotNoteFromJSON = BirdwatchPivotNoteFromJSON;
    function BirdwatchPivotNoteFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "restId": json["rest_id"]
      };
    }
    exports2.BirdwatchPivotNoteFromJSONTyped = BirdwatchPivotNoteFromJSONTyped;
    function BirdwatchPivotNoteToJSON(json) {
      return BirdwatchPivotNoteToJSONTyped(json, false);
    }
    exports2.BirdwatchPivotNoteToJSON = BirdwatchPivotNoteToJSON;
    function BirdwatchPivotNoteToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "rest_id": value["restId"]
      };
    }
    exports2.BirdwatchPivotNoteToJSONTyped = BirdwatchPivotNoteToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivotCallToAction.js
var require_BirdwatchPivotCallToAction = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivotCallToAction.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BirdwatchPivotCallToActionToJSONTyped = exports2.BirdwatchPivotCallToActionToJSON = exports2.BirdwatchPivotCallToActionFromJSONTyped = exports2.BirdwatchPivotCallToActionFromJSON = exports2.instanceOfBirdwatchPivotCallToAction = void 0;
    function instanceOfBirdwatchPivotCallToAction(value) {
      if (!("destinationUrl" in value) || value["destinationUrl"] === void 0)
        return false;
      if (!("prompt" in value) || value["prompt"] === void 0)
        return false;
      if (!("title" in value) || value["title"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBirdwatchPivotCallToAction = instanceOfBirdwatchPivotCallToAction;
    function BirdwatchPivotCallToActionFromJSON(json) {
      return BirdwatchPivotCallToActionFromJSONTyped(json, false);
    }
    exports2.BirdwatchPivotCallToActionFromJSON = BirdwatchPivotCallToActionFromJSON;
    function BirdwatchPivotCallToActionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "destinationUrl": json["destinationUrl"],
        "prompt": json["prompt"],
        "title": json["title"]
      };
    }
    exports2.BirdwatchPivotCallToActionFromJSONTyped = BirdwatchPivotCallToActionFromJSONTyped;
    function BirdwatchPivotCallToActionToJSON(json) {
      return BirdwatchPivotCallToActionToJSONTyped(json, false);
    }
    exports2.BirdwatchPivotCallToActionToJSON = BirdwatchPivotCallToActionToJSON;
    function BirdwatchPivotCallToActionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "destinationUrl": value["destinationUrl"],
        "prompt": value["prompt"],
        "title": value["title"]
      };
    }
    exports2.BirdwatchPivotCallToActionToJSONTyped = BirdwatchPivotCallToActionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivot.js
var require_BirdwatchPivot = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BirdwatchPivot.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BirdwatchPivotToJSONTyped = exports2.BirdwatchPivotToJSON = exports2.BirdwatchPivotFromJSONTyped = exports2.BirdwatchPivotFromJSON = exports2.instanceOfBirdwatchPivot = exports2.BirdwatchPivotVisualStyleEnum = exports2.BirdwatchPivotIconTypeEnum = void 0;
    var BirdwatchPivotFooter_1 = require_BirdwatchPivotFooter();
    var BirdwatchPivotSubtitle_1 = require_BirdwatchPivotSubtitle();
    var BirdwatchPivotNote_1 = require_BirdwatchPivotNote();
    var BirdwatchPivotCallToAction_1 = require_BirdwatchPivotCallToAction();
    exports2.BirdwatchPivotIconTypeEnum = {
      BirdwatchV1Icon: "BirdwatchV1Icon"
    };
    exports2.BirdwatchPivotVisualStyleEnum = {
      Default: "Default",
      Tentative: "Tentative"
    };
    function instanceOfBirdwatchPivot(value) {
      if (!("destinationUrl" in value) || value["destinationUrl"] === void 0)
        return false;
      if (!("iconType" in value) || value["iconType"] === void 0)
        return false;
      if (!("title" in value) || value["title"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBirdwatchPivot = instanceOfBirdwatchPivot;
    function BirdwatchPivotFromJSON(json) {
      return BirdwatchPivotFromJSONTyped(json, false);
    }
    exports2.BirdwatchPivotFromJSON = BirdwatchPivotFromJSON;
    function BirdwatchPivotFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "callToAction": json["callToAction"] == null ? void 0 : (0, BirdwatchPivotCallToAction_1.BirdwatchPivotCallToActionFromJSON)(json["callToAction"]),
        "destinationUrl": json["destinationUrl"],
        "footer": json["footer"] == null ? void 0 : (0, BirdwatchPivotFooter_1.BirdwatchPivotFooterFromJSON)(json["footer"]),
        "iconType": json["iconType"],
        "note": json["note"] == null ? void 0 : (0, BirdwatchPivotNote_1.BirdwatchPivotNoteFromJSON)(json["note"]),
        "shorttitle": json["shorttitle"] == null ? void 0 : json["shorttitle"],
        "subtitle": json["subtitle"] == null ? void 0 : (0, BirdwatchPivotSubtitle_1.BirdwatchPivotSubtitleFromJSON)(json["subtitle"]),
        "title": json["title"],
        "visualStyle": json["visualStyle"] == null ? void 0 : json["visualStyle"]
      };
    }
    exports2.BirdwatchPivotFromJSONTyped = BirdwatchPivotFromJSONTyped;
    function BirdwatchPivotToJSON(json) {
      return BirdwatchPivotToJSONTyped(json, false);
    }
    exports2.BirdwatchPivotToJSON = BirdwatchPivotToJSON;
    function BirdwatchPivotToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "callToAction": (0, BirdwatchPivotCallToAction_1.BirdwatchPivotCallToActionToJSON)(value["callToAction"]),
        "destinationUrl": value["destinationUrl"],
        "footer": (0, BirdwatchPivotFooter_1.BirdwatchPivotFooterToJSON)(value["footer"]),
        "iconType": value["iconType"],
        "note": (0, BirdwatchPivotNote_1.BirdwatchPivotNoteToJSON)(value["note"]),
        "shorttitle": value["shorttitle"],
        "subtitle": (0, BirdwatchPivotSubtitle_1.BirdwatchPivotSubtitleToJSON)(value["subtitle"]),
        "title": value["title"],
        "visualStyle": value["visualStyle"]
      };
    }
    exports2.BirdwatchPivotToJSONTyped = BirdwatchPivotToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/InstructionType.js
var require_InstructionType = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/InstructionType.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.InstructionTypeToJSONTyped = exports2.InstructionTypeToJSON = exports2.InstructionTypeFromJSONTyped = exports2.InstructionTypeFromJSON = exports2.instanceOfInstructionType = exports2.InstructionType = void 0;
    exports2.InstructionType = {
      TimelineAddEntries: "TimelineAddEntries",
      TimelineAddToModule: "TimelineAddToModule",
      TimelineClearCache: "TimelineClearCache",
      TimelinePinEntry: "TimelinePinEntry",
      TimelineReplaceEntry: "TimelineReplaceEntry",
      TimelineShowAlert: "TimelineShowAlert",
      TimelineTerminateTimeline: "TimelineTerminateTimeline",
      TimelineShowCover: "TimelineShowCover"
    };
    function instanceOfInstructionType(value) {
      for (var key in exports2.InstructionType) {
        if (Object.prototype.hasOwnProperty.call(exports2.InstructionType, key)) {
          if (exports2.InstructionType[key] === value) {
            return true;
          }
        }
      }
      return false;
    }
    exports2.instanceOfInstructionType = instanceOfInstructionType;
    function InstructionTypeFromJSON(json) {
      return InstructionTypeFromJSONTyped(json, false);
    }
    exports2.InstructionTypeFromJSON = InstructionTypeFromJSON;
    function InstructionTypeFromJSONTyped(json, ignoreDiscriminator) {
      return json;
    }
    exports2.InstructionTypeFromJSONTyped = InstructionTypeFromJSONTyped;
    function InstructionTypeToJSON(value) {
      return value;
    }
    exports2.InstructionTypeToJSON = InstructionTypeToJSON;
    function InstructionTypeToJSONTyped(value, ignoreDiscriminator) {
      return value;
    }
    exports2.InstructionTypeToJSONTyped = InstructionTypeToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CursorType.js
var require_CursorType = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CursorType.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CursorTypeToJSONTyped = exports2.CursorTypeToJSON = exports2.CursorTypeFromJSONTyped = exports2.CursorTypeFromJSON = exports2.instanceOfCursorType = exports2.CursorType = void 0;
    exports2.CursorType = {
      Top: "Top",
      Bottom: "Bottom",
      ShowMore: "ShowMore",
      ShowMoreThreads: "ShowMoreThreads",
      Gap: "Gap",
      ShowMoreThreadsPrompt: "ShowMoreThreadsPrompt"
    };
    function instanceOfCursorType(value) {
      for (var key in exports2.CursorType) {
        if (Object.prototype.hasOwnProperty.call(exports2.CursorType, key)) {
          if (exports2.CursorType[key] === value) {
            return true;
          }
        }
      }
      return false;
    }
    exports2.instanceOfCursorType = instanceOfCursorType;
    function CursorTypeFromJSON(json) {
      return CursorTypeFromJSONTyped(json, false);
    }
    exports2.CursorTypeFromJSON = CursorTypeFromJSON;
    function CursorTypeFromJSONTyped(json, ignoreDiscriminator) {
      return json;
    }
    exports2.CursorTypeFromJSONTyped = CursorTypeFromJSONTyped;
    function CursorTypeToJSON(value) {
      return value;
    }
    exports2.CursorTypeToJSON = CursorTypeToJSON;
    function CursorTypeToJSONTyped(value, ignoreDiscriminator) {
      return value;
    }
    exports2.CursorTypeToJSONTyped = CursorTypeToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DisplayTreatment.js
var require_DisplayTreatment = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DisplayTreatment.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DisplayTreatmentToJSONTyped = exports2.DisplayTreatmentToJSON = exports2.DisplayTreatmentFromJSONTyped = exports2.DisplayTreatmentFromJSON = exports2.instanceOfDisplayTreatment = void 0;
    function instanceOfDisplayTreatment(value) {
      if (!("actionText" in value) || value["actionText"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfDisplayTreatment = instanceOfDisplayTreatment;
    function DisplayTreatmentFromJSON(json) {
      return DisplayTreatmentFromJSONTyped(json, false);
    }
    exports2.DisplayTreatmentFromJSON = DisplayTreatmentFromJSON;
    function DisplayTreatmentFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "actionText": json["actionText"],
        "labelText": json["labelText"] == null ? void 0 : json["labelText"]
      };
    }
    exports2.DisplayTreatmentFromJSONTyped = DisplayTreatmentFromJSONTyped;
    function DisplayTreatmentToJSON(json) {
      return DisplayTreatmentToJSONTyped(json, false);
    }
    exports2.DisplayTreatmentToJSON = DisplayTreatmentToJSON;
    function DisplayTreatmentToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "actionText": value["actionText"],
        "labelText": value["labelText"]
      };
    }
    exports2.DisplayTreatmentToJSONTyped = DisplayTreatmentToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ContentEntryType.js
var require_ContentEntryType = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ContentEntryType.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ContentEntryTypeToJSONTyped = exports2.ContentEntryTypeToJSON = exports2.ContentEntryTypeFromJSONTyped = exports2.ContentEntryTypeFromJSON = exports2.instanceOfContentEntryType = exports2.ContentEntryType = void 0;
    exports2.ContentEntryType = {
      TimelineTimelineItem: "TimelineTimelineItem",
      TimelineTimelineCursor: "TimelineTimelineCursor",
      TimelineTimelineModule: "TimelineTimelineModule"
    };
    function instanceOfContentEntryType(value) {
      for (var key in exports2.ContentEntryType) {
        if (Object.prototype.hasOwnProperty.call(exports2.ContentEntryType, key)) {
          if (exports2.ContentEntryType[key] === value) {
            return true;
          }
        }
      }
      return false;
    }
    exports2.instanceOfContentEntryType = instanceOfContentEntryType;
    function ContentEntryTypeFromJSON(json) {
      return ContentEntryTypeFromJSONTyped(json, false);
    }
    exports2.ContentEntryTypeFromJSON = ContentEntryTypeFromJSON;
    function ContentEntryTypeFromJSONTyped(json, ignoreDiscriminator) {
      return json;
    }
    exports2.ContentEntryTypeFromJSONTyped = ContentEntryTypeFromJSONTyped;
    function ContentEntryTypeToJSON(value) {
      return value;
    }
    exports2.ContentEntryTypeToJSON = ContentEntryTypeToJSON;
    function ContentEntryTypeToJSONTyped(value, ignoreDiscriminator) {
      return value;
    }
    exports2.ContentEntryTypeToJSONTyped = ContentEntryTypeToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTimelineCursor.js
var require_TimelineTimelineCursor = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTimelineCursor.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineTimelineCursorToJSONTyped = exports2.TimelineTimelineCursorToJSON = exports2.TimelineTimelineCursorFromJSONTyped = exports2.TimelineTimelineCursorFromJSON = exports2.instanceOfTimelineTimelineCursor = void 0;
    var TypeName_1 = require_TypeName();
    var CursorType_1 = require_CursorType();
    var DisplayTreatment_1 = require_DisplayTreatment();
    var ContentEntryType_1 = require_ContentEntryType();
    function instanceOfTimelineTimelineCursor(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("cursorType" in value) || value["cursorType"] === void 0)
        return false;
      if (!("value" in value) || value["value"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineTimelineCursor = instanceOfTimelineTimelineCursor;
    function TimelineTimelineCursorFromJSON(json) {
      return TimelineTimelineCursorFromJSONTyped(json, false);
    }
    exports2.TimelineTimelineCursorFromJSON = TimelineTimelineCursorFromJSON;
    function TimelineTimelineCursorFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "cursorType": (0, CursorType_1.CursorTypeFromJSON)(json["cursorType"]),
        "displayTreatment": json["displayTreatment"] == null ? void 0 : (0, DisplayTreatment_1.DisplayTreatmentFromJSON)(json["displayTreatment"]),
        "entryType": json["entryType"] == null ? void 0 : (0, ContentEntryType_1.ContentEntryTypeFromJSON)(json["entryType"]),
        "itemType": json["itemType"] == null ? void 0 : (0, ContentEntryType_1.ContentEntryTypeFromJSON)(json["itemType"]),
        "stopOnEmptyResponse": json["stopOnEmptyResponse"] == null ? void 0 : json["stopOnEmptyResponse"],
        "value": json["value"]
      };
    }
    exports2.TimelineTimelineCursorFromJSONTyped = TimelineTimelineCursorFromJSONTyped;
    function TimelineTimelineCursorToJSON(json) {
      return TimelineTimelineCursorToJSONTyped(json, false);
    }
    exports2.TimelineTimelineCursorToJSON = TimelineTimelineCursorToJSON;
    function TimelineTimelineCursorToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "cursorType": (0, CursorType_1.CursorTypeToJSON)(value["cursorType"]),
        "displayTreatment": (0, DisplayTreatment_1.DisplayTreatmentToJSON)(value["displayTreatment"]),
        "entryType": (0, ContentEntryType_1.ContentEntryTypeToJSON)(value["entryType"]),
        "itemType": (0, ContentEntryType_1.ContentEntryTypeToJSON)(value["itemType"]),
        "stopOnEmptyResponse": value["stopOnEmptyResponse"],
        "value": value["value"]
      };
    }
    exports2.TimelineTimelineCursorToJSONTyped = TimelineTimelineCursorToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineCommunity.js
var require_TimelineCommunity = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineCommunity.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineCommunityToJSONTyped = exports2.TimelineCommunityToJSON = exports2.TimelineCommunityFromJSONTyped = exports2.TimelineCommunityFromJSON = exports2.instanceOfTimelineCommunity = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfTimelineCommunity(value) {
      return true;
    }
    exports2.instanceOfTimelineCommunity = instanceOfTimelineCommunity;
    function TimelineCommunityFromJSON(json) {
      return TimelineCommunityFromJSONTyped(json, false);
    }
    exports2.TimelineCommunityFromJSON = TimelineCommunityFromJSON;
    function TimelineCommunityFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return __assign(__assign({}, json), { "typename": json["__typename"] == null ? void 0 : (0, TypeName_1.TypeNameFromJSON)(json["__typename"]) });
    }
    exports2.TimelineCommunityFromJSONTyped = TimelineCommunityFromJSONTyped;
    function TimelineCommunityToJSON(json) {
      return TimelineCommunityToJSONTyped(json, false);
    }
    exports2.TimelineCommunityToJSON = TimelineCommunityToJSON;
    function TimelineCommunityToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return __assign(__assign({}, value), { "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]) });
    }
    exports2.TimelineCommunityToJSONTyped = TimelineCommunityToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineMessagePrompt.js
var require_TimelineMessagePrompt = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineMessagePrompt.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineMessagePromptToJSONTyped = exports2.TimelineMessagePromptToJSON = exports2.TimelineMessagePromptFromJSONTyped = exports2.TimelineMessagePromptFromJSON = exports2.instanceOfTimelineMessagePrompt = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfTimelineMessagePrompt(value) {
      return true;
    }
    exports2.instanceOfTimelineMessagePrompt = instanceOfTimelineMessagePrompt;
    function TimelineMessagePromptFromJSON(json) {
      return TimelineMessagePromptFromJSONTyped(json, false);
    }
    exports2.TimelineMessagePromptFromJSON = TimelineMessagePromptFromJSON;
    function TimelineMessagePromptFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return __assign(__assign({}, json), { "typename": json["__typename"] == null ? void 0 : (0, TypeName_1.TypeNameFromJSON)(json["__typename"]) });
    }
    exports2.TimelineMessagePromptFromJSONTyped = TimelineMessagePromptFromJSONTyped;
    function TimelineMessagePromptToJSON(json) {
      return TimelineMessagePromptToJSONTyped(json, false);
    }
    exports2.TimelineMessagePromptToJSON = TimelineMessagePromptToJSON;
    function TimelineMessagePromptToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return __assign(__assign({}, value), { "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]) });
    }
    exports2.TimelineMessagePromptToJSONTyped = TimelineMessagePromptToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelinePrompt.js
var require_TimelinePrompt = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelinePrompt.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelinePromptToJSONTyped = exports2.TimelinePromptToJSON = exports2.TimelinePromptFromJSONTyped = exports2.TimelinePromptFromJSON = exports2.instanceOfTimelinePrompt = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfTimelinePrompt(value) {
      return true;
    }
    exports2.instanceOfTimelinePrompt = instanceOfTimelinePrompt;
    function TimelinePromptFromJSON(json) {
      return TimelinePromptFromJSONTyped(json, false);
    }
    exports2.TimelinePromptFromJSON = TimelinePromptFromJSON;
    function TimelinePromptFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return __assign(__assign({}, json), { "typename": json["__typename"] == null ? void 0 : (0, TypeName_1.TypeNameFromJSON)(json["__typename"]) });
    }
    exports2.TimelinePromptFromJSONTyped = TimelinePromptFromJSONTyped;
    function TimelinePromptToJSON(json) {
      return TimelinePromptToJSONTyped(json, false);
    }
    exports2.TimelinePromptToJSON = TimelinePromptToJSON;
    function TimelinePromptToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return __assign(__assign({}, value), { "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]) });
    }
    exports2.TimelinePromptToJSONTyped = TimelinePromptToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TextHighlight.js
var require_TextHighlight = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TextHighlight.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TextHighlightToJSONTyped = exports2.TextHighlightToJSON = exports2.TextHighlightFromJSONTyped = exports2.TextHighlightFromJSON = exports2.instanceOfTextHighlight = void 0;
    function instanceOfTextHighlight(value) {
      if (!("endIndex" in value) || value["endIndex"] === void 0)
        return false;
      if (!("startIndex" in value) || value["startIndex"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTextHighlight = instanceOfTextHighlight;
    function TextHighlightFromJSON(json) {
      return TextHighlightFromJSONTyped(json, false);
    }
    exports2.TextHighlightFromJSON = TextHighlightFromJSON;
    function TextHighlightFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "endIndex": json["endIndex"],
        "startIndex": json["startIndex"]
      };
    }
    exports2.TextHighlightFromJSONTyped = TextHighlightFromJSONTyped;
    function TextHighlightToJSON(json) {
      return TextHighlightToJSONTyped(json, false);
    }
    exports2.TextHighlightToJSON = TextHighlightToJSON;
    function TextHighlightToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "endIndex": value["endIndex"],
        "startIndex": value["startIndex"]
      };
    }
    exports2.TextHighlightToJSONTyped = TextHighlightToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Highlight.js
var require_Highlight = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Highlight.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.HighlightToJSONTyped = exports2.HighlightToJSON = exports2.HighlightFromJSONTyped = exports2.HighlightFromJSON = exports2.instanceOfHighlight = void 0;
    var TextHighlight_1 = require_TextHighlight();
    function instanceOfHighlight(value) {
      if (!("textHighlights" in value) || value["textHighlights"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfHighlight = instanceOfHighlight;
    function HighlightFromJSON(json) {
      return HighlightFromJSONTyped(json, false);
    }
    exports2.HighlightFromJSON = HighlightFromJSON;
    function HighlightFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "textHighlights": json["textHighlights"].map(TextHighlight_1.TextHighlightFromJSON)
      };
    }
    exports2.HighlightFromJSONTyped = HighlightFromJSONTyped;
    function HighlightToJSON(json) {
      return HighlightToJSONTyped(json, false);
    }
    exports2.HighlightToJSON = HighlightToJSON;
    function HighlightToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "textHighlights": value["textHighlights"].map(TextHighlight_1.TextHighlightToJSON)
      };
    }
    exports2.HighlightToJSONTyped = HighlightToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultMediaInlineMedia.js
var require_NoteTweetResultMediaInlineMedia = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultMediaInlineMedia.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.NoteTweetResultMediaInlineMediaToJSONTyped = exports2.NoteTweetResultMediaInlineMediaToJSON = exports2.NoteTweetResultMediaInlineMediaFromJSONTyped = exports2.NoteTweetResultMediaInlineMediaFromJSON = exports2.instanceOfNoteTweetResultMediaInlineMedia = void 0;
    function instanceOfNoteTweetResultMediaInlineMedia(value) {
      if (!("index" in value) || value["index"] === void 0)
        return false;
      if (!("mediaId" in value) || value["mediaId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfNoteTweetResultMediaInlineMedia = instanceOfNoteTweetResultMediaInlineMedia;
    function NoteTweetResultMediaInlineMediaFromJSON(json) {
      return NoteTweetResultMediaInlineMediaFromJSONTyped(json, false);
    }
    exports2.NoteTweetResultMediaInlineMediaFromJSON = NoteTweetResultMediaInlineMediaFromJSON;
    function NoteTweetResultMediaInlineMediaFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "index": json["index"],
        "mediaId": json["media_id"]
      };
    }
    exports2.NoteTweetResultMediaInlineMediaFromJSONTyped = NoteTweetResultMediaInlineMediaFromJSONTyped;
    function NoteTweetResultMediaInlineMediaToJSON(json) {
      return NoteTweetResultMediaInlineMediaToJSONTyped(json, false);
    }
    exports2.NoteTweetResultMediaInlineMediaToJSON = NoteTweetResultMediaInlineMediaToJSON;
    function NoteTweetResultMediaInlineMediaToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "index": value["index"],
        "media_id": value["mediaId"]
      };
    }
    exports2.NoteTweetResultMediaInlineMediaToJSONTyped = NoteTweetResultMediaInlineMediaToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultMedia.js
var require_NoteTweetResultMedia = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultMedia.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.NoteTweetResultMediaToJSONTyped = exports2.NoteTweetResultMediaToJSON = exports2.NoteTweetResultMediaFromJSONTyped = exports2.NoteTweetResultMediaFromJSON = exports2.instanceOfNoteTweetResultMedia = void 0;
    var NoteTweetResultMediaInlineMedia_1 = require_NoteTweetResultMediaInlineMedia();
    function instanceOfNoteTweetResultMedia(value) {
      if (!("inlineMedia" in value) || value["inlineMedia"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfNoteTweetResultMedia = instanceOfNoteTweetResultMedia;
    function NoteTweetResultMediaFromJSON(json) {
      return NoteTweetResultMediaFromJSONTyped(json, false);
    }
    exports2.NoteTweetResultMediaFromJSON = NoteTweetResultMediaFromJSON;
    function NoteTweetResultMediaFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "inlineMedia": json["inline_media"].map(NoteTweetResultMediaInlineMedia_1.NoteTweetResultMediaInlineMediaFromJSON)
      };
    }
    exports2.NoteTweetResultMediaFromJSONTyped = NoteTweetResultMediaFromJSONTyped;
    function NoteTweetResultMediaToJSON(json) {
      return NoteTweetResultMediaToJSONTyped(json, false);
    }
    exports2.NoteTweetResultMediaToJSON = NoteTweetResultMediaToJSON;
    function NoteTweetResultMediaToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "inline_media": value["inlineMedia"].map(NoteTweetResultMediaInlineMedia_1.NoteTweetResultMediaInlineMediaToJSON)
      };
    }
    exports2.NoteTweetResultMediaToJSONTyped = NoteTweetResultMediaToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultRichTextTag.js
var require_NoteTweetResultRichTextTag = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultRichTextTag.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.NoteTweetResultRichTextTagToJSONTyped = exports2.NoteTweetResultRichTextTagToJSON = exports2.NoteTweetResultRichTextTagFromJSONTyped = exports2.NoteTweetResultRichTextTagFromJSON = exports2.instanceOfNoteTweetResultRichTextTag = exports2.NoteTweetResultRichTextTagRichtextTypesEnum = void 0;
    exports2.NoteTweetResultRichTextTagRichtextTypesEnum = {
      Bold: "Bold",
      Italic: "Italic"
    };
    function instanceOfNoteTweetResultRichTextTag(value) {
      if (!("fromIndex" in value) || value["fromIndex"] === void 0)
        return false;
      if (!("richtextTypes" in value) || value["richtextTypes"] === void 0)
        return false;
      if (!("toIndex" in value) || value["toIndex"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfNoteTweetResultRichTextTag = instanceOfNoteTweetResultRichTextTag;
    function NoteTweetResultRichTextTagFromJSON(json) {
      return NoteTweetResultRichTextTagFromJSONTyped(json, false);
    }
    exports2.NoteTweetResultRichTextTagFromJSON = NoteTweetResultRichTextTagFromJSON;
    function NoteTweetResultRichTextTagFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "fromIndex": json["from_index"],
        "richtextTypes": json["richtext_types"],
        "toIndex": json["to_index"]
      };
    }
    exports2.NoteTweetResultRichTextTagFromJSONTyped = NoteTweetResultRichTextTagFromJSONTyped;
    function NoteTweetResultRichTextTagToJSON(json) {
      return NoteTweetResultRichTextTagToJSONTyped(json, false);
    }
    exports2.NoteTweetResultRichTextTagToJSON = NoteTweetResultRichTextTagToJSON;
    function NoteTweetResultRichTextTagToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "from_index": value["fromIndex"],
        "richtext_types": value["richtextTypes"],
        "to_index": value["toIndex"]
      };
    }
    exports2.NoteTweetResultRichTextTagToJSONTyped = NoteTweetResultRichTextTagToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultRichText.js
var require_NoteTweetResultRichText = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultRichText.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.NoteTweetResultRichTextToJSONTyped = exports2.NoteTweetResultRichTextToJSON = exports2.NoteTweetResultRichTextFromJSONTyped = exports2.NoteTweetResultRichTextFromJSON = exports2.instanceOfNoteTweetResultRichText = void 0;
    var NoteTweetResultRichTextTag_1 = require_NoteTweetResultRichTextTag();
    function instanceOfNoteTweetResultRichText(value) {
      if (!("richtextTags" in value) || value["richtextTags"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfNoteTweetResultRichText = instanceOfNoteTweetResultRichText;
    function NoteTweetResultRichTextFromJSON(json) {
      return NoteTweetResultRichTextFromJSONTyped(json, false);
    }
    exports2.NoteTweetResultRichTextFromJSON = NoteTweetResultRichTextFromJSON;
    function NoteTweetResultRichTextFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "richtextTags": json["richtext_tags"].map(NoteTweetResultRichTextTag_1.NoteTweetResultRichTextTagFromJSON)
      };
    }
    exports2.NoteTweetResultRichTextFromJSONTyped = NoteTweetResultRichTextFromJSONTyped;
    function NoteTweetResultRichTextToJSON(json) {
      return NoteTweetResultRichTextToJSONTyped(json, false);
    }
    exports2.NoteTweetResultRichTextToJSON = NoteTweetResultRichTextToJSON;
    function NoteTweetResultRichTextToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "richtext_tags": value["richtextTags"].map(NoteTweetResultRichTextTag_1.NoteTweetResultRichTextTagToJSON)
      };
    }
    exports2.NoteTweetResultRichTextToJSONTyped = NoteTweetResultRichTextToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaResult.js
var require_MediaResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaResultToJSONTyped = exports2.MediaResultToJSON = exports2.MediaResultFromJSONTyped = exports2.MediaResultFromJSON = exports2.instanceOfMediaResult = void 0;
    function instanceOfMediaResult(value) {
      if (!("mediaKey" in value) || value["mediaKey"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaResult = instanceOfMediaResult;
    function MediaResultFromJSON(json) {
      return MediaResultFromJSONTyped(json, false);
    }
    exports2.MediaResultFromJSON = MediaResultFromJSON;
    function MediaResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "mediaKey": json["media_key"]
      };
    }
    exports2.MediaResultFromJSONTyped = MediaResultFromJSONTyped;
    function MediaResultToJSON(json) {
      return MediaResultToJSONTyped(json, false);
    }
    exports2.MediaResultToJSON = MediaResultToJSON;
    function MediaResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "media_key": value["mediaKey"]
      };
    }
    exports2.MediaResultToJSONTyped = MediaResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaResults.js
var require_MediaResults = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaResults.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaResultsToJSONTyped = exports2.MediaResultsToJSON = exports2.MediaResultsFromJSONTyped = exports2.MediaResultsFromJSON = exports2.instanceOfMediaResults = void 0;
    var MediaResult_1 = require_MediaResult();
    function instanceOfMediaResults(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaResults = instanceOfMediaResults;
    function MediaResultsFromJSON(json) {
      return MediaResultsFromJSONTyped(json, false);
    }
    exports2.MediaResultsFromJSON = MediaResultsFromJSON;
    function MediaResultsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, MediaResult_1.MediaResultFromJSON)(json["result"])
      };
    }
    exports2.MediaResultsFromJSONTyped = MediaResultsFromJSONTyped;
    function MediaResultsToJSON(json) {
      return MediaResultsToJSONTyped(json, false);
    }
    exports2.MediaResultsToJSON = MediaResultsToJSON;
    function MediaResultsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, MediaResult_1.MediaResultToJSON)(value["result"])
      };
    }
    exports2.MediaResultsToJSONTyped = MediaResultsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SensitiveMediaWarning.js
var require_SensitiveMediaWarning = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SensitiveMediaWarning.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SensitiveMediaWarningToJSONTyped = exports2.SensitiveMediaWarningToJSON = exports2.SensitiveMediaWarningFromJSONTyped = exports2.SensitiveMediaWarningFromJSON = exports2.instanceOfSensitiveMediaWarning = void 0;
    function instanceOfSensitiveMediaWarning(value) {
      return true;
    }
    exports2.instanceOfSensitiveMediaWarning = instanceOfSensitiveMediaWarning;
    function SensitiveMediaWarningFromJSON(json) {
      return SensitiveMediaWarningFromJSONTyped(json, false);
    }
    exports2.SensitiveMediaWarningFromJSON = SensitiveMediaWarningFromJSON;
    function SensitiveMediaWarningFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "adultContent": json["adult_content"] == null ? void 0 : json["adult_content"],
        "graphicViolence": json["graphic_violence"] == null ? void 0 : json["graphic_violence"],
        "other": json["other"] == null ? void 0 : json["other"]
      };
    }
    exports2.SensitiveMediaWarningFromJSONTyped = SensitiveMediaWarningFromJSONTyped;
    function SensitiveMediaWarningToJSON(json) {
      return SensitiveMediaWarningToJSONTyped(json, false);
    }
    exports2.SensitiveMediaWarningToJSON = SensitiveMediaWarningToJSON;
    function SensitiveMediaWarningToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "adult_content": value["adultContent"],
        "graphic_violence": value["graphicViolence"],
        "other": value["other"]
      };
    }
    exports2.SensitiveMediaWarningToJSONTyped = SensitiveMediaWarningToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ExtMediaAvailability.js
var require_ExtMediaAvailability = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ExtMediaAvailability.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ExtMediaAvailabilityToJSONTyped = exports2.ExtMediaAvailabilityToJSON = exports2.ExtMediaAvailabilityFromJSONTyped = exports2.ExtMediaAvailabilityFromJSON = exports2.instanceOfExtMediaAvailability = exports2.ExtMediaAvailabilityStatusEnum = void 0;
    exports2.ExtMediaAvailabilityStatusEnum = {
      Available: "Available",
      Unavailable: "Unavailable"
    };
    function instanceOfExtMediaAvailability(value) {
      return true;
    }
    exports2.instanceOfExtMediaAvailability = instanceOfExtMediaAvailability;
    function ExtMediaAvailabilityFromJSON(json) {
      return ExtMediaAvailabilityFromJSONTyped(json, false);
    }
    exports2.ExtMediaAvailabilityFromJSON = ExtMediaAvailabilityFromJSON;
    function ExtMediaAvailabilityFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "reason": json["reason"] == null ? void 0 : json["reason"],
        "status": json["status"] == null ? void 0 : json["status"]
      };
    }
    exports2.ExtMediaAvailabilityFromJSONTyped = ExtMediaAvailabilityFromJSONTyped;
    function ExtMediaAvailabilityToJSON(json) {
      return ExtMediaAvailabilityToJSONTyped(json, false);
    }
    exports2.ExtMediaAvailabilityToJSON = ExtMediaAvailabilityToJSON;
    function ExtMediaAvailabilityToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "reason": value["reason"],
        "status": value["status"]
      };
    }
    exports2.ExtMediaAvailabilityToJSONTyped = ExtMediaAvailabilityToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaVideoInfoVariant.js
var require_MediaVideoInfoVariant = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaVideoInfoVariant.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaVideoInfoVariantToJSONTyped = exports2.MediaVideoInfoVariantToJSON = exports2.MediaVideoInfoVariantFromJSONTyped = exports2.MediaVideoInfoVariantFromJSON = exports2.instanceOfMediaVideoInfoVariant = void 0;
    function instanceOfMediaVideoInfoVariant(value) {
      if (!("contentType" in value) || value["contentType"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaVideoInfoVariant = instanceOfMediaVideoInfoVariant;
    function MediaVideoInfoVariantFromJSON(json) {
      return MediaVideoInfoVariantFromJSONTyped(json, false);
    }
    exports2.MediaVideoInfoVariantFromJSON = MediaVideoInfoVariantFromJSON;
    function MediaVideoInfoVariantFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "bitrate": json["bitrate"] == null ? void 0 : json["bitrate"],
        "contentType": json["content_type"],
        "url": json["url"]
      };
    }
    exports2.MediaVideoInfoVariantFromJSONTyped = MediaVideoInfoVariantFromJSONTyped;
    function MediaVideoInfoVariantToJSON(json) {
      return MediaVideoInfoVariantToJSONTyped(json, false);
    }
    exports2.MediaVideoInfoVariantToJSON = MediaVideoInfoVariantToJSON;
    function MediaVideoInfoVariantToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "bitrate": value["bitrate"],
        "content_type": value["contentType"],
        "url": value["url"]
      };
    }
    exports2.MediaVideoInfoVariantToJSONTyped = MediaVideoInfoVariantToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaVideoInfo.js
var require_MediaVideoInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaVideoInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaVideoInfoToJSONTyped = exports2.MediaVideoInfoToJSON = exports2.MediaVideoInfoFromJSONTyped = exports2.MediaVideoInfoFromJSON = exports2.instanceOfMediaVideoInfo = void 0;
    var MediaVideoInfoVariant_1 = require_MediaVideoInfoVariant();
    function instanceOfMediaVideoInfo(value) {
      if (!("aspectRatio" in value) || value["aspectRatio"] === void 0)
        return false;
      if (!("variants" in value) || value["variants"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaVideoInfo = instanceOfMediaVideoInfo;
    function MediaVideoInfoFromJSON(json) {
      return MediaVideoInfoFromJSONTyped(json, false);
    }
    exports2.MediaVideoInfoFromJSON = MediaVideoInfoFromJSON;
    function MediaVideoInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "aspectRatio": json["aspect_ratio"],
        "durationMillis": json["duration_millis"] == null ? void 0 : json["duration_millis"],
        "variants": json["variants"].map(MediaVideoInfoVariant_1.MediaVideoInfoVariantFromJSON)
      };
    }
    exports2.MediaVideoInfoFromJSONTyped = MediaVideoInfoFromJSONTyped;
    function MediaVideoInfoToJSON(json) {
      return MediaVideoInfoToJSONTyped(json, false);
    }
    exports2.MediaVideoInfoToJSON = MediaVideoInfoToJSON;
    function MediaVideoInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "aspect_ratio": value["aspectRatio"],
        "duration_millis": value["durationMillis"],
        "variants": value["variants"].map(MediaVideoInfoVariant_1.MediaVideoInfoVariantToJSON)
      };
    }
    exports2.MediaVideoInfoToJSONTyped = MediaVideoInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaSize.js
var require_MediaSize = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaSize.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaSizeToJSONTyped = exports2.MediaSizeToJSON = exports2.MediaSizeFromJSONTyped = exports2.MediaSizeFromJSON = exports2.instanceOfMediaSize = exports2.MediaSizeResizeEnum = void 0;
    exports2.MediaSizeResizeEnum = {
      Crop: "crop",
      Fit: "fit"
    };
    function instanceOfMediaSize(value) {
      if (!("h" in value) || value["h"] === void 0)
        return false;
      if (!("resize" in value) || value["resize"] === void 0)
        return false;
      if (!("w" in value) || value["w"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaSize = instanceOfMediaSize;
    function MediaSizeFromJSON(json) {
      return MediaSizeFromJSONTyped(json, false);
    }
    exports2.MediaSizeFromJSON = MediaSizeFromJSON;
    function MediaSizeFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "h": json["h"],
        "resize": json["resize"],
        "w": json["w"]
      };
    }
    exports2.MediaSizeFromJSONTyped = MediaSizeFromJSONTyped;
    function MediaSizeToJSON(json) {
      return MediaSizeToJSONTyped(json, false);
    }
    exports2.MediaSizeToJSON = MediaSizeToJSON;
    function MediaSizeToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "h": value["h"],
        "resize": value["resize"],
        "w": value["w"]
      };
    }
    exports2.MediaSizeToJSONTyped = MediaSizeToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaSizes.js
var require_MediaSizes = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaSizes.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaSizesToJSONTyped = exports2.MediaSizesToJSON = exports2.MediaSizesFromJSONTyped = exports2.MediaSizesFromJSON = exports2.instanceOfMediaSizes = void 0;
    var MediaSize_1 = require_MediaSize();
    function instanceOfMediaSizes(value) {
      if (!("large" in value) || value["large"] === void 0)
        return false;
      if (!("medium" in value) || value["medium"] === void 0)
        return false;
      if (!("small" in value) || value["small"] === void 0)
        return false;
      if (!("thumb" in value) || value["thumb"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaSizes = instanceOfMediaSizes;
    function MediaSizesFromJSON(json) {
      return MediaSizesFromJSONTyped(json, false);
    }
    exports2.MediaSizesFromJSON = MediaSizesFromJSON;
    function MediaSizesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "large": (0, MediaSize_1.MediaSizeFromJSON)(json["large"]),
        "medium": (0, MediaSize_1.MediaSizeFromJSON)(json["medium"]),
        "small": (0, MediaSize_1.MediaSizeFromJSON)(json["small"]),
        "thumb": (0, MediaSize_1.MediaSizeFromJSON)(json["thumb"])
      };
    }
    exports2.MediaSizesFromJSONTyped = MediaSizesFromJSONTyped;
    function MediaSizesToJSON(json) {
      return MediaSizesToJSONTyped(json, false);
    }
    exports2.MediaSizesToJSON = MediaSizesToJSON;
    function MediaSizesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "large": (0, MediaSize_1.MediaSizeToJSON)(value["large"]),
        "medium": (0, MediaSize_1.MediaSizeToJSON)(value["medium"]),
        "small": (0, MediaSize_1.MediaSizeToJSON)(value["small"]),
        "thumb": (0, MediaSize_1.MediaSizeToJSON)(value["thumb"])
      };
    }
    exports2.MediaSizesToJSONTyped = MediaSizesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaOriginalInfoFocusRect.js
var require_MediaOriginalInfoFocusRect = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaOriginalInfoFocusRect.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaOriginalInfoFocusRectToJSONTyped = exports2.MediaOriginalInfoFocusRectToJSON = exports2.MediaOriginalInfoFocusRectFromJSONTyped = exports2.MediaOriginalInfoFocusRectFromJSON = exports2.instanceOfMediaOriginalInfoFocusRect = void 0;
    function instanceOfMediaOriginalInfoFocusRect(value) {
      if (!("h" in value) || value["h"] === void 0)
        return false;
      if (!("w" in value) || value["w"] === void 0)
        return false;
      if (!("x" in value) || value["x"] === void 0)
        return false;
      if (!("y" in value) || value["y"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaOriginalInfoFocusRect = instanceOfMediaOriginalInfoFocusRect;
    function MediaOriginalInfoFocusRectFromJSON(json) {
      return MediaOriginalInfoFocusRectFromJSONTyped(json, false);
    }
    exports2.MediaOriginalInfoFocusRectFromJSON = MediaOriginalInfoFocusRectFromJSON;
    function MediaOriginalInfoFocusRectFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "h": json["h"],
        "w": json["w"],
        "x": json["x"],
        "y": json["y"]
      };
    }
    exports2.MediaOriginalInfoFocusRectFromJSONTyped = MediaOriginalInfoFocusRectFromJSONTyped;
    function MediaOriginalInfoFocusRectToJSON(json) {
      return MediaOriginalInfoFocusRectToJSONTyped(json, false);
    }
    exports2.MediaOriginalInfoFocusRectToJSON = MediaOriginalInfoFocusRectToJSON;
    function MediaOriginalInfoFocusRectToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "h": value["h"],
        "w": value["w"],
        "x": value["x"],
        "y": value["y"]
      };
    }
    exports2.MediaOriginalInfoFocusRectToJSONTyped = MediaOriginalInfoFocusRectToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaOriginalInfo.js
var require_MediaOriginalInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaOriginalInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaOriginalInfoToJSONTyped = exports2.MediaOriginalInfoToJSON = exports2.MediaOriginalInfoFromJSONTyped = exports2.MediaOriginalInfoFromJSON = exports2.instanceOfMediaOriginalInfo = void 0;
    var MediaOriginalInfoFocusRect_1 = require_MediaOriginalInfoFocusRect();
    function instanceOfMediaOriginalInfo(value) {
      if (!("height" in value) || value["height"] === void 0)
        return false;
      if (!("width" in value) || value["width"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaOriginalInfo = instanceOfMediaOriginalInfo;
    function MediaOriginalInfoFromJSON(json) {
      return MediaOriginalInfoFromJSONTyped(json, false);
    }
    exports2.MediaOriginalInfoFromJSON = MediaOriginalInfoFromJSON;
    function MediaOriginalInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "focusRects": json["focus_rects"] == null ? void 0 : json["focus_rects"].map(MediaOriginalInfoFocusRect_1.MediaOriginalInfoFocusRectFromJSON),
        "height": json["height"],
        "width": json["width"]
      };
    }
    exports2.MediaOriginalInfoFromJSONTyped = MediaOriginalInfoFromJSONTyped;
    function MediaOriginalInfoToJSON(json) {
      return MediaOriginalInfoToJSONTyped(json, false);
    }
    exports2.MediaOriginalInfoToJSON = MediaOriginalInfoToJSON;
    function MediaOriginalInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "focus_rects": value["focusRects"] == null ? void 0 : value["focusRects"].map(MediaOriginalInfoFocusRect_1.MediaOriginalInfoFocusRectToJSON),
        "height": value["height"],
        "width": value["width"]
      };
    }
    exports2.MediaOriginalInfoToJSONTyped = MediaOriginalInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Media.js
var require_Media = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Media.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaToJSONTyped = exports2.MediaToJSON = exports2.MediaFromJSONTyped = exports2.MediaFromJSON = exports2.instanceOfMedia = exports2.MediaTypeEnum = void 0;
    var AdditionalMediaInfo_1 = require_AdditionalMediaInfo();
    var AllowDownloadStatus_1 = require_AllowDownloadStatus();
    var MediaResults_1 = require_MediaResults();
    var SensitiveMediaWarning_1 = require_SensitiveMediaWarning();
    var ExtMediaAvailability_1 = require_ExtMediaAvailability();
    var MediaVideoInfo_1 = require_MediaVideoInfo();
    var MediaSizes_1 = require_MediaSizes();
    var MediaOriginalInfo_1 = require_MediaOriginalInfo();
    exports2.MediaTypeEnum = {
      Photo: "photo",
      Video: "video",
      AnimatedGif: "animated_gif"
    };
    function instanceOfMedia(value) {
      if (!("displayUrl" in value) || value["displayUrl"] === void 0)
        return false;
      if (!("expandedUrl" in value) || value["expandedUrl"] === void 0)
        return false;
      if (!("extMediaAvailability" in value) || value["extMediaAvailability"] === void 0)
        return false;
      if (!("idStr" in value) || value["idStr"] === void 0)
        return false;
      if (!("indices" in value) || value["indices"] === void 0)
        return false;
      if (!("mediaKey" in value) || value["mediaKey"] === void 0)
        return false;
      if (!("mediaUrlHttps" in value) || value["mediaUrlHttps"] === void 0)
        return false;
      if (!("originalInfo" in value) || value["originalInfo"] === void 0)
        return false;
      if (!("sizes" in value) || value["sizes"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMedia = instanceOfMedia;
    function MediaFromJSON(json) {
      return MediaFromJSONTyped(json, false);
    }
    exports2.MediaFromJSON = MediaFromJSON;
    function MediaFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "additionalMediaInfo": json["additional_media_info"] == null ? void 0 : (0, AdditionalMediaInfo_1.AdditionalMediaInfoFromJSON)(json["additional_media_info"]),
        "allowDownloadStatus": json["allow_download_status"] == null ? void 0 : (0, AllowDownloadStatus_1.AllowDownloadStatusFromJSON)(json["allow_download_status"]),
        "displayUrl": json["display_url"],
        "expandedUrl": json["expanded_url"],
        "extAltText": json["ext_alt_text"] == null ? void 0 : json["ext_alt_text"],
        "extMediaAvailability": (0, ExtMediaAvailability_1.ExtMediaAvailabilityFromJSON)(json["ext_media_availability"]),
        "features": json["features"] == null ? void 0 : json["features"],
        "idStr": json["id_str"],
        "indices": json["indices"],
        "mediaKey": json["media_key"],
        "mediaResults": json["media_results"] == null ? void 0 : (0, MediaResults_1.MediaResultsFromJSON)(json["media_results"]),
        "mediaUrlHttps": json["media_url_https"],
        "originalInfo": (0, MediaOriginalInfo_1.MediaOriginalInfoFromJSON)(json["original_info"]),
        "sensitiveMediaWarning": json["sensitive_media_warning"] == null ? void 0 : (0, SensitiveMediaWarning_1.SensitiveMediaWarningFromJSON)(json["sensitive_media_warning"]),
        "sizes": (0, MediaSizes_1.MediaSizesFromJSON)(json["sizes"]),
        "sourceStatusIdStr": json["source_status_id_str"] == null ? void 0 : json["source_status_id_str"],
        "sourceUserIdStr": json["source_user_id_str"] == null ? void 0 : json["source_user_id_str"],
        "type": json["type"],
        "url": json["url"],
        "videoInfo": json["video_info"] == null ? void 0 : (0, MediaVideoInfo_1.MediaVideoInfoFromJSON)(json["video_info"])
      };
    }
    exports2.MediaFromJSONTyped = MediaFromJSONTyped;
    function MediaToJSON(json) {
      return MediaToJSONTyped(json, false);
    }
    exports2.MediaToJSON = MediaToJSON;
    function MediaToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "additional_media_info": (0, AdditionalMediaInfo_1.AdditionalMediaInfoToJSON)(value["additionalMediaInfo"]),
        "allow_download_status": (0, AllowDownloadStatus_1.AllowDownloadStatusToJSON)(value["allowDownloadStatus"]),
        "display_url": value["displayUrl"],
        "expanded_url": value["expandedUrl"],
        "ext_alt_text": value["extAltText"],
        "ext_media_availability": (0, ExtMediaAvailability_1.ExtMediaAvailabilityToJSON)(value["extMediaAvailability"]),
        "features": value["features"],
        "id_str": value["idStr"],
        "indices": value["indices"],
        "media_key": value["mediaKey"],
        "media_results": (0, MediaResults_1.MediaResultsToJSON)(value["mediaResults"]),
        "media_url_https": value["mediaUrlHttps"],
        "original_info": (0, MediaOriginalInfo_1.MediaOriginalInfoToJSON)(value["originalInfo"]),
        "sensitive_media_warning": (0, SensitiveMediaWarning_1.SensitiveMediaWarningToJSON)(value["sensitiveMediaWarning"]),
        "sizes": (0, MediaSizes_1.MediaSizesToJSON)(value["sizes"]),
        "source_status_id_str": value["sourceStatusIdStr"],
        "source_user_id_str": value["sourceUserIdStr"],
        "type": value["type"],
        "url": value["url"],
        "video_info": (0, MediaVideoInfo_1.MediaVideoInfoToJSON)(value["videoInfo"])
      };
    }
    exports2.MediaToJSONTyped = MediaToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Timestamp.js
var require_Timestamp = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Timestamp.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimestampToJSONTyped = exports2.TimestampToJSON = exports2.TimestampFromJSONTyped = exports2.TimestampFromJSON = exports2.instanceOfTimestamp = void 0;
    function instanceOfTimestamp(value) {
      if (!("indices" in value) || value["indices"] === void 0)
        return false;
      if (!("seconds" in value) || value["seconds"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimestamp = instanceOfTimestamp;
    function TimestampFromJSON(json) {
      return TimestampFromJSONTyped(json, false);
    }
    exports2.TimestampFromJSON = TimestampFromJSON;
    function TimestampFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "indices": json["indices"],
        "seconds": json["seconds"],
        "text": json["text"]
      };
    }
    exports2.TimestampFromJSONTyped = TimestampFromJSONTyped;
    function TimestampToJSON(json) {
      return TimestampToJSONTyped(json, false);
    }
    exports2.TimestampToJSON = TimestampToJSON;
    function TimestampToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "indices": value["indices"],
        "seconds": value["seconds"],
        "text": value["text"]
      };
    }
    exports2.TimestampToJSONTyped = TimestampToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Url.js
var require_Url = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Url.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UrlToJSONTyped = exports2.UrlToJSON = exports2.UrlFromJSONTyped = exports2.UrlFromJSON = exports2.instanceOfUrl = void 0;
    function instanceOfUrl(value) {
      if (!("displayUrl" in value) || value["displayUrl"] === void 0)
        return false;
      if (!("indices" in value) || value["indices"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUrl = instanceOfUrl;
    function UrlFromJSON(json) {
      return UrlFromJSONTyped(json, false);
    }
    exports2.UrlFromJSON = UrlFromJSON;
    function UrlFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "displayUrl": json["display_url"],
        "expandedUrl": json["expanded_url"] == null ? void 0 : json["expanded_url"],
        "indices": json["indices"],
        "url": json["url"]
      };
    }
    exports2.UrlFromJSONTyped = UrlFromJSONTyped;
    function UrlToJSON(json) {
      return UrlToJSONTyped(json, false);
    }
    exports2.UrlToJSON = UrlToJSON;
    function UrlToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "display_url": value["displayUrl"],
        "expanded_url": value["expandedUrl"],
        "indices": value["indices"],
        "url": value["url"]
      };
    }
    exports2.UrlToJSONTyped = UrlToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Entities.js
var require_Entities = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Entities.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.EntitiesToJSONTyped = exports2.EntitiesToJSON = exports2.EntitiesFromJSONTyped = exports2.EntitiesFromJSON = exports2.instanceOfEntities = void 0;
    var Media_1 = require_Media();
    var Timestamp_1 = require_Timestamp();
    var Url_1 = require_Url();
    function instanceOfEntities(value) {
      if (!("hashtags" in value) || value["hashtags"] === void 0)
        return false;
      if (!("symbols" in value) || value["symbols"] === void 0)
        return false;
      if (!("urls" in value) || value["urls"] === void 0)
        return false;
      if (!("userMentions" in value) || value["userMentions"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfEntities = instanceOfEntities;
    function EntitiesFromJSON(json) {
      return EntitiesFromJSONTyped(json, false);
    }
    exports2.EntitiesFromJSON = EntitiesFromJSON;
    function EntitiesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "hashtags": json["hashtags"],
        "media": json["media"] == null ? void 0 : json["media"].map(Media_1.MediaFromJSON),
        "symbols": json["symbols"],
        "timestamps": json["timestamps"] == null ? void 0 : json["timestamps"].map(Timestamp_1.TimestampFromJSON),
        "urls": json["urls"].map(Url_1.UrlFromJSON),
        "userMentions": json["user_mentions"]
      };
    }
    exports2.EntitiesFromJSONTyped = EntitiesFromJSONTyped;
    function EntitiesToJSON(json) {
      return EntitiesToJSONTyped(json, false);
    }
    exports2.EntitiesToJSON = EntitiesToJSON;
    function EntitiesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "hashtags": value["hashtags"],
        "media": value["media"] == null ? void 0 : value["media"].map(Media_1.MediaToJSON),
        "symbols": value["symbols"],
        "timestamps": value["timestamps"] == null ? void 0 : value["timestamps"].map(Timestamp_1.TimestampToJSON),
        "urls": value["urls"].map(Url_1.UrlToJSON),
        "user_mentions": value["userMentions"]
      };
    }
    exports2.EntitiesToJSONTyped = EntitiesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultData.js
var require_NoteTweetResultData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResultData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.NoteTweetResultDataToJSONTyped = exports2.NoteTweetResultDataToJSON = exports2.NoteTweetResultDataFromJSONTyped = exports2.NoteTweetResultDataFromJSON = exports2.instanceOfNoteTweetResultData = void 0;
    var NoteTweetResultMedia_1 = require_NoteTweetResultMedia();
    var NoteTweetResultRichText_1 = require_NoteTweetResultRichText();
    var Entities_1 = require_Entities();
    function instanceOfNoteTweetResultData(value) {
      if (!("entitySet" in value) || value["entitySet"] === void 0)
        return false;
      if (!("id" in value) || value["id"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfNoteTweetResultData = instanceOfNoteTweetResultData;
    function NoteTweetResultDataFromJSON(json) {
      return NoteTweetResultDataFromJSONTyped(json, false);
    }
    exports2.NoteTweetResultDataFromJSON = NoteTweetResultDataFromJSON;
    function NoteTweetResultDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entitySet": (0, Entities_1.EntitiesFromJSON)(json["entity_set"]),
        "id": json["id"],
        "media": json["media"] == null ? void 0 : (0, NoteTweetResultMedia_1.NoteTweetResultMediaFromJSON)(json["media"]),
        "richtext": json["richtext"] == null ? void 0 : (0, NoteTweetResultRichText_1.NoteTweetResultRichTextFromJSON)(json["richtext"]),
        "text": json["text"]
      };
    }
    exports2.NoteTweetResultDataFromJSONTyped = NoteTweetResultDataFromJSONTyped;
    function NoteTweetResultDataToJSON(json) {
      return NoteTweetResultDataToJSONTyped(json, false);
    }
    exports2.NoteTweetResultDataToJSON = NoteTweetResultDataToJSON;
    function NoteTweetResultDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entity_set": (0, Entities_1.EntitiesToJSON)(value["entitySet"]),
        "id": value["id"],
        "media": (0, NoteTweetResultMedia_1.NoteTweetResultMediaToJSON)(value["media"]),
        "richtext": (0, NoteTweetResultRichText_1.NoteTweetResultRichTextToJSON)(value["richtext"]),
        "text": value["text"]
      };
    }
    exports2.NoteTweetResultDataToJSONTyped = NoteTweetResultDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResult.js
var require_NoteTweetResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweetResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.NoteTweetResultToJSONTyped = exports2.NoteTweetResultToJSON = exports2.NoteTweetResultFromJSONTyped = exports2.NoteTweetResultFromJSON = exports2.instanceOfNoteTweetResult = void 0;
    var NoteTweetResultData_1 = require_NoteTweetResultData();
    function instanceOfNoteTweetResult(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfNoteTweetResult = instanceOfNoteTweetResult;
    function NoteTweetResultFromJSON(json) {
      return NoteTweetResultFromJSONTyped(json, false);
    }
    exports2.NoteTweetResultFromJSON = NoteTweetResultFromJSON;
    function NoteTweetResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, NoteTweetResultData_1.NoteTweetResultDataFromJSON)(json["result"])
      };
    }
    exports2.NoteTweetResultFromJSONTyped = NoteTweetResultFromJSONTyped;
    function NoteTweetResultToJSON(json) {
      return NoteTweetResultToJSONTyped(json, false);
    }
    exports2.NoteTweetResultToJSON = NoteTweetResultToJSON;
    function NoteTweetResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, NoteTweetResultData_1.NoteTweetResultDataToJSON)(value["result"])
      };
    }
    exports2.NoteTweetResultToJSONTyped = NoteTweetResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweet.js
var require_NoteTweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/NoteTweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.NoteTweetToJSONTyped = exports2.NoteTweetToJSON = exports2.NoteTweetFromJSONTyped = exports2.NoteTweetFromJSON = exports2.instanceOfNoteTweet = void 0;
    var NoteTweetResult_1 = require_NoteTweetResult();
    function instanceOfNoteTweet(value) {
      if (!("isExpandable" in value) || value["isExpandable"] === void 0)
        return false;
      if (!("noteTweetResults" in value) || value["noteTweetResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfNoteTweet = instanceOfNoteTweet;
    function NoteTweetFromJSON(json) {
      return NoteTweetFromJSONTyped(json, false);
    }
    exports2.NoteTweetFromJSON = NoteTweetFromJSON;
    function NoteTweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "isExpandable": json["is_expandable"],
        "noteTweetResults": (0, NoteTweetResult_1.NoteTweetResultFromJSON)(json["note_tweet_results"])
      };
    }
    exports2.NoteTweetFromJSONTyped = NoteTweetFromJSONTyped;
    function NoteTweetToJSON(json) {
      return NoteTweetToJSONTyped(json, false);
    }
    exports2.NoteTweetToJSON = NoteTweetToJSON;
    function NoteTweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "is_expandable": value["isExpandable"],
        "note_tweet_results": (0, NoteTweetResult_1.NoteTweetResultToJSON)(value["noteTweetResults"])
      };
    }
    exports2.NoteTweetToJSONTyped = NoteTweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SuperFollowsReplyUserResultLegacy.js
var require_SuperFollowsReplyUserResultLegacy = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SuperFollowsReplyUserResultLegacy.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SuperFollowsReplyUserResultLegacyToJSONTyped = exports2.SuperFollowsReplyUserResultLegacyToJSON = exports2.SuperFollowsReplyUserResultLegacyFromJSONTyped = exports2.SuperFollowsReplyUserResultLegacyFromJSON = exports2.instanceOfSuperFollowsReplyUserResultLegacy = void 0;
    function instanceOfSuperFollowsReplyUserResultLegacy(value) {
      if (!("screenName" in value) || value["screenName"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfSuperFollowsReplyUserResultLegacy = instanceOfSuperFollowsReplyUserResultLegacy;
    function SuperFollowsReplyUserResultLegacyFromJSON(json) {
      return SuperFollowsReplyUserResultLegacyFromJSONTyped(json, false);
    }
    exports2.SuperFollowsReplyUserResultLegacyFromJSON = SuperFollowsReplyUserResultLegacyFromJSON;
    function SuperFollowsReplyUserResultLegacyFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "screenName": json["screen_name"]
      };
    }
    exports2.SuperFollowsReplyUserResultLegacyFromJSONTyped = SuperFollowsReplyUserResultLegacyFromJSONTyped;
    function SuperFollowsReplyUserResultLegacyToJSON(json) {
      return SuperFollowsReplyUserResultLegacyToJSONTyped(json, false);
    }
    exports2.SuperFollowsReplyUserResultLegacyToJSON = SuperFollowsReplyUserResultLegacyToJSON;
    function SuperFollowsReplyUserResultLegacyToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "screen_name": value["screenName"]
      };
    }
    exports2.SuperFollowsReplyUserResultLegacyToJSONTyped = SuperFollowsReplyUserResultLegacyToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SuperFollowsReplyUserResultData.js
var require_SuperFollowsReplyUserResultData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SuperFollowsReplyUserResultData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SuperFollowsReplyUserResultDataToJSONTyped = exports2.SuperFollowsReplyUserResultDataToJSON = exports2.SuperFollowsReplyUserResultDataFromJSONTyped = exports2.SuperFollowsReplyUserResultDataFromJSON = exports2.instanceOfSuperFollowsReplyUserResultData = void 0;
    var TypeName_1 = require_TypeName();
    var SuperFollowsReplyUserResultLegacy_1 = require_SuperFollowsReplyUserResultLegacy();
    function instanceOfSuperFollowsReplyUserResultData(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("legacy" in value) || value["legacy"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfSuperFollowsReplyUserResultData = instanceOfSuperFollowsReplyUserResultData;
    function SuperFollowsReplyUserResultDataFromJSON(json) {
      return SuperFollowsReplyUserResultDataFromJSONTyped(json, false);
    }
    exports2.SuperFollowsReplyUserResultDataFromJSON = SuperFollowsReplyUserResultDataFromJSON;
    function SuperFollowsReplyUserResultDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "legacy": (0, SuperFollowsReplyUserResultLegacy_1.SuperFollowsReplyUserResultLegacyFromJSON)(json["legacy"])
      };
    }
    exports2.SuperFollowsReplyUserResultDataFromJSONTyped = SuperFollowsReplyUserResultDataFromJSONTyped;
    function SuperFollowsReplyUserResultDataToJSON(json) {
      return SuperFollowsReplyUserResultDataToJSONTyped(json, false);
    }
    exports2.SuperFollowsReplyUserResultDataToJSON = SuperFollowsReplyUserResultDataToJSON;
    function SuperFollowsReplyUserResultDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "legacy": (0, SuperFollowsReplyUserResultLegacy_1.SuperFollowsReplyUserResultLegacyToJSON)(value["legacy"])
      };
    }
    exports2.SuperFollowsReplyUserResultDataToJSONTyped = SuperFollowsReplyUserResultDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SuperFollowsReplyUserResult.js
var require_SuperFollowsReplyUserResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SuperFollowsReplyUserResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SuperFollowsReplyUserResultToJSONTyped = exports2.SuperFollowsReplyUserResultToJSON = exports2.SuperFollowsReplyUserResultFromJSONTyped = exports2.SuperFollowsReplyUserResultFromJSON = exports2.instanceOfSuperFollowsReplyUserResult = void 0;
    var SuperFollowsReplyUserResultData_1 = require_SuperFollowsReplyUserResultData();
    function instanceOfSuperFollowsReplyUserResult(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfSuperFollowsReplyUserResult = instanceOfSuperFollowsReplyUserResult;
    function SuperFollowsReplyUserResultFromJSON(json) {
      return SuperFollowsReplyUserResultFromJSONTyped(json, false);
    }
    exports2.SuperFollowsReplyUserResultFromJSON = SuperFollowsReplyUserResultFromJSON;
    function SuperFollowsReplyUserResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, SuperFollowsReplyUserResultData_1.SuperFollowsReplyUserResultDataFromJSON)(json["result"])
      };
    }
    exports2.SuperFollowsReplyUserResultFromJSONTyped = SuperFollowsReplyUserResultFromJSONTyped;
    function SuperFollowsReplyUserResultToJSON(json) {
      return SuperFollowsReplyUserResultToJSONTyped(json, false);
    }
    exports2.SuperFollowsReplyUserResultToJSON = SuperFollowsReplyUserResultToJSON;
    function SuperFollowsReplyUserResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, SuperFollowsReplyUserResultData_1.SuperFollowsReplyUserResultDataToJSON)(value["result"])
      };
    }
    exports2.SuperFollowsReplyUserResultToJSONTyped = SuperFollowsReplyUserResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetEditControlInitial.js
var require_TweetEditControlInitial = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetEditControlInitial.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetEditControlInitialToJSONTyped = exports2.TweetEditControlInitialToJSON = exports2.TweetEditControlInitialFromJSONTyped = exports2.TweetEditControlInitialFromJSON = exports2.instanceOfTweetEditControlInitial = void 0;
    function instanceOfTweetEditControlInitial(value) {
      if (!("editTweetIds" in value) || value["editTweetIds"] === void 0)
        return false;
      if (!("editableUntilMsecs" in value) || value["editableUntilMsecs"] === void 0)
        return false;
      if (!("editsRemaining" in value) || value["editsRemaining"] === void 0)
        return false;
      if (!("isEditEligible" in value) || value["isEditEligible"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetEditControlInitial = instanceOfTweetEditControlInitial;
    function TweetEditControlInitialFromJSON(json) {
      return TweetEditControlInitialFromJSONTyped(json, false);
    }
    exports2.TweetEditControlInitialFromJSON = TweetEditControlInitialFromJSON;
    function TweetEditControlInitialFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "editTweetIds": json["edit_tweet_ids"],
        "editableUntilMsecs": json["editable_until_msecs"],
        "editsRemaining": json["edits_remaining"],
        "isEditEligible": json["is_edit_eligible"]
      };
    }
    exports2.TweetEditControlInitialFromJSONTyped = TweetEditControlInitialFromJSONTyped;
    function TweetEditControlInitialToJSON(json) {
      return TweetEditControlInitialToJSONTyped(json, false);
    }
    exports2.TweetEditControlInitialToJSON = TweetEditControlInitialToJSON;
    function TweetEditControlInitialToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "edit_tweet_ids": value["editTweetIds"],
        "editable_until_msecs": value["editableUntilMsecs"],
        "edits_remaining": value["editsRemaining"],
        "is_edit_eligible": value["isEditEligible"]
      };
    }
    exports2.TweetEditControlInitialToJSONTyped = TweetEditControlInitialToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetEditControl.js
var require_TweetEditControl = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetEditControl.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetEditControlToJSONTyped = exports2.TweetEditControlToJSON = exports2.TweetEditControlFromJSONTyped = exports2.TweetEditControlFromJSON = exports2.instanceOfTweetEditControl = void 0;
    var TweetEditControlInitial_1 = require_TweetEditControlInitial();
    function instanceOfTweetEditControl(value) {
      return true;
    }
    exports2.instanceOfTweetEditControl = instanceOfTweetEditControl;
    function TweetEditControlFromJSON(json) {
      return TweetEditControlFromJSONTyped(json, false);
    }
    exports2.TweetEditControlFromJSON = TweetEditControlFromJSON;
    function TweetEditControlFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "editControlInitial": json["edit_control_initial"] == null ? void 0 : (0, TweetEditControlInitial_1.TweetEditControlInitialFromJSON)(json["edit_control_initial"]),
        "editTweetIds": json["edit_tweet_ids"] == null ? void 0 : json["edit_tweet_ids"],
        "editableUntilMsecs": json["editable_until_msecs"] == null ? void 0 : json["editable_until_msecs"],
        "editsRemaining": json["edits_remaining"] == null ? void 0 : json["edits_remaining"],
        "initialTweetId": json["initial_tweet_id"] == null ? void 0 : json["initial_tweet_id"],
        "isEditEligible": json["is_edit_eligible"] == null ? void 0 : json["is_edit_eligible"]
      };
    }
    exports2.TweetEditControlFromJSONTyped = TweetEditControlFromJSONTyped;
    function TweetEditControlToJSON(json) {
      return TweetEditControlToJSONTyped(json, false);
    }
    exports2.TweetEditControlToJSON = TweetEditControlToJSON;
    function TweetEditControlToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "edit_control_initial": (0, TweetEditControlInitial_1.TweetEditControlInitialToJSON)(value["editControlInitial"]),
        "edit_tweet_ids": value["editTweetIds"],
        "editable_until_msecs": value["editableUntilMsecs"],
        "edits_remaining": value["editsRemaining"],
        "initial_tweet_id": value["initialTweetId"],
        "is_edit_eligible": value["isEditEligible"]
      };
    }
    exports2.TweetEditControlToJSONTyped = TweetEditControlToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityRelationship.js
var require_CommunityRelationship = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunityRelationship.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunityRelationshipToJSONTyped = exports2.CommunityRelationshipToJSON = exports2.CommunityRelationshipFromJSONTyped = exports2.CommunityRelationshipFromJSON = exports2.instanceOfCommunityRelationship = void 0;
    var CommunityActions_1 = require_CommunityActions();
    function instanceOfCommunityRelationship(value) {
      if (!("actions" in value) || value["actions"] === void 0)
        return false;
      if (!("id" in value) || value["id"] === void 0)
        return false;
      if (!("moderationState" in value) || value["moderationState"] === void 0)
        return false;
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunityRelationship = instanceOfCommunityRelationship;
    function CommunityRelationshipFromJSON(json) {
      return CommunityRelationshipFromJSONTyped(json, false);
    }
    exports2.CommunityRelationshipFromJSON = CommunityRelationshipFromJSON;
    function CommunityRelationshipFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "actions": (0, CommunityActions_1.CommunityActionsFromJSON)(json["actions"]),
        "id": json["id"],
        "moderationState": json["moderation_state"],
        "restId": json["rest_id"]
      };
    }
    exports2.CommunityRelationshipFromJSONTyped = CommunityRelationshipFromJSONTyped;
    function CommunityRelationshipToJSON(json) {
      return CommunityRelationshipToJSONTyped(json, false);
    }
    exports2.CommunityRelationshipToJSON = CommunityRelationshipToJSON;
    function CommunityRelationshipToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "actions": (0, CommunityActions_1.CommunityActionsToJSON)(value["actions"]),
        "id": value["id"],
        "moderation_state": value["moderationState"],
        "rest_id": value["restId"]
      };
    }
    exports2.CommunityRelationshipToJSONTyped = CommunityRelationshipToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetEditPrespective.js
var require_TweetEditPrespective = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetEditPrespective.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetEditPrespectiveToJSONTyped = exports2.TweetEditPrespectiveToJSON = exports2.TweetEditPrespectiveFromJSONTyped = exports2.TweetEditPrespectiveFromJSON = exports2.instanceOfTweetEditPrespective = void 0;
    function instanceOfTweetEditPrespective(value) {
      return true;
    }
    exports2.instanceOfTweetEditPrespective = instanceOfTweetEditPrespective;
    function TweetEditPrespectiveFromJSON(json) {
      return TweetEditPrespectiveFromJSONTyped(json, false);
    }
    exports2.TweetEditPrespectiveFromJSON = TweetEditPrespectiveFromJSON;
    function TweetEditPrespectiveFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "favorited": json["favorited"] == null ? void 0 : json["favorited"],
        "retweeted": json["retweeted"] == null ? void 0 : json["retweeted"]
      };
    }
    exports2.TweetEditPrespectiveFromJSONTyped = TweetEditPrespectiveFromJSONTyped;
    function TweetEditPrespectiveToJSON(json) {
      return TweetEditPrespectiveToJSONTyped(json, false);
    }
    exports2.TweetEditPrespectiveToJSON = TweetEditPrespectiveToJSON;
    function TweetEditPrespectiveToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "favorited": value["favorited"],
        "retweeted": value["retweeted"]
      };
    }
    exports2.TweetEditPrespectiveToJSONTyped = TweetEditPrespectiveToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetPreviousCounts.js
var require_TweetPreviousCounts = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetPreviousCounts.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetPreviousCountsToJSONTyped = exports2.TweetPreviousCountsToJSON = exports2.TweetPreviousCountsFromJSONTyped = exports2.TweetPreviousCountsFromJSON = exports2.instanceOfTweetPreviousCounts = void 0;
    function instanceOfTweetPreviousCounts(value) {
      if (!("bookmarkCount" in value) || value["bookmarkCount"] === void 0)
        return false;
      if (!("favoriteCount" in value) || value["favoriteCount"] === void 0)
        return false;
      if (!("quoteCount" in value) || value["quoteCount"] === void 0)
        return false;
      if (!("replyCount" in value) || value["replyCount"] === void 0)
        return false;
      if (!("retweetCount" in value) || value["retweetCount"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetPreviousCounts = instanceOfTweetPreviousCounts;
    function TweetPreviousCountsFromJSON(json) {
      return TweetPreviousCountsFromJSONTyped(json, false);
    }
    exports2.TweetPreviousCountsFromJSON = TweetPreviousCountsFromJSON;
    function TweetPreviousCountsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "bookmarkCount": json["bookmark_count"],
        "favoriteCount": json["favorite_count"],
        "quoteCount": json["quote_count"],
        "replyCount": json["reply_count"],
        "retweetCount": json["retweet_count"]
      };
    }
    exports2.TweetPreviousCountsFromJSONTyped = TweetPreviousCountsFromJSONTyped;
    function TweetPreviousCountsToJSON(json) {
      return TweetPreviousCountsToJSONTyped(json, false);
    }
    exports2.TweetPreviousCountsToJSON = TweetPreviousCountsToJSON;
    function TweetPreviousCountsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "bookmark_count": value["bookmarkCount"],
        "favorite_count": value["favoriteCount"],
        "quote_count": value["quoteCount"],
        "reply_count": value["replyCount"],
        "retweet_count": value["retweetCount"]
      };
    }
    exports2.TweetPreviousCountsToJSONTyped = TweetPreviousCountsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetView.js
var require_TweetView = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetView.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetViewToJSONTyped = exports2.TweetViewToJSON = exports2.TweetViewFromJSONTyped = exports2.TweetViewFromJSON = exports2.instanceOfTweetView = exports2.TweetViewStateEnum = void 0;
    exports2.TweetViewStateEnum = {
      Enabled: "Enabled",
      EnabledWithCount: "EnabledWithCount"
    };
    function instanceOfTweetView(value) {
      if (!("state" in value) || value["state"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetView = instanceOfTweetView;
    function TweetViewFromJSON(json) {
      return TweetViewFromJSONTyped(json, false);
    }
    exports2.TweetViewFromJSON = TweetViewFromJSON;
    function TweetViewFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "count": json["count"] == null ? void 0 : json["count"],
        "state": json["state"]
      };
    }
    exports2.TweetViewFromJSONTyped = TweetViewFromJSONTyped;
    function TweetViewToJSON(json) {
      return TweetViewToJSONTyped(json, false);
    }
    exports2.TweetViewToJSON = TweetViewToJSON;
    function TweetViewToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "count": value["count"],
        "state": value["state"]
      };
    }
    exports2.TweetViewToJSONTyped = TweetViewToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardPlatformAudience.js
var require_TweetCardPlatformAudience = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardPlatformAudience.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardPlatformAudienceToJSONTyped = exports2.TweetCardPlatformAudienceToJSON = exports2.TweetCardPlatformAudienceFromJSONTyped = exports2.TweetCardPlatformAudienceFromJSON = exports2.instanceOfTweetCardPlatformAudience = exports2.TweetCardPlatformAudienceNameEnum = void 0;
    exports2.TweetCardPlatformAudienceNameEnum = {
      Production: "production"
    };
    function instanceOfTweetCardPlatformAudience(value) {
      if (!("name" in value) || value["name"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetCardPlatformAudience = instanceOfTweetCardPlatformAudience;
    function TweetCardPlatformAudienceFromJSON(json) {
      return TweetCardPlatformAudienceFromJSONTyped(json, false);
    }
    exports2.TweetCardPlatformAudienceFromJSON = TweetCardPlatformAudienceFromJSON;
    function TweetCardPlatformAudienceFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "name": json["name"]
      };
    }
    exports2.TweetCardPlatformAudienceFromJSONTyped = TweetCardPlatformAudienceFromJSONTyped;
    function TweetCardPlatformAudienceToJSON(json) {
      return TweetCardPlatformAudienceToJSONTyped(json, false);
    }
    exports2.TweetCardPlatformAudienceToJSON = TweetCardPlatformAudienceToJSON;
    function TweetCardPlatformAudienceToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "name": value["name"]
      };
    }
    exports2.TweetCardPlatformAudienceToJSONTyped = TweetCardPlatformAudienceToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardPlatformDevice.js
var require_TweetCardPlatformDevice = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardPlatformDevice.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardPlatformDeviceToJSONTyped = exports2.TweetCardPlatformDeviceToJSON = exports2.TweetCardPlatformDeviceFromJSONTyped = exports2.TweetCardPlatformDeviceFromJSON = exports2.instanceOfTweetCardPlatformDevice = void 0;
    function instanceOfTweetCardPlatformDevice(value) {
      if (!("name" in value) || value["name"] === void 0)
        return false;
      if (!("version" in value) || value["version"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetCardPlatformDevice = instanceOfTweetCardPlatformDevice;
    function TweetCardPlatformDeviceFromJSON(json) {
      return TweetCardPlatformDeviceFromJSONTyped(json, false);
    }
    exports2.TweetCardPlatformDeviceFromJSON = TweetCardPlatformDeviceFromJSON;
    function TweetCardPlatformDeviceFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "name": json["name"],
        "version": json["version"]
      };
    }
    exports2.TweetCardPlatformDeviceFromJSONTyped = TweetCardPlatformDeviceFromJSONTyped;
    function TweetCardPlatformDeviceToJSON(json) {
      return TweetCardPlatformDeviceToJSONTyped(json, false);
    }
    exports2.TweetCardPlatformDeviceToJSON = TweetCardPlatformDeviceToJSON;
    function TweetCardPlatformDeviceToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "name": value["name"],
        "version": value["version"]
      };
    }
    exports2.TweetCardPlatformDeviceToJSONTyped = TweetCardPlatformDeviceToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardPlatform.js
var require_TweetCardPlatform = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardPlatform.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardPlatformToJSONTyped = exports2.TweetCardPlatformToJSON = exports2.TweetCardPlatformFromJSONTyped = exports2.TweetCardPlatformFromJSON = exports2.instanceOfTweetCardPlatform = void 0;
    var TweetCardPlatformAudience_1 = require_TweetCardPlatformAudience();
    var TweetCardPlatformDevice_1 = require_TweetCardPlatformDevice();
    function instanceOfTweetCardPlatform(value) {
      if (!("audience" in value) || value["audience"] === void 0)
        return false;
      if (!("device" in value) || value["device"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetCardPlatform = instanceOfTweetCardPlatform;
    function TweetCardPlatformFromJSON(json) {
      return TweetCardPlatformFromJSONTyped(json, false);
    }
    exports2.TweetCardPlatformFromJSON = TweetCardPlatformFromJSON;
    function TweetCardPlatformFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "audience": (0, TweetCardPlatformAudience_1.TweetCardPlatformAudienceFromJSON)(json["audience"]),
        "device": (0, TweetCardPlatformDevice_1.TweetCardPlatformDeviceFromJSON)(json["device"])
      };
    }
    exports2.TweetCardPlatformFromJSONTyped = TweetCardPlatformFromJSONTyped;
    function TweetCardPlatformToJSON(json) {
      return TweetCardPlatformToJSONTyped(json, false);
    }
    exports2.TweetCardPlatformToJSON = TweetCardPlatformToJSON;
    function TweetCardPlatformToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "audience": (0, TweetCardPlatformAudience_1.TweetCardPlatformAudienceToJSON)(value["audience"]),
        "device": (0, TweetCardPlatformDevice_1.TweetCardPlatformDeviceToJSON)(value["device"])
      };
    }
    exports2.TweetCardPlatformToJSONTyped = TweetCardPlatformToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardPlatformData.js
var require_TweetCardPlatformData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardPlatformData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardPlatformDataToJSONTyped = exports2.TweetCardPlatformDataToJSON = exports2.TweetCardPlatformDataFromJSONTyped = exports2.TweetCardPlatformDataFromJSON = exports2.instanceOfTweetCardPlatformData = void 0;
    var TweetCardPlatform_1 = require_TweetCardPlatform();
    function instanceOfTweetCardPlatformData(value) {
      if (!("platform" in value) || value["platform"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetCardPlatformData = instanceOfTweetCardPlatformData;
    function TweetCardPlatformDataFromJSON(json) {
      return TweetCardPlatformDataFromJSONTyped(json, false);
    }
    exports2.TweetCardPlatformDataFromJSON = TweetCardPlatformDataFromJSON;
    function TweetCardPlatformDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "platform": (0, TweetCardPlatform_1.TweetCardPlatformFromJSON)(json["platform"])
      };
    }
    exports2.TweetCardPlatformDataFromJSONTyped = TweetCardPlatformDataFromJSONTyped;
    function TweetCardPlatformDataToJSON(json) {
      return TweetCardPlatformDataToJSONTyped(json, false);
    }
    exports2.TweetCardPlatformDataToJSON = TweetCardPlatformDataToJSON;
    function TweetCardPlatformDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "platform": (0, TweetCardPlatform_1.TweetCardPlatformToJSON)(value["platform"])
      };
    }
    exports2.TweetCardPlatformDataToJSONTyped = TweetCardPlatformDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardLegacyBindingValueDataImage.js
var require_TweetCardLegacyBindingValueDataImage = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardLegacyBindingValueDataImage.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardLegacyBindingValueDataImageToJSONTyped = exports2.TweetCardLegacyBindingValueDataImageToJSON = exports2.TweetCardLegacyBindingValueDataImageFromJSONTyped = exports2.TweetCardLegacyBindingValueDataImageFromJSON = exports2.instanceOfTweetCardLegacyBindingValueDataImage = void 0;
    function instanceOfTweetCardLegacyBindingValueDataImage(value) {
      if (!("height" in value) || value["height"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      if (!("width" in value) || value["width"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetCardLegacyBindingValueDataImage = instanceOfTweetCardLegacyBindingValueDataImage;
    function TweetCardLegacyBindingValueDataImageFromJSON(json) {
      return TweetCardLegacyBindingValueDataImageFromJSONTyped(json, false);
    }
    exports2.TweetCardLegacyBindingValueDataImageFromJSON = TweetCardLegacyBindingValueDataImageFromJSON;
    function TweetCardLegacyBindingValueDataImageFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "alt": json["alt"] == null ? void 0 : json["alt"],
        "height": json["height"],
        "url": json["url"],
        "width": json["width"]
      };
    }
    exports2.TweetCardLegacyBindingValueDataImageFromJSONTyped = TweetCardLegacyBindingValueDataImageFromJSONTyped;
    function TweetCardLegacyBindingValueDataImageToJSON(json) {
      return TweetCardLegacyBindingValueDataImageToJSONTyped(json, false);
    }
    exports2.TweetCardLegacyBindingValueDataImageToJSON = TweetCardLegacyBindingValueDataImageToJSON;
    function TweetCardLegacyBindingValueDataImageToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "alt": value["alt"],
        "height": value["height"],
        "url": value["url"],
        "width": value["width"]
      };
    }
    exports2.TweetCardLegacyBindingValueDataImageToJSONTyped = TweetCardLegacyBindingValueDataImageToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserValue.js
var require_UserValue = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserValue.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserValueToJSONTyped = exports2.UserValueToJSON = exports2.UserValueFromJSONTyped = exports2.UserValueFromJSON = exports2.instanceOfUserValue = void 0;
    function instanceOfUserValue(value) {
      if (!("idStr" in value) || value["idStr"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserValue = instanceOfUserValue;
    function UserValueFromJSON(json) {
      return UserValueFromJSONTyped(json, false);
    }
    exports2.UserValueFromJSON = UserValueFromJSON;
    function UserValueFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "idStr": json["id_str"]
      };
    }
    exports2.UserValueFromJSONTyped = UserValueFromJSONTyped;
    function UserValueToJSON(json) {
      return UserValueToJSONTyped(json, false);
    }
    exports2.UserValueToJSON = UserValueToJSON;
    function UserValueToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "id_str": value["idStr"]
      };
    }
    exports2.UserValueToJSONTyped = UserValueToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardLegacyBindingValueData.js
var require_TweetCardLegacyBindingValueData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardLegacyBindingValueData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardLegacyBindingValueDataToJSONTyped = exports2.TweetCardLegacyBindingValueDataToJSON = exports2.TweetCardLegacyBindingValueDataFromJSONTyped = exports2.TweetCardLegacyBindingValueDataFromJSON = exports2.instanceOfTweetCardLegacyBindingValueData = void 0;
    var TweetCardLegacyBindingValueDataImage_1 = require_TweetCardLegacyBindingValueDataImage();
    var UserValue_1 = require_UserValue();
    function instanceOfTweetCardLegacyBindingValueData(value) {
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetCardLegacyBindingValueData = instanceOfTweetCardLegacyBindingValueData;
    function TweetCardLegacyBindingValueDataFromJSON(json) {
      return TweetCardLegacyBindingValueDataFromJSONTyped(json, false);
    }
    exports2.TweetCardLegacyBindingValueDataFromJSON = TweetCardLegacyBindingValueDataFromJSON;
    function TweetCardLegacyBindingValueDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "booleanValue": json["boolean_value"] == null ? void 0 : json["boolean_value"],
        "imageColorValue": json["image_color_value"] == null ? void 0 : json["image_color_value"],
        "imageValue": json["image_value"] == null ? void 0 : (0, TweetCardLegacyBindingValueDataImage_1.TweetCardLegacyBindingValueDataImageFromJSON)(json["image_value"]),
        "scribeKey": json["scribe_key"] == null ? void 0 : json["scribe_key"],
        "stringValue": json["string_value"] == null ? void 0 : json["string_value"],
        "type": json["type"],
        "userValue": json["user_value"] == null ? void 0 : (0, UserValue_1.UserValueFromJSON)(json["user_value"])
      };
    }
    exports2.TweetCardLegacyBindingValueDataFromJSONTyped = TweetCardLegacyBindingValueDataFromJSONTyped;
    function TweetCardLegacyBindingValueDataToJSON(json) {
      return TweetCardLegacyBindingValueDataToJSONTyped(json, false);
    }
    exports2.TweetCardLegacyBindingValueDataToJSON = TweetCardLegacyBindingValueDataToJSON;
    function TweetCardLegacyBindingValueDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "boolean_value": value["booleanValue"],
        "image_color_value": value["imageColorValue"],
        "image_value": (0, TweetCardLegacyBindingValueDataImage_1.TweetCardLegacyBindingValueDataImageToJSON)(value["imageValue"]),
        "scribe_key": value["scribeKey"],
        "string_value": value["stringValue"],
        "type": value["type"],
        "user_value": (0, UserValue_1.UserValueToJSON)(value["userValue"])
      };
    }
    exports2.TweetCardLegacyBindingValueDataToJSONTyped = TweetCardLegacyBindingValueDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardLegacyBindingValue.js
var require_TweetCardLegacyBindingValue = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardLegacyBindingValue.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardLegacyBindingValueToJSONTyped = exports2.TweetCardLegacyBindingValueToJSON = exports2.TweetCardLegacyBindingValueFromJSONTyped = exports2.TweetCardLegacyBindingValueFromJSON = exports2.instanceOfTweetCardLegacyBindingValue = void 0;
    var TweetCardLegacyBindingValueData_1 = require_TweetCardLegacyBindingValueData();
    function instanceOfTweetCardLegacyBindingValue(value) {
      if (!("key" in value) || value["key"] === void 0)
        return false;
      if (!("value" in value) || value["value"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetCardLegacyBindingValue = instanceOfTweetCardLegacyBindingValue;
    function TweetCardLegacyBindingValueFromJSON(json) {
      return TweetCardLegacyBindingValueFromJSONTyped(json, false);
    }
    exports2.TweetCardLegacyBindingValueFromJSON = TweetCardLegacyBindingValueFromJSON;
    function TweetCardLegacyBindingValueFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "key": json["key"],
        "value": (0, TweetCardLegacyBindingValueData_1.TweetCardLegacyBindingValueDataFromJSON)(json["value"])
      };
    }
    exports2.TweetCardLegacyBindingValueFromJSONTyped = TweetCardLegacyBindingValueFromJSONTyped;
    function TweetCardLegacyBindingValueToJSON(json) {
      return TweetCardLegacyBindingValueToJSONTyped(json, false);
    }
    exports2.TweetCardLegacyBindingValueToJSON = TweetCardLegacyBindingValueToJSON;
    function TweetCardLegacyBindingValueToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "key": value["key"],
        "value": (0, TweetCardLegacyBindingValueData_1.TweetCardLegacyBindingValueDataToJSON)(value["value"])
      };
    }
    exports2.TweetCardLegacyBindingValueToJSONTyped = TweetCardLegacyBindingValueToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardLegacy.js
var require_TweetCardLegacy = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCardLegacy.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardLegacyToJSONTyped = exports2.TweetCardLegacyToJSON = exports2.TweetCardLegacyFromJSONTyped = exports2.TweetCardLegacyFromJSON = exports2.instanceOfTweetCardLegacy = void 0;
    var TweetCardPlatformData_1 = require_TweetCardPlatformData();
    var TweetCardLegacyBindingValue_1 = require_TweetCardLegacyBindingValue();
    var UserResults_1 = require_UserResults();
    function instanceOfTweetCardLegacy(value) {
      if (!("bindingValues" in value) || value["bindingValues"] === void 0)
        return false;
      if (!("name" in value) || value["name"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetCardLegacy = instanceOfTweetCardLegacy;
    function TweetCardLegacyFromJSON(json) {
      return TweetCardLegacyFromJSONTyped(json, false);
    }
    exports2.TweetCardLegacyFromJSON = TweetCardLegacyFromJSON;
    function TweetCardLegacyFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "bindingValues": json["binding_values"].map(TweetCardLegacyBindingValue_1.TweetCardLegacyBindingValueFromJSON),
        "cardPlatform": json["card_platform"] == null ? void 0 : (0, TweetCardPlatformData_1.TweetCardPlatformDataFromJSON)(json["card_platform"]),
        "name": json["name"],
        "url": json["url"],
        "userRefsResults": json["user_refs_results"] == null ? void 0 : json["user_refs_results"].map(UserResults_1.UserResultsFromJSON)
      };
    }
    exports2.TweetCardLegacyFromJSONTyped = TweetCardLegacyFromJSONTyped;
    function TweetCardLegacyToJSON(json) {
      return TweetCardLegacyToJSONTyped(json, false);
    }
    exports2.TweetCardLegacyToJSON = TweetCardLegacyToJSON;
    function TweetCardLegacyToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "binding_values": value["bindingValues"].map(TweetCardLegacyBindingValue_1.TweetCardLegacyBindingValueToJSON),
        "card_platform": (0, TweetCardPlatformData_1.TweetCardPlatformDataToJSON)(value["cardPlatform"]),
        "name": value["name"],
        "url": value["url"],
        "user_refs_results": value["userRefsResults"] == null ? void 0 : value["userRefsResults"].map(UserResults_1.UserResultsToJSON)
      };
    }
    exports2.TweetCardLegacyToJSONTyped = TweetCardLegacyToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCard.js
var require_TweetCard = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetCard.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetCardToJSONTyped = exports2.TweetCardToJSON = exports2.TweetCardFromJSONTyped = exports2.TweetCardFromJSON = exports2.instanceOfTweetCard = void 0;
    var TweetCardLegacy_1 = require_TweetCardLegacy();
    function instanceOfTweetCard(value) {
      return true;
    }
    exports2.instanceOfTweetCard = instanceOfTweetCard;
    function TweetCardFromJSON(json) {
      return TweetCardFromJSONTyped(json, false);
    }
    exports2.TweetCardFromJSON = TweetCardFromJSON;
    function TweetCardFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "legacy": json["legacy"] == null ? void 0 : (0, TweetCardLegacy_1.TweetCardLegacyFromJSON)(json["legacy"]),
        "restId": json["rest_id"] == null ? void 0 : json["rest_id"]
      };
    }
    exports2.TweetCardFromJSONTyped = TweetCardFromJSONTyped;
    function TweetCardToJSON(json) {
      return TweetCardToJSONTyped(json, false);
    }
    exports2.TweetCardToJSON = TweetCardToJSON;
    function TweetCardToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "legacy": (0, TweetCardLegacy_1.TweetCardLegacyToJSON)(value["legacy"]),
        "rest_id": value["restId"]
      };
    }
    exports2.TweetCardToJSONTyped = TweetCardToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UnifiedCard.js
var require_UnifiedCard = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UnifiedCard.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UnifiedCardToJSONTyped = exports2.UnifiedCardToJSON = exports2.UnifiedCardFromJSONTyped = exports2.UnifiedCardFromJSON = exports2.instanceOfUnifiedCard = exports2.UnifiedCardCardFetchStateEnum = void 0;
    exports2.UnifiedCardCardFetchStateEnum = {
      NoCard: "NoCard"
    };
    function instanceOfUnifiedCard(value) {
      if (!("cardFetchState" in value) || value["cardFetchState"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUnifiedCard = instanceOfUnifiedCard;
    function UnifiedCardFromJSON(json) {
      return UnifiedCardFromJSONTyped(json, false);
    }
    exports2.UnifiedCardFromJSON = UnifiedCardFromJSON;
    function UnifiedCardFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "cardFetchState": json["card_fetch_state"]
      };
    }
    exports2.UnifiedCardFromJSONTyped = UnifiedCardFromJSONTyped;
    function UnifiedCardToJSON(json) {
      return UnifiedCardToJSONTyped(json, false);
    }
    exports2.UnifiedCardToJSON = UnifiedCardToJSON;
    function UnifiedCardToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "card_fetch_state": value["cardFetchState"]
      };
    }
    exports2.UnifiedCardToJSONTyped = UnifiedCardToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/QuotedRefResult.js
var require_QuotedRefResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/QuotedRefResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.QuotedRefResultToJSONTyped = exports2.QuotedRefResultToJSON = exports2.QuotedRefResultFromJSONTyped = exports2.QuotedRefResultFromJSON = exports2.instanceOfQuotedRefResult = void 0;
    var TweetUnion_1 = require_TweetUnion();
    function instanceOfQuotedRefResult(value) {
      return true;
    }
    exports2.instanceOfQuotedRefResult = instanceOfQuotedRefResult;
    function QuotedRefResultFromJSON(json) {
      return QuotedRefResultFromJSONTyped(json, false);
    }
    exports2.QuotedRefResultFromJSON = QuotedRefResultFromJSON;
    function QuotedRefResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": json["result"] == null ? void 0 : (0, TweetUnion_1.TweetUnionFromJSON)(json["result"])
      };
    }
    exports2.QuotedRefResultFromJSONTyped = QuotedRefResultFromJSONTyped;
    function QuotedRefResultToJSON(json) {
      return QuotedRefResultToJSONTyped(json, false);
    }
    exports2.QuotedRefResultToJSON = QuotedRefResultToJSON;
    function QuotedRefResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, TweetUnion_1.TweetUnionToJSON)(value["result"])
      };
    }
    exports2.QuotedRefResultToJSONTyped = QuotedRefResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaStats.js
var require_MediaStats = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaStats.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaStatsToJSONTyped = exports2.MediaStatsToJSON = exports2.MediaStatsFromJSONTyped = exports2.MediaStatsFromJSON = exports2.instanceOfMediaStats = void 0;
    function instanceOfMediaStats(value) {
      if (!("viewCount" in value) || value["viewCount"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaStats = instanceOfMediaStats;
    function MediaStatsFromJSON(json) {
      return MediaStatsFromJSONTyped(json, false);
    }
    exports2.MediaStatsFromJSON = MediaStatsFromJSON;
    function MediaStatsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "viewCount": json["viewCount"]
      };
    }
    exports2.MediaStatsFromJSONTyped = MediaStatsFromJSONTyped;
    function MediaStatsToJSON(json) {
      return MediaStatsToJSONTyped(json, false);
    }
    exports2.MediaStatsToJSON = MediaStatsToJSON;
    function MediaStatsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "viewCount": value["viewCount"]
      };
    }
    exports2.MediaStatsToJSONTyped = MediaStatsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaExtended.js
var require_MediaExtended = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaExtended.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaExtendedToJSONTyped = exports2.MediaExtendedToJSON = exports2.MediaExtendedFromJSONTyped = exports2.MediaExtendedFromJSON = exports2.instanceOfMediaExtended = exports2.MediaExtendedTypeEnum = void 0;
    var AdditionalMediaInfo_1 = require_AdditionalMediaInfo();
    var AllowDownloadStatus_1 = require_AllowDownloadStatus();
    var MediaResults_1 = require_MediaResults();
    var MediaStats_1 = require_MediaStats();
    var SensitiveMediaWarning_1 = require_SensitiveMediaWarning();
    var ExtMediaAvailability_1 = require_ExtMediaAvailability();
    var MediaVideoInfo_1 = require_MediaVideoInfo();
    var MediaSizes_1 = require_MediaSizes();
    var MediaOriginalInfo_1 = require_MediaOriginalInfo();
    exports2.MediaExtendedTypeEnum = {
      Photo: "photo",
      Video: "video",
      AnimatedGif: "animated_gif"
    };
    function instanceOfMediaExtended(value) {
      if (!("displayUrl" in value) || value["displayUrl"] === void 0)
        return false;
      if (!("expandedUrl" in value) || value["expandedUrl"] === void 0)
        return false;
      if (!("idStr" in value) || value["idStr"] === void 0)
        return false;
      if (!("indices" in value) || value["indices"] === void 0)
        return false;
      if (!("mediaKey" in value) || value["mediaKey"] === void 0)
        return false;
      if (!("mediaUrlHttps" in value) || value["mediaUrlHttps"] === void 0)
        return false;
      if (!("originalInfo" in value) || value["originalInfo"] === void 0)
        return false;
      if (!("sizes" in value) || value["sizes"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaExtended = instanceOfMediaExtended;
    function MediaExtendedFromJSON(json) {
      return MediaExtendedFromJSONTyped(json, false);
    }
    exports2.MediaExtendedFromJSON = MediaExtendedFromJSON;
    function MediaExtendedFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "additionalMediaInfo": json["additional_media_info"] == null ? void 0 : (0, AdditionalMediaInfo_1.AdditionalMediaInfoFromJSON)(json["additional_media_info"]),
        "allowDownloadStatus": json["allow_download_status"] == null ? void 0 : (0, AllowDownloadStatus_1.AllowDownloadStatusFromJSON)(json["allow_download_status"]),
        "displayUrl": json["display_url"],
        "expandedUrl": json["expanded_url"],
        "extAltText": json["ext_alt_text"] == null ? void 0 : json["ext_alt_text"],
        "extMediaAvailability": json["ext_media_availability"] == null ? void 0 : (0, ExtMediaAvailability_1.ExtMediaAvailabilityFromJSON)(json["ext_media_availability"]),
        "features": json["features"] == null ? void 0 : json["features"],
        "idStr": json["id_str"],
        "indices": json["indices"],
        "mediaStats": json["mediaStats"] == null ? void 0 : (0, MediaStats_1.MediaStatsFromJSON)(json["mediaStats"]),
        "mediaKey": json["media_key"],
        "mediaResults": json["media_results"] == null ? void 0 : (0, MediaResults_1.MediaResultsFromJSON)(json["media_results"]),
        "mediaUrlHttps": json["media_url_https"],
        "originalInfo": (0, MediaOriginalInfo_1.MediaOriginalInfoFromJSON)(json["original_info"]),
        "sensitiveMediaWarning": json["sensitive_media_warning"] == null ? void 0 : (0, SensitiveMediaWarning_1.SensitiveMediaWarningFromJSON)(json["sensitive_media_warning"]),
        "sizes": (0, MediaSizes_1.MediaSizesFromJSON)(json["sizes"]),
        "sourceStatusIdStr": json["source_status_id_str"] == null ? void 0 : json["source_status_id_str"],
        "sourceUserIdStr": json["source_user_id_str"] == null ? void 0 : json["source_user_id_str"],
        "type": json["type"],
        "url": json["url"],
        "videoInfo": json["video_info"] == null ? void 0 : (0, MediaVideoInfo_1.MediaVideoInfoFromJSON)(json["video_info"])
      };
    }
    exports2.MediaExtendedFromJSONTyped = MediaExtendedFromJSONTyped;
    function MediaExtendedToJSON(json) {
      return MediaExtendedToJSONTyped(json, false);
    }
    exports2.MediaExtendedToJSON = MediaExtendedToJSON;
    function MediaExtendedToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "additional_media_info": (0, AdditionalMediaInfo_1.AdditionalMediaInfoToJSON)(value["additionalMediaInfo"]),
        "allow_download_status": (0, AllowDownloadStatus_1.AllowDownloadStatusToJSON)(value["allowDownloadStatus"]),
        "display_url": value["displayUrl"],
        "expanded_url": value["expandedUrl"],
        "ext_alt_text": value["extAltText"],
        "ext_media_availability": (0, ExtMediaAvailability_1.ExtMediaAvailabilityToJSON)(value["extMediaAvailability"]),
        "features": value["features"],
        "id_str": value["idStr"],
        "indices": value["indices"],
        "mediaStats": (0, MediaStats_1.MediaStatsToJSON)(value["mediaStats"]),
        "media_key": value["mediaKey"],
        "media_results": (0, MediaResults_1.MediaResultsToJSON)(value["mediaResults"]),
        "media_url_https": value["mediaUrlHttps"],
        "original_info": (0, MediaOriginalInfo_1.MediaOriginalInfoToJSON)(value["originalInfo"]),
        "sensitive_media_warning": (0, SensitiveMediaWarning_1.SensitiveMediaWarningToJSON)(value["sensitiveMediaWarning"]),
        "sizes": (0, MediaSizes_1.MediaSizesToJSON)(value["sizes"]),
        "source_status_id_str": value["sourceStatusIdStr"],
        "source_user_id_str": value["sourceUserIdStr"],
        "type": value["type"],
        "url": value["url"],
        "video_info": (0, MediaVideoInfo_1.MediaVideoInfoToJSON)(value["videoInfo"])
      };
    }
    exports2.MediaExtendedToJSONTyped = MediaExtendedToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ExtendedEntities.js
var require_ExtendedEntities = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ExtendedEntities.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ExtendedEntitiesToJSONTyped = exports2.ExtendedEntitiesToJSON = exports2.ExtendedEntitiesFromJSONTyped = exports2.ExtendedEntitiesFromJSON = exports2.instanceOfExtendedEntities = void 0;
    var MediaExtended_1 = require_MediaExtended();
    function instanceOfExtendedEntities(value) {
      if (!("media" in value) || value["media"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfExtendedEntities = instanceOfExtendedEntities;
    function ExtendedEntitiesFromJSON(json) {
      return ExtendedEntitiesFromJSONTyped(json, false);
    }
    exports2.ExtendedEntitiesFromJSON = ExtendedEntitiesFromJSON;
    function ExtendedEntitiesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "media": json["media"].map(MediaExtended_1.MediaExtendedFromJSON)
      };
    }
    exports2.ExtendedEntitiesFromJSONTyped = ExtendedEntitiesFromJSONTyped;
    function ExtendedEntitiesToJSON(json) {
      return ExtendedEntitiesToJSONTyped(json, false);
    }
    exports2.ExtendedEntitiesToJSON = ExtendedEntitiesToJSON;
    function ExtendedEntitiesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "media": value["media"].map(MediaExtended_1.MediaExtendedToJSON)
      };
    }
    exports2.ExtendedEntitiesToJSONTyped = ExtendedEntitiesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetLegacyScopes.js
var require_TweetLegacyScopes = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetLegacyScopes.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetLegacyScopesToJSONTyped = exports2.TweetLegacyScopesToJSON = exports2.TweetLegacyScopesFromJSONTyped = exports2.TweetLegacyScopesFromJSON = exports2.instanceOfTweetLegacyScopes = void 0;
    function instanceOfTweetLegacyScopes(value) {
      if (!("followers" in value) || value["followers"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetLegacyScopes = instanceOfTweetLegacyScopes;
    function TweetLegacyScopesFromJSON(json) {
      return TweetLegacyScopesFromJSONTyped(json, false);
    }
    exports2.TweetLegacyScopesFromJSON = TweetLegacyScopesFromJSON;
    function TweetLegacyScopesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "followers": json["followers"]
      };
    }
    exports2.TweetLegacyScopesFromJSONTyped = TweetLegacyScopesFromJSONTyped;
    function TweetLegacyScopesToJSON(json) {
      return TweetLegacyScopesToJSONTyped(json, false);
    }
    exports2.TweetLegacyScopesToJSON = TweetLegacyScopesToJSON;
    function TweetLegacyScopesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "followers": value["followers"]
      };
    }
    exports2.TweetLegacyScopesToJSONTyped = TweetLegacyScopesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SelfThread.js
var require_SelfThread = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SelfThread.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SelfThreadToJSONTyped = exports2.SelfThreadToJSON = exports2.SelfThreadFromJSONTyped = exports2.SelfThreadFromJSON = exports2.instanceOfSelfThread = void 0;
    function instanceOfSelfThread(value) {
      if (!("idStr" in value) || value["idStr"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfSelfThread = instanceOfSelfThread;
    function SelfThreadFromJSON(json) {
      return SelfThreadFromJSONTyped(json, false);
    }
    exports2.SelfThreadFromJSON = SelfThreadFromJSON;
    function SelfThreadFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "idStr": json["id_str"]
      };
    }
    exports2.SelfThreadFromJSONTyped = SelfThreadFromJSONTyped;
    function SelfThreadToJSON(json) {
      return SelfThreadToJSONTyped(json, false);
    }
    exports2.SelfThreadToJSON = SelfThreadToJSON;
    function SelfThreadToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "id_str": value["idStr"]
      };
    }
    exports2.SelfThreadToJSONTyped = SelfThreadToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/QuotedStatusPermalink.js
var require_QuotedStatusPermalink = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/QuotedStatusPermalink.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.QuotedStatusPermalinkToJSONTyped = exports2.QuotedStatusPermalinkToJSON = exports2.QuotedStatusPermalinkFromJSONTyped = exports2.QuotedStatusPermalinkFromJSON = exports2.instanceOfQuotedStatusPermalink = void 0;
    function instanceOfQuotedStatusPermalink(value) {
      if (!("display" in value) || value["display"] === void 0)
        return false;
      if (!("expanded" in value) || value["expanded"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfQuotedStatusPermalink = instanceOfQuotedStatusPermalink;
    function QuotedStatusPermalinkFromJSON(json) {
      return QuotedStatusPermalinkFromJSONTyped(json, false);
    }
    exports2.QuotedStatusPermalinkFromJSON = QuotedStatusPermalinkFromJSON;
    function QuotedStatusPermalinkFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "display": json["display"],
        "expanded": json["expanded"],
        "url": json["url"]
      };
    }
    exports2.QuotedStatusPermalinkFromJSONTyped = QuotedStatusPermalinkFromJSONTyped;
    function QuotedStatusPermalinkToJSON(json) {
      return QuotedStatusPermalinkToJSONTyped(json, false);
    }
    exports2.QuotedStatusPermalinkToJSON = QuotedStatusPermalinkToJSON;
    function QuotedStatusPermalinkToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "display": value["display"],
        "expanded": value["expanded"],
        "url": value["url"]
      };
    }
    exports2.QuotedStatusPermalinkToJSONTyped = QuotedStatusPermalinkToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetLegacy.js
var require_TweetLegacy = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetLegacy.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetLegacyToJSONTyped = exports2.TweetLegacyToJSON = exports2.TweetLegacyFromJSONTyped = exports2.TweetLegacyFromJSON = exports2.instanceOfTweetLegacy = exports2.TweetLegacyLimitedActionsEnum = void 0;
    var ExtendedEntities_1 = require_ExtendedEntities();
    var ItemResult_1 = require_ItemResult();
    var TweetLegacyScopes_1 = require_TweetLegacyScopes();
    var SelfThread_1 = require_SelfThread();
    var QuotedStatusPermalink_1 = require_QuotedStatusPermalink();
    var Entities_1 = require_Entities();
    exports2.TweetLegacyLimitedActionsEnum = {
      LimitedReplies: "limited_replies",
      NonCompliant: "non_compliant",
      DynamicProductAd: "dynamic_product_ad",
      StaleTweet: "stale_tweet",
      CommunityTweetNonMemberPublicCommunity: "community_tweet_non_member_public_community",
      CommunityTweetNonMemberClosedCommunity: "community_tweet_non_member_closed_community",
      BlockedViewer: "blocked_viewer"
    };
    function instanceOfTweetLegacy(value) {
      if (!("bookmarkCount" in value) || value["bookmarkCount"] === void 0)
        return false;
      if (!("bookmarked" in value) || value["bookmarked"] === void 0)
        return false;
      if (!("conversationIdStr" in value) || value["conversationIdStr"] === void 0)
        return false;
      if (!("createdAt" in value) || value["createdAt"] === void 0)
        return false;
      if (!("displayTextRange" in value) || value["displayTextRange"] === void 0)
        return false;
      if (!("entities" in value) || value["entities"] === void 0)
        return false;
      if (!("favoriteCount" in value) || value["favoriteCount"] === void 0)
        return false;
      if (!("favorited" in value) || value["favorited"] === void 0)
        return false;
      if (!("fullText" in value) || value["fullText"] === void 0)
        return false;
      if (!("idStr" in value) || value["idStr"] === void 0)
        return false;
      if (!("isQuoteStatus" in value) || value["isQuoteStatus"] === void 0)
        return false;
      if (!("lang" in value) || value["lang"] === void 0)
        return false;
      if (!("quoteCount" in value) || value["quoteCount"] === void 0)
        return false;
      if (!("replyCount" in value) || value["replyCount"] === void 0)
        return false;
      if (!("retweetCount" in value) || value["retweetCount"] === void 0)
        return false;
      if (!("retweeted" in value) || value["retweeted"] === void 0)
        return false;
      if (!("userIdStr" in value) || value["userIdStr"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetLegacy = instanceOfTweetLegacy;
    function TweetLegacyFromJSON(json) {
      return TweetLegacyFromJSONTyped(json, false);
    }
    exports2.TweetLegacyFromJSON = TweetLegacyFromJSON;
    function TweetLegacyFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "bookmarkCount": json["bookmark_count"],
        "bookmarked": json["bookmarked"],
        "conversationControl": json["conversation_control"] == null ? void 0 : json["conversation_control"],
        "conversationIdStr": json["conversation_id_str"],
        "createdAt": json["created_at"],
        "displayTextRange": json["display_text_range"],
        "entities": (0, Entities_1.EntitiesFromJSON)(json["entities"]),
        "extendedEntities": json["extended_entities"] == null ? void 0 : (0, ExtendedEntities_1.ExtendedEntitiesFromJSON)(json["extended_entities"]),
        "favoriteCount": json["favorite_count"],
        "favorited": json["favorited"],
        "fullText": json["full_text"],
        "idStr": json["id_str"],
        "inReplyToScreenName": json["in_reply_to_screen_name"] == null ? void 0 : json["in_reply_to_screen_name"],
        "inReplyToStatusIdStr": json["in_reply_to_status_id_str"] == null ? void 0 : json["in_reply_to_status_id_str"],
        "inReplyToUserIdStr": json["in_reply_to_user_id_str"] == null ? void 0 : json["in_reply_to_user_id_str"],
        "isQuoteStatus": json["is_quote_status"],
        "lang": json["lang"],
        "limitedActions": json["limited_actions"] == null ? void 0 : json["limited_actions"],
        "place": json["place"] == null ? void 0 : json["place"],
        "possiblySensitive": json["possibly_sensitive"] == null ? void 0 : json["possibly_sensitive"],
        "possiblySensitiveEditable": json["possibly_sensitive_editable"] == null ? void 0 : json["possibly_sensitive_editable"],
        "quoteCount": json["quote_count"],
        "quotedStatusIdStr": json["quoted_status_id_str"] == null ? void 0 : json["quoted_status_id_str"],
        "quotedStatusPermalink": json["quoted_status_permalink"] == null ? void 0 : (0, QuotedStatusPermalink_1.QuotedStatusPermalinkFromJSON)(json["quoted_status_permalink"]),
        "replyCount": json["reply_count"],
        "retweetCount": json["retweet_count"],
        "retweeted": json["retweeted"],
        "retweetedStatusResult": json["retweeted_status_result"] == null ? void 0 : (0, ItemResult_1.ItemResultFromJSON)(json["retweeted_status_result"]),
        "scopes": json["scopes"] == null ? void 0 : (0, TweetLegacyScopes_1.TweetLegacyScopesFromJSON)(json["scopes"]),
        "selfThread": json["self_thread"] == null ? void 0 : (0, SelfThread_1.SelfThreadFromJSON)(json["self_thread"]),
        "userIdStr": json["user_id_str"]
      };
    }
    exports2.TweetLegacyFromJSONTyped = TweetLegacyFromJSONTyped;
    function TweetLegacyToJSON(json) {
      return TweetLegacyToJSONTyped(json, false);
    }
    exports2.TweetLegacyToJSON = TweetLegacyToJSON;
    function TweetLegacyToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "bookmark_count": value["bookmarkCount"],
        "bookmarked": value["bookmarked"],
        "conversation_control": value["conversationControl"],
        "conversation_id_str": value["conversationIdStr"],
        "created_at": value["createdAt"],
        "display_text_range": value["displayTextRange"],
        "entities": (0, Entities_1.EntitiesToJSON)(value["entities"]),
        "extended_entities": (0, ExtendedEntities_1.ExtendedEntitiesToJSON)(value["extendedEntities"]),
        "favorite_count": value["favoriteCount"],
        "favorited": value["favorited"],
        "full_text": value["fullText"],
        "id_str": value["idStr"],
        "in_reply_to_screen_name": value["inReplyToScreenName"],
        "in_reply_to_status_id_str": value["inReplyToStatusIdStr"],
        "in_reply_to_user_id_str": value["inReplyToUserIdStr"],
        "is_quote_status": value["isQuoteStatus"],
        "lang": value["lang"],
        "limited_actions": value["limitedActions"],
        "place": value["place"],
        "possibly_sensitive": value["possiblySensitive"],
        "possibly_sensitive_editable": value["possiblySensitiveEditable"],
        "quote_count": value["quoteCount"],
        "quoted_status_id_str": value["quotedStatusIdStr"],
        "quoted_status_permalink": (0, QuotedStatusPermalink_1.QuotedStatusPermalinkToJSON)(value["quotedStatusPermalink"]),
        "reply_count": value["replyCount"],
        "retweet_count": value["retweetCount"],
        "retweeted": value["retweeted"],
        "retweeted_status_result": (0, ItemResult_1.ItemResultToJSON)(value["retweetedStatusResult"]),
        "scopes": (0, TweetLegacyScopes_1.TweetLegacyScopesToJSON)(value["scopes"]),
        "self_thread": (0, SelfThread_1.SelfThreadToJSON)(value["selfThread"]),
        "user_id_str": value["userIdStr"]
      };
    }
    exports2.TweetLegacyToJSONTyped = TweetLegacyToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Tweet.js
var require_Tweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Tweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetToJSONTyped = exports2.TweetToJSON = exports2.TweetFromJSONTyped = exports2.TweetFromJSON = exports2.instanceOfTweet = void 0;
    var NoteTweet_1 = require_NoteTweet();
    var TypeName_1 = require_TypeName();
    var SuperFollowsReplyUserResult_1 = require_SuperFollowsReplyUserResult();
    var UserResultCore_1 = require_UserResultCore();
    var Article_1 = require_Article();
    var TweetEditControl_1 = require_TweetEditControl();
    var CommunityRelationship_1 = require_CommunityRelationship();
    var TweetEditPrespective_1 = require_TweetEditPrespective();
    var TweetPreviousCounts_1 = require_TweetPreviousCounts();
    var TweetView_1 = require_TweetView();
    var TweetCard_1 = require_TweetCard();
    var AuthorCommunityRelationship_1 = require_AuthorCommunityRelationship();
    var UnifiedCard_1 = require_UnifiedCard();
    var ItemResult_1 = require_ItemResult();
    var QuotedRefResult_1 = require_QuotedRefResult();
    var BirdwatchPivot_1 = require_BirdwatchPivot();
    var TweetLegacy_1 = require_TweetLegacy();
    var Community_1 = require_Community();
    function instanceOfTweet(value) {
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweet = instanceOfTweet;
    function TweetFromJSON(json) {
      return TweetFromJSONTyped(json, false);
    }
    exports2.TweetFromJSON = TweetFromJSON;
    function TweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": json["__typename"] == null ? void 0 : (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "article": json["article"] == null ? void 0 : (0, Article_1.ArticleFromJSON)(json["article"]),
        "authorCommunityRelationship": json["author_community_relationship"] == null ? void 0 : (0, AuthorCommunityRelationship_1.AuthorCommunityRelationshipFromJSON)(json["author_community_relationship"]),
        "birdwatchPivot": json["birdwatch_pivot"] == null ? void 0 : (0, BirdwatchPivot_1.BirdwatchPivotFromJSON)(json["birdwatch_pivot"]),
        "card": json["card"] == null ? void 0 : (0, TweetCard_1.TweetCardFromJSON)(json["card"]),
        "communityRelationship": json["community_relationship"] == null ? void 0 : (0, CommunityRelationship_1.CommunityRelationshipFromJSON)(json["community_relationship"]),
        "communityResults": json["community_results"] == null ? void 0 : (0, Community_1.CommunityFromJSON)(json["community_results"]),
        "core": json["core"] == null ? void 0 : (0, UserResultCore_1.UserResultCoreFromJSON)(json["core"]),
        "editControl": json["edit_control"] == null ? void 0 : (0, TweetEditControl_1.TweetEditControlFromJSON)(json["edit_control"]),
        "editPrespective": json["edit_prespective"] == null ? void 0 : (0, TweetEditPrespective_1.TweetEditPrespectiveFromJSON)(json["edit_prespective"]),
        "hasBirdwatchNotes": json["has_birdwatch_notes"] == null ? void 0 : json["has_birdwatch_notes"],
        "isTranslatable": json["is_translatable"] == null ? void 0 : json["is_translatable"],
        "legacy": json["legacy"] == null ? void 0 : (0, TweetLegacy_1.TweetLegacyFromJSON)(json["legacy"]),
        "noteTweet": json["note_tweet"] == null ? void 0 : (0, NoteTweet_1.NoteTweetFromJSON)(json["note_tweet"]),
        "previousCounts": json["previous_counts"] == null ? void 0 : (0, TweetPreviousCounts_1.TweetPreviousCountsFromJSON)(json["previous_counts"]),
        "quickPromoteEligibility": json["quick_promote_eligibility"] == null ? void 0 : json["quick_promote_eligibility"],
        "quotedRefResult": json["quotedRefResult"] == null ? void 0 : (0, QuotedRefResult_1.QuotedRefResultFromJSON)(json["quotedRefResult"]),
        "quotedStatusResult": json["quoted_status_result"] == null ? void 0 : (0, ItemResult_1.ItemResultFromJSON)(json["quoted_status_result"]),
        "restId": json["rest_id"],
        "source": json["source"] == null ? void 0 : json["source"],
        "superFollowsReplyUserResult": json["superFollowsReplyUserResult"] == null ? void 0 : (0, SuperFollowsReplyUserResult_1.SuperFollowsReplyUserResultFromJSON)(json["superFollowsReplyUserResult"]),
        "unifiedCard": json["unified_card"] == null ? void 0 : (0, UnifiedCard_1.UnifiedCardFromJSON)(json["unified_card"]),
        "unmentionData": json["unmention_data"] == null ? void 0 : json["unmention_data"],
        "views": json["views"] == null ? void 0 : (0, TweetView_1.TweetViewFromJSON)(json["views"])
      };
    }
    exports2.TweetFromJSONTyped = TweetFromJSONTyped;
    function TweetToJSON(json) {
      return TweetToJSONTyped(json, false);
    }
    exports2.TweetToJSON = TweetToJSON;
    function TweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "article": (0, Article_1.ArticleToJSON)(value["article"]),
        "author_community_relationship": (0, AuthorCommunityRelationship_1.AuthorCommunityRelationshipToJSON)(value["authorCommunityRelationship"]),
        "birdwatch_pivot": (0, BirdwatchPivot_1.BirdwatchPivotToJSON)(value["birdwatchPivot"]),
        "card": (0, TweetCard_1.TweetCardToJSON)(value["card"]),
        "community_relationship": (0, CommunityRelationship_1.CommunityRelationshipToJSON)(value["communityRelationship"]),
        "community_results": (0, Community_1.CommunityToJSON)(value["communityResults"]),
        "core": (0, UserResultCore_1.UserResultCoreToJSON)(value["core"]),
        "edit_control": (0, TweetEditControl_1.TweetEditControlToJSON)(value["editControl"]),
        "edit_prespective": (0, TweetEditPrespective_1.TweetEditPrespectiveToJSON)(value["editPrespective"]),
        "has_birdwatch_notes": value["hasBirdwatchNotes"],
        "is_translatable": value["isTranslatable"],
        "legacy": (0, TweetLegacy_1.TweetLegacyToJSON)(value["legacy"]),
        "note_tweet": (0, NoteTweet_1.NoteTweetToJSON)(value["noteTweet"]),
        "previous_counts": (0, TweetPreviousCounts_1.TweetPreviousCountsToJSON)(value["previousCounts"]),
        "quick_promote_eligibility": value["quickPromoteEligibility"],
        "quotedRefResult": (0, QuotedRefResult_1.QuotedRefResultToJSON)(value["quotedRefResult"]),
        "quoted_status_result": (0, ItemResult_1.ItemResultToJSON)(value["quotedStatusResult"]),
        "rest_id": value["restId"],
        "source": value["source"],
        "superFollowsReplyUserResult": (0, SuperFollowsReplyUserResult_1.SuperFollowsReplyUserResultToJSON)(value["superFollowsReplyUserResult"]),
        "unified_card": (0, UnifiedCard_1.UnifiedCardToJSON)(value["unifiedCard"]),
        "unmention_data": value["unmentionData"],
        "views": (0, TweetView_1.TweetViewToJSON)(value["views"])
      };
    }
    exports2.TweetToJSONTyped = TweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetTombstone.js
var require_TweetTombstone = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetTombstone.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetTombstoneToJSONTyped = exports2.TweetTombstoneToJSON = exports2.TweetTombstoneFromJSONTyped = exports2.TweetTombstoneFromJSON = exports2.instanceOfTweetTombstone = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfTweetTombstone(value) {
      return true;
    }
    exports2.instanceOfTweetTombstone = instanceOfTweetTombstone;
    function TweetTombstoneFromJSON(json) {
      return TweetTombstoneFromJSONTyped(json, false);
    }
    exports2.TweetTombstoneFromJSON = TweetTombstoneFromJSON;
    function TweetTombstoneFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return __assign(__assign({}, json), { "typename": json["__typename"] == null ? void 0 : (0, TypeName_1.TypeNameFromJSON)(json["__typename"]) });
    }
    exports2.TweetTombstoneFromJSONTyped = TweetTombstoneFromJSONTyped;
    function TweetTombstoneToJSON(json) {
      return TweetTombstoneToJSONTyped(json, false);
    }
    exports2.TweetTombstoneToJSON = TweetTombstoneToJSON;
    function TweetTombstoneToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return __assign(__assign({}, value), { "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]) });
    }
    exports2.TweetTombstoneToJSONTyped = TweetTombstoneToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetUnavailable.js
var require_TweetUnavailable = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetUnavailable.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetUnavailableToJSONTyped = exports2.TweetUnavailableToJSON = exports2.TweetUnavailableFromJSONTyped = exports2.TweetUnavailableFromJSON = exports2.instanceOfTweetUnavailable = void 0;
    var TypeName_1 = require_TypeName();
    function instanceOfTweetUnavailable(value) {
      return true;
    }
    exports2.instanceOfTweetUnavailable = instanceOfTweetUnavailable;
    function TweetUnavailableFromJSON(json) {
      return TweetUnavailableFromJSONTyped(json, false);
    }
    exports2.TweetUnavailableFromJSON = TweetUnavailableFromJSON;
    function TweetUnavailableFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": json["__typename"] == null ? void 0 : (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "reason": json["reason"] == null ? void 0 : json["reason"]
      };
    }
    exports2.TweetUnavailableFromJSONTyped = TweetUnavailableFromJSONTyped;
    function TweetUnavailableToJSON(json) {
      return TweetUnavailableToJSONTyped(json, false);
    }
    exports2.TweetUnavailableToJSON = TweetUnavailableToJSON;
    function TweetUnavailableToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "reason": value["reason"]
      };
    }
    exports2.TweetUnavailableToJSONTyped = TweetUnavailableToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitialTextEntityRef.js
var require_TweetInterstitialTextEntityRef = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitialTextEntityRef.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetInterstitialTextEntityRefToJSONTyped = exports2.TweetInterstitialTextEntityRefToJSON = exports2.TweetInterstitialTextEntityRefFromJSONTyped = exports2.TweetInterstitialTextEntityRefFromJSON = exports2.instanceOfTweetInterstitialTextEntityRef = exports2.TweetInterstitialTextEntityRefUrlTypeEnum = exports2.TweetInterstitialTextEntityRefTypeEnum = void 0;
    exports2.TweetInterstitialTextEntityRefTypeEnum = {
      TimelineUrl: "TimelineUrl"
    };
    exports2.TweetInterstitialTextEntityRefUrlTypeEnum = {
      ExternalUrl: "ExternalUrl"
    };
    function instanceOfTweetInterstitialTextEntityRef(value) {
      if (!("type" in value) || value["type"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      if (!("urlType" in value) || value["urlType"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetInterstitialTextEntityRef = instanceOfTweetInterstitialTextEntityRef;
    function TweetInterstitialTextEntityRefFromJSON(json) {
      return TweetInterstitialTextEntityRefFromJSONTyped(json, false);
    }
    exports2.TweetInterstitialTextEntityRefFromJSON = TweetInterstitialTextEntityRefFromJSON;
    function TweetInterstitialTextEntityRefFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "type": json["type"],
        "url": json["url"],
        "urlType": json["urlType"]
      };
    }
    exports2.TweetInterstitialTextEntityRefFromJSONTyped = TweetInterstitialTextEntityRefFromJSONTyped;
    function TweetInterstitialTextEntityRefToJSON(json) {
      return TweetInterstitialTextEntityRefToJSONTyped(json, false);
    }
    exports2.TweetInterstitialTextEntityRefToJSON = TweetInterstitialTextEntityRefToJSON;
    function TweetInterstitialTextEntityRefToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "type": value["type"],
        "url": value["url"],
        "urlType": value["urlType"]
      };
    }
    exports2.TweetInterstitialTextEntityRefToJSONTyped = TweetInterstitialTextEntityRefToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitialTextEntity.js
var require_TweetInterstitialTextEntity = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitialTextEntity.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetInterstitialTextEntityToJSONTyped = exports2.TweetInterstitialTextEntityToJSON = exports2.TweetInterstitialTextEntityFromJSONTyped = exports2.TweetInterstitialTextEntityFromJSON = exports2.instanceOfTweetInterstitialTextEntity = void 0;
    var TweetInterstitialTextEntityRef_1 = require_TweetInterstitialTextEntityRef();
    function instanceOfTweetInterstitialTextEntity(value) {
      if (!("fromIndex" in value) || value["fromIndex"] === void 0)
        return false;
      if (!("ref" in value) || value["ref"] === void 0)
        return false;
      if (!("toIndex" in value) || value["toIndex"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetInterstitialTextEntity = instanceOfTweetInterstitialTextEntity;
    function TweetInterstitialTextEntityFromJSON(json) {
      return TweetInterstitialTextEntityFromJSONTyped(json, false);
    }
    exports2.TweetInterstitialTextEntityFromJSON = TweetInterstitialTextEntityFromJSON;
    function TweetInterstitialTextEntityFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "fromIndex": json["fromIndex"],
        "ref": (0, TweetInterstitialTextEntityRef_1.TweetInterstitialTextEntityRefFromJSON)(json["ref"]),
        "toIndex": json["toIndex"]
      };
    }
    exports2.TweetInterstitialTextEntityFromJSONTyped = TweetInterstitialTextEntityFromJSONTyped;
    function TweetInterstitialTextEntityToJSON(json) {
      return TweetInterstitialTextEntityToJSONTyped(json, false);
    }
    exports2.TweetInterstitialTextEntityToJSON = TweetInterstitialTextEntityToJSON;
    function TweetInterstitialTextEntityToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "fromIndex": value["fromIndex"],
        "ref": (0, TweetInterstitialTextEntityRef_1.TweetInterstitialTextEntityRefToJSON)(value["ref"]),
        "toIndex": value["toIndex"]
      };
    }
    exports2.TweetInterstitialTextEntityToJSONTyped = TweetInterstitialTextEntityToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitialText.js
var require_TweetInterstitialText = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitialText.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetInterstitialTextToJSONTyped = exports2.TweetInterstitialTextToJSON = exports2.TweetInterstitialTextFromJSONTyped = exports2.TweetInterstitialTextFromJSON = exports2.instanceOfTweetInterstitialText = void 0;
    var TweetInterstitialTextEntity_1 = require_TweetInterstitialTextEntity();
    function instanceOfTweetInterstitialText(value) {
      if (!("entities" in value) || value["entities"] === void 0)
        return false;
      if (!("rtl" in value) || value["rtl"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetInterstitialText = instanceOfTweetInterstitialText;
    function TweetInterstitialTextFromJSON(json) {
      return TweetInterstitialTextFromJSONTyped(json, false);
    }
    exports2.TweetInterstitialTextFromJSON = TweetInterstitialTextFromJSON;
    function TweetInterstitialTextFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entities": json["entities"].map(TweetInterstitialTextEntity_1.TweetInterstitialTextEntityFromJSON),
        "rtl": json["rtl"],
        "text": json["text"]
      };
    }
    exports2.TweetInterstitialTextFromJSONTyped = TweetInterstitialTextFromJSONTyped;
    function TweetInterstitialTextToJSON(json) {
      return TweetInterstitialTextToJSONTyped(json, false);
    }
    exports2.TweetInterstitialTextToJSON = TweetInterstitialTextToJSON;
    function TweetInterstitialTextToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entities": value["entities"].map(TweetInterstitialTextEntity_1.TweetInterstitialTextEntityToJSON),
        "rtl": value["rtl"],
        "text": value["text"]
      };
    }
    exports2.TweetInterstitialTextToJSONTyped = TweetInterstitialTextToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaVisibilityResultsBlurredImageInterstitial.js
var require_MediaVisibilityResultsBlurredImageInterstitial = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaVisibilityResultsBlurredImageInterstitial.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaVisibilityResultsBlurredImageInterstitialToJSONTyped = exports2.MediaVisibilityResultsBlurredImageInterstitialToJSON = exports2.MediaVisibilityResultsBlurredImageInterstitialFromJSONTyped = exports2.MediaVisibilityResultsBlurredImageInterstitialFromJSON = exports2.instanceOfMediaVisibilityResultsBlurredImageInterstitial = void 0;
    var TweetInterstitialText_1 = require_TweetInterstitialText();
    function instanceOfMediaVisibilityResultsBlurredImageInterstitial(value) {
      if (!("opacity" in value) || value["opacity"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      if (!("title" in value) || value["title"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaVisibilityResultsBlurredImageInterstitial = instanceOfMediaVisibilityResultsBlurredImageInterstitial;
    function MediaVisibilityResultsBlurredImageInterstitialFromJSON(json) {
      return MediaVisibilityResultsBlurredImageInterstitialFromJSONTyped(json, false);
    }
    exports2.MediaVisibilityResultsBlurredImageInterstitialFromJSON = MediaVisibilityResultsBlurredImageInterstitialFromJSON;
    function MediaVisibilityResultsBlurredImageInterstitialFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "opacity": json["opacity"],
        "text": (0, TweetInterstitialText_1.TweetInterstitialTextFromJSON)(json["text"]),
        "title": (0, TweetInterstitialText_1.TweetInterstitialTextFromJSON)(json["title"])
      };
    }
    exports2.MediaVisibilityResultsBlurredImageInterstitialFromJSONTyped = MediaVisibilityResultsBlurredImageInterstitialFromJSONTyped;
    function MediaVisibilityResultsBlurredImageInterstitialToJSON(json) {
      return MediaVisibilityResultsBlurredImageInterstitialToJSONTyped(json, false);
    }
    exports2.MediaVisibilityResultsBlurredImageInterstitialToJSON = MediaVisibilityResultsBlurredImageInterstitialToJSON;
    function MediaVisibilityResultsBlurredImageInterstitialToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "opacity": value["opacity"],
        "text": (0, TweetInterstitialText_1.TweetInterstitialTextToJSON)(value["text"]),
        "title": (0, TweetInterstitialText_1.TweetInterstitialTextToJSON)(value["title"])
      };
    }
    exports2.MediaVisibilityResultsBlurredImageInterstitialToJSONTyped = MediaVisibilityResultsBlurredImageInterstitialToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaVisibilityResults.js
var require_MediaVisibilityResults = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/MediaVisibilityResults.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.MediaVisibilityResultsToJSONTyped = exports2.MediaVisibilityResultsToJSON = exports2.MediaVisibilityResultsFromJSONTyped = exports2.MediaVisibilityResultsFromJSON = exports2.instanceOfMediaVisibilityResults = void 0;
    var MediaVisibilityResultsBlurredImageInterstitial_1 = require_MediaVisibilityResultsBlurredImageInterstitial();
    function instanceOfMediaVisibilityResults(value) {
      if (!("blurredImageInterstitial" in value) || value["blurredImageInterstitial"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfMediaVisibilityResults = instanceOfMediaVisibilityResults;
    function MediaVisibilityResultsFromJSON(json) {
      return MediaVisibilityResultsFromJSONTyped(json, false);
    }
    exports2.MediaVisibilityResultsFromJSON = MediaVisibilityResultsFromJSON;
    function MediaVisibilityResultsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "blurredImageInterstitial": (0, MediaVisibilityResultsBlurredImageInterstitial_1.MediaVisibilityResultsBlurredImageInterstitialFromJSON)(json["blurred_image_interstitial"])
      };
    }
    exports2.MediaVisibilityResultsFromJSONTyped = MediaVisibilityResultsFromJSONTyped;
    function MediaVisibilityResultsToJSON(json) {
      return MediaVisibilityResultsToJSONTyped(json, false);
    }
    exports2.MediaVisibilityResultsToJSON = MediaVisibilityResultsToJSON;
    function MediaVisibilityResultsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "blurred_image_interstitial": (0, MediaVisibilityResultsBlurredImageInterstitial_1.MediaVisibilityResultsBlurredImageInterstitialToJSON)(value["blurredImageInterstitial"])
      };
    }
    exports2.MediaVisibilityResultsToJSONTyped = MediaVisibilityResultsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitialRevealText.js
var require_TweetInterstitialRevealText = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitialRevealText.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetInterstitialRevealTextToJSONTyped = exports2.TweetInterstitialRevealTextToJSON = exports2.TweetInterstitialRevealTextFromJSONTyped = exports2.TweetInterstitialRevealTextFromJSON = exports2.instanceOfTweetInterstitialRevealText = void 0;
    var TweetInterstitialTextEntity_1 = require_TweetInterstitialTextEntity();
    function instanceOfTweetInterstitialRevealText(value) {
      if (!("entities" in value) || value["entities"] === void 0)
        return false;
      if (!("rtl" in value) || value["rtl"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetInterstitialRevealText = instanceOfTweetInterstitialRevealText;
    function TweetInterstitialRevealTextFromJSON(json) {
      return TweetInterstitialRevealTextFromJSONTyped(json, false);
    }
    exports2.TweetInterstitialRevealTextFromJSON = TweetInterstitialRevealTextFromJSON;
    function TweetInterstitialRevealTextFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entities": json["entities"].map(TweetInterstitialTextEntity_1.TweetInterstitialTextEntityFromJSON),
        "rtl": json["rtl"],
        "text": json["text"]
      };
    }
    exports2.TweetInterstitialRevealTextFromJSONTyped = TweetInterstitialRevealTextFromJSONTyped;
    function TweetInterstitialRevealTextToJSON(json) {
      return TweetInterstitialRevealTextToJSONTyped(json, false);
    }
    exports2.TweetInterstitialRevealTextToJSON = TweetInterstitialRevealTextToJSON;
    function TweetInterstitialRevealTextToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entities": value["entities"].map(TweetInterstitialTextEntity_1.TweetInterstitialTextEntityToJSON),
        "rtl": value["rtl"],
        "text": value["text"]
      };
    }
    exports2.TweetInterstitialRevealTextToJSONTyped = TweetInterstitialRevealTextToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitial.js
var require_TweetInterstitial = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetInterstitial.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetInterstitialToJSONTyped = exports2.TweetInterstitialToJSON = exports2.TweetInterstitialFromJSONTyped = exports2.TweetInterstitialFromJSON = exports2.instanceOfTweetInterstitial = exports2.TweetInterstitialDisplayTypeEnum = void 0;
    var TypeName_1 = require_TypeName();
    var TweetInterstitialText_1 = require_TweetInterstitialText();
    var TweetInterstitialRevealText_1 = require_TweetInterstitialRevealText();
    exports2.TweetInterstitialDisplayTypeEnum = {
      NonCompliant: "NonCompliant"
    };
    function instanceOfTweetInterstitial(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("displayType" in value) || value["displayType"] === void 0)
        return false;
      if (!("revealText" in value) || value["revealText"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetInterstitial = instanceOfTweetInterstitial;
    function TweetInterstitialFromJSON(json) {
      return TweetInterstitialFromJSONTyped(json, false);
    }
    exports2.TweetInterstitialFromJSON = TweetInterstitialFromJSON;
    function TweetInterstitialFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "displayType": json["displayType"],
        "revealText": (0, TweetInterstitialRevealText_1.TweetInterstitialRevealTextFromJSON)(json["revealText"]),
        "text": (0, TweetInterstitialText_1.TweetInterstitialTextFromJSON)(json["text"])
      };
    }
    exports2.TweetInterstitialFromJSONTyped = TweetInterstitialFromJSONTyped;
    function TweetInterstitialToJSON(json) {
      return TweetInterstitialToJSONTyped(json, false);
    }
    exports2.TweetInterstitialToJSON = TweetInterstitialToJSON;
    function TweetInterstitialToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "displayType": value["displayType"],
        "revealText": (0, TweetInterstitialRevealText_1.TweetInterstitialRevealTextToJSON)(value["revealText"]),
        "text": (0, TweetInterstitialText_1.TweetInterstitialTextToJSON)(value["text"])
      };
    }
    exports2.TweetInterstitialToJSONTyped = TweetInterstitialToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetWithVisibilityResults.js
var require_TweetWithVisibilityResults = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetWithVisibilityResults.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetWithVisibilityResultsToJSONTyped = exports2.TweetWithVisibilityResultsToJSON = exports2.TweetWithVisibilityResultsFromJSONTyped = exports2.TweetWithVisibilityResultsFromJSON = exports2.instanceOfTweetWithVisibilityResults = void 0;
    var TypeName_1 = require_TypeName();
    var MediaVisibilityResults_1 = require_MediaVisibilityResults();
    var Tweet_1 = require_Tweet();
    var TweetInterstitial_1 = require_TweetInterstitial();
    function instanceOfTweetWithVisibilityResults(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("tweet" in value) || value["tweet"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetWithVisibilityResults = instanceOfTweetWithVisibilityResults;
    function TweetWithVisibilityResultsFromJSON(json) {
      return TweetWithVisibilityResultsFromJSONTyped(json, false);
    }
    exports2.TweetWithVisibilityResultsFromJSON = TweetWithVisibilityResultsFromJSON;
    function TweetWithVisibilityResultsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "limitedActionResults": json["limitedActionResults"] == null ? void 0 : json["limitedActionResults"],
        "mediaVisibilityResults": json["mediaVisibilityResults"] == null ? void 0 : (0, MediaVisibilityResults_1.MediaVisibilityResultsFromJSON)(json["mediaVisibilityResults"]),
        "tweet": (0, Tweet_1.TweetFromJSON)(json["tweet"]),
        "tweetInterstitial": json["tweetInterstitial"] == null ? void 0 : (0, TweetInterstitial_1.TweetInterstitialFromJSON)(json["tweetInterstitial"])
      };
    }
    exports2.TweetWithVisibilityResultsFromJSONTyped = TweetWithVisibilityResultsFromJSONTyped;
    function TweetWithVisibilityResultsToJSON(json) {
      return TweetWithVisibilityResultsToJSONTyped(json, false);
    }
    exports2.TweetWithVisibilityResultsToJSON = TweetWithVisibilityResultsToJSON;
    function TweetWithVisibilityResultsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "limitedActionResults": value["limitedActionResults"],
        "mediaVisibilityResults": (0, MediaVisibilityResults_1.MediaVisibilityResultsToJSON)(value["mediaVisibilityResults"]),
        "tweet": (0, Tweet_1.TweetToJSON)(value["tweet"]),
        "tweetInterstitial": (0, TweetInterstitial_1.TweetInterstitialToJSON)(value["tweetInterstitial"])
      };
    }
    exports2.TweetWithVisibilityResultsToJSONTyped = TweetWithVisibilityResultsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetUnion.js
var require_TweetUnion = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetUnion.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetUnionToJSONTyped = exports2.TweetUnionToJSON = exports2.TweetUnionFromJSONTyped = exports2.TweetUnionFromJSON = void 0;
    var Tweet_1 = require_Tweet();
    var TweetTombstone_1 = require_TweetTombstone();
    var TweetUnavailable_1 = require_TweetUnavailable();
    var TweetWithVisibilityResults_1 = require_TweetWithVisibilityResults();
    function TweetUnionFromJSON(json) {
      return TweetUnionFromJSONTyped(json, false);
    }
    exports2.TweetUnionFromJSON = TweetUnionFromJSON;
    function TweetUnionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      switch (json["__typename"]) {
        case "Tweet":
          return Object.assign({}, (0, Tweet_1.TweetFromJSONTyped)(json, true), { typename: "Tweet" });
        case "TweetTombstone":
          return Object.assign({}, (0, TweetTombstone_1.TweetTombstoneFromJSONTyped)(json, true), { typename: "TweetTombstone" });
        case "TweetUnavailable":
          return Object.assign({}, (0, TweetUnavailable_1.TweetUnavailableFromJSONTyped)(json, true), { typename: "TweetUnavailable" });
        case "TweetWithVisibilityResults":
          return Object.assign({}, (0, TweetWithVisibilityResults_1.TweetWithVisibilityResultsFromJSONTyped)(json, true), { typename: "TweetWithVisibilityResults" });
        default:
          throw new Error("No variant of TweetUnion exists with 'typename=".concat(json["typename"], "'"));
      }
    }
    exports2.TweetUnionFromJSONTyped = TweetUnionFromJSONTyped;
    function TweetUnionToJSON(json) {
      return TweetUnionToJSONTyped(json, false);
    }
    exports2.TweetUnionToJSON = TweetUnionToJSON;
    function TweetUnionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      switch (value["typename"]) {
        case "Tweet":
          return Object.assign({}, (0, Tweet_1.TweetToJSON)(value), { typename: "Tweet" });
        case "TweetTombstone":
          return Object.assign({}, (0, TweetTombstone_1.TweetTombstoneToJSON)(value), { typename: "TweetTombstone" });
        case "TweetUnavailable":
          return Object.assign({}, (0, TweetUnavailable_1.TweetUnavailableToJSON)(value), { typename: "TweetUnavailable" });
        case "TweetWithVisibilityResults":
          return Object.assign({}, (0, TweetWithVisibilityResults_1.TweetWithVisibilityResultsToJSON)(value), { typename: "TweetWithVisibilityResults" });
        default:
          throw new Error("No variant of TweetUnion exists with 'typename=".concat(value["typename"], "'"));
      }
    }
    exports2.TweetUnionToJSONTyped = TweetUnionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ItemResult.js
var require_ItemResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ItemResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ItemResultToJSONTyped = exports2.ItemResultToJSON = exports2.ItemResultFromJSONTyped = exports2.ItemResultFromJSON = exports2.instanceOfItemResult = void 0;
    var TypeName_1 = require_TypeName();
    var TweetUnion_1 = require_TweetUnion();
    function instanceOfItemResult(value) {
      return true;
    }
    exports2.instanceOfItemResult = instanceOfItemResult;
    function ItemResultFromJSON(json) {
      return ItemResultFromJSONTyped(json, false);
    }
    exports2.ItemResultFromJSON = ItemResultFromJSON;
    function ItemResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": json["__typename"] == null ? void 0 : (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "result": json["result"] == null ? void 0 : (0, TweetUnion_1.TweetUnionFromJSON)(json["result"])
      };
    }
    exports2.ItemResultFromJSONTyped = ItemResultFromJSONTyped;
    function ItemResultToJSON(json) {
      return ItemResultToJSONTyped(json, false);
    }
    exports2.ItemResultToJSON = ItemResultToJSON;
    function ItemResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "result": (0, TweetUnion_1.TweetUnionToJSON)(value["result"])
      };
    }
    exports2.ItemResultToJSONTyped = ItemResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UrtEndpointRequestParams.js
var require_UrtEndpointRequestParams = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UrtEndpointRequestParams.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UrtEndpointRequestParamsToJSONTyped = exports2.UrtEndpointRequestParamsToJSON = exports2.UrtEndpointRequestParamsFromJSONTyped = exports2.UrtEndpointRequestParamsFromJSON = exports2.instanceOfUrtEndpointRequestParams = void 0;
    function instanceOfUrtEndpointRequestParams(value) {
      if (!("key" in value) || value["key"] === void 0)
        return false;
      if (!("value" in value) || value["value"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUrtEndpointRequestParams = instanceOfUrtEndpointRequestParams;
    function UrtEndpointRequestParamsFromJSON(json) {
      return UrtEndpointRequestParamsFromJSONTyped(json, false);
    }
    exports2.UrtEndpointRequestParamsFromJSON = UrtEndpointRequestParamsFromJSON;
    function UrtEndpointRequestParamsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "key": json["key"],
        "value": json["value"]
      };
    }
    exports2.UrtEndpointRequestParamsFromJSONTyped = UrtEndpointRequestParamsFromJSONTyped;
    function UrtEndpointRequestParamsToJSON(json) {
      return UrtEndpointRequestParamsToJSONTyped(json, false);
    }
    exports2.UrtEndpointRequestParamsToJSON = UrtEndpointRequestParamsToJSON;
    function UrtEndpointRequestParamsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "key": value["key"],
        "value": value["value"]
      };
    }
    exports2.UrtEndpointRequestParamsToJSONTyped = UrtEndpointRequestParamsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UrtEndpointOptions.js
var require_UrtEndpointOptions = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UrtEndpointOptions.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UrtEndpointOptionsToJSONTyped = exports2.UrtEndpointOptionsToJSON = exports2.UrtEndpointOptionsFromJSONTyped = exports2.UrtEndpointOptionsFromJSON = exports2.instanceOfUrtEndpointOptions = void 0;
    var UrtEndpointRequestParams_1 = require_UrtEndpointRequestParams();
    function instanceOfUrtEndpointOptions(value) {
      if (!("requestParams" in value) || value["requestParams"] === void 0)
        return false;
      if (!("title" in value) || value["title"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUrtEndpointOptions = instanceOfUrtEndpointOptions;
    function UrtEndpointOptionsFromJSON(json) {
      return UrtEndpointOptionsFromJSONTyped(json, false);
    }
    exports2.UrtEndpointOptionsFromJSON = UrtEndpointOptionsFromJSON;
    function UrtEndpointOptionsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "requestParams": json["requestParams"].map(UrtEndpointRequestParams_1.UrtEndpointRequestParamsFromJSON),
        "title": json["title"]
      };
    }
    exports2.UrtEndpointOptionsFromJSONTyped = UrtEndpointOptionsFromJSONTyped;
    function UrtEndpointOptionsToJSON(json) {
      return UrtEndpointOptionsToJSONTyped(json, false);
    }
    exports2.UrtEndpointOptionsToJSON = UrtEndpointOptionsToJSON;
    function UrtEndpointOptionsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "requestParams": value["requestParams"].map(UrtEndpointRequestParams_1.UrtEndpointRequestParamsToJSON),
        "title": value["title"]
      };
    }
    exports2.UrtEndpointOptionsToJSONTyped = UrtEndpointOptionsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SocialContextLandingUrl.js
var require_SocialContextLandingUrl = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SocialContextLandingUrl.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SocialContextLandingUrlToJSONTyped = exports2.SocialContextLandingUrlToJSON = exports2.SocialContextLandingUrlFromJSONTyped = exports2.SocialContextLandingUrlFromJSON = exports2.instanceOfSocialContextLandingUrl = exports2.SocialContextLandingUrlUrlTypeEnum = void 0;
    var UrtEndpointOptions_1 = require_UrtEndpointOptions();
    exports2.SocialContextLandingUrlUrlTypeEnum = {
      DeepLink: "DeepLink",
      UrtEndpoint: "UrtEndpoint",
      ExternalUrl: "ExternalUrl"
    };
    function instanceOfSocialContextLandingUrl(value) {
      return true;
    }
    exports2.instanceOfSocialContextLandingUrl = instanceOfSocialContextLandingUrl;
    function SocialContextLandingUrlFromJSON(json) {
      return SocialContextLandingUrlFromJSONTyped(json, false);
    }
    exports2.SocialContextLandingUrlFromJSON = SocialContextLandingUrlFromJSON;
    function SocialContextLandingUrlFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "url": json["url"] == null ? void 0 : json["url"],
        "urlType": json["urlType"] == null ? void 0 : json["urlType"],
        "urtEndpointOptions": json["urtEndpointOptions"] == null ? void 0 : (0, UrtEndpointOptions_1.UrtEndpointOptionsFromJSON)(json["urtEndpointOptions"])
      };
    }
    exports2.SocialContextLandingUrlFromJSONTyped = SocialContextLandingUrlFromJSONTyped;
    function SocialContextLandingUrlToJSON(json) {
      return SocialContextLandingUrlToJSONTyped(json, false);
    }
    exports2.SocialContextLandingUrlToJSON = SocialContextLandingUrlToJSON;
    function SocialContextLandingUrlToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "url": value["url"],
        "urlType": value["urlType"],
        "urtEndpointOptions": (0, UrtEndpointOptions_1.UrtEndpointOptionsToJSON)(value["urtEndpointOptions"])
      };
    }
    exports2.SocialContextLandingUrlToJSONTyped = SocialContextLandingUrlToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SocialContextUnionType.js
var require_SocialContextUnionType = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SocialContextUnionType.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SocialContextUnionTypeToJSONTyped = exports2.SocialContextUnionTypeToJSON = exports2.SocialContextUnionTypeFromJSONTyped = exports2.SocialContextUnionTypeFromJSON = exports2.instanceOfSocialContextUnionType = exports2.SocialContextUnionType = void 0;
    exports2.SocialContextUnionType = {
      TimelineGeneralContext: "TimelineGeneralContext",
      TimelineTopicContext: "TimelineTopicContext"
    };
    function instanceOfSocialContextUnionType(value) {
      for (var key in exports2.SocialContextUnionType) {
        if (Object.prototype.hasOwnProperty.call(exports2.SocialContextUnionType, key)) {
          if (exports2.SocialContextUnionType[key] === value) {
            return true;
          }
        }
      }
      return false;
    }
    exports2.instanceOfSocialContextUnionType = instanceOfSocialContextUnionType;
    function SocialContextUnionTypeFromJSON(json) {
      return SocialContextUnionTypeFromJSONTyped(json, false);
    }
    exports2.SocialContextUnionTypeFromJSON = SocialContextUnionTypeFromJSON;
    function SocialContextUnionTypeFromJSONTyped(json, ignoreDiscriminator) {
      return json;
    }
    exports2.SocialContextUnionTypeFromJSONTyped = SocialContextUnionTypeFromJSONTyped;
    function SocialContextUnionTypeToJSON(value) {
      return value;
    }
    exports2.SocialContextUnionTypeToJSON = SocialContextUnionTypeToJSON;
    function SocialContextUnionTypeToJSONTyped(value, ignoreDiscriminator) {
      return value;
    }
    exports2.SocialContextUnionTypeToJSONTyped = SocialContextUnionTypeToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineGeneralContext.js
var require_TimelineGeneralContext = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineGeneralContext.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineGeneralContextToJSONTyped = exports2.TimelineGeneralContextToJSON = exports2.TimelineGeneralContextFromJSONTyped = exports2.TimelineGeneralContextFromJSON = exports2.instanceOfTimelineGeneralContext = exports2.TimelineGeneralContextContextTypeEnum = void 0;
    var SocialContextLandingUrl_1 = require_SocialContextLandingUrl();
    var SocialContextUnionType_1 = require_SocialContextUnionType();
    exports2.TimelineGeneralContextContextTypeEnum = {
      Follow: "Follow",
      Pin: "Pin",
      Like: "Like",
      Location: "Location",
      Sparkle: "Sparkle",
      Conversation: "Conversation",
      List: "List",
      Community: "Community"
    };
    function instanceOfTimelineGeneralContext(value) {
      return true;
    }
    exports2.instanceOfTimelineGeneralContext = instanceOfTimelineGeneralContext;
    function TimelineGeneralContextFromJSON(json) {
      return TimelineGeneralContextFromJSONTyped(json, false);
    }
    exports2.TimelineGeneralContextFromJSON = TimelineGeneralContextFromJSON;
    function TimelineGeneralContextFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "contextType": json["contextType"] == null ? void 0 : json["contextType"],
        "landingUrl": json["landingUrl"] == null ? void 0 : (0, SocialContextLandingUrl_1.SocialContextLandingUrlFromJSON)(json["landingUrl"]),
        "text": json["text"] == null ? void 0 : json["text"],
        "type": json["type"] == null ? void 0 : (0, SocialContextUnionType_1.SocialContextUnionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelineGeneralContextFromJSONTyped = TimelineGeneralContextFromJSONTyped;
    function TimelineGeneralContextToJSON(json) {
      return TimelineGeneralContextToJSONTyped(json, false);
    }
    exports2.TimelineGeneralContextToJSON = TimelineGeneralContextToJSON;
    function TimelineGeneralContextToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "contextType": value["contextType"],
        "landingUrl": (0, SocialContextLandingUrl_1.SocialContextLandingUrlToJSON)(value["landingUrl"]),
        "text": value["text"],
        "type": (0, SocialContextUnionType_1.SocialContextUnionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelineGeneralContextToJSONTyped = TimelineGeneralContextToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TopicContext.js
var require_TopicContext = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TopicContext.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TopicContextToJSONTyped = exports2.TopicContextToJSON = exports2.TopicContextFromJSONTyped = exports2.TopicContextFromJSON = exports2.instanceOfTopicContext = void 0;
    function instanceOfTopicContext(value) {
      return true;
    }
    exports2.instanceOfTopicContext = instanceOfTopicContext;
    function TopicContextFromJSON(json) {
      return TopicContextFromJSONTyped(json, false);
    }
    exports2.TopicContextFromJSON = TopicContextFromJSON;
    function TopicContextFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "description": json["description"] == null ? void 0 : json["description"],
        "following": json["following"] == null ? void 0 : json["following"],
        "iconUrl": json["icon_url"] == null ? void 0 : json["icon_url"],
        "id": json["id"] == null ? void 0 : json["id"],
        "name": json["name"] == null ? void 0 : json["name"],
        "notInterested": json["not_interested"] == null ? void 0 : json["not_interested"],
        "topicId": json["topic_id"] == null ? void 0 : json["topic_id"]
      };
    }
    exports2.TopicContextFromJSONTyped = TopicContextFromJSONTyped;
    function TopicContextToJSON(json) {
      return TopicContextToJSONTyped(json, false);
    }
    exports2.TopicContextToJSON = TopicContextToJSON;
    function TopicContextToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "description": value["description"],
        "following": value["following"],
        "icon_url": value["iconUrl"],
        "id": value["id"],
        "name": value["name"],
        "not_interested": value["notInterested"],
        "topic_id": value["topicId"]
      };
    }
    exports2.TopicContextToJSONTyped = TopicContextToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTopicContext.js
var require_TimelineTopicContext = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTopicContext.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineTopicContextToJSONTyped = exports2.TimelineTopicContextToJSON = exports2.TimelineTopicContextFromJSONTyped = exports2.TimelineTopicContextFromJSON = exports2.instanceOfTimelineTopicContext = exports2.TimelineTopicContextFunctionalityTypeEnum = void 0;
    var TopicContext_1 = require_TopicContext();
    var SocialContextUnionType_1 = require_SocialContextUnionType();
    exports2.TimelineTopicContextFunctionalityTypeEnum = {
      Basic: "Basic"
    };
    function instanceOfTimelineTopicContext(value) {
      return true;
    }
    exports2.instanceOfTimelineTopicContext = instanceOfTimelineTopicContext;
    function TimelineTopicContextFromJSON(json) {
      return TimelineTopicContextFromJSONTyped(json, false);
    }
    exports2.TimelineTopicContextFromJSON = TimelineTopicContextFromJSON;
    function TimelineTopicContextFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "functionalityType": json["functionalityType"] == null ? void 0 : json["functionalityType"],
        "topic": json["topic"] == null ? void 0 : (0, TopicContext_1.TopicContextFromJSON)(json["topic"]),
        "type": json["type"] == null ? void 0 : (0, SocialContextUnionType_1.SocialContextUnionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelineTopicContextFromJSONTyped = TimelineTopicContextFromJSONTyped;
    function TimelineTopicContextToJSON(json) {
      return TimelineTopicContextToJSONTyped(json, false);
    }
    exports2.TimelineTopicContextToJSON = TimelineTopicContextToJSON;
    function TimelineTopicContextToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "functionalityType": value["functionalityType"],
        "topic": (0, TopicContext_1.TopicContextToJSON)(value["topic"]),
        "type": (0, SocialContextUnionType_1.SocialContextUnionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelineTopicContextToJSONTyped = TimelineTopicContextToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SocialContextUnion.js
var require_SocialContextUnion = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SocialContextUnion.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SocialContextUnionToJSONTyped = exports2.SocialContextUnionToJSON = exports2.SocialContextUnionFromJSONTyped = exports2.SocialContextUnionFromJSON = void 0;
    var TimelineGeneralContext_1 = require_TimelineGeneralContext();
    var TimelineTopicContext_1 = require_TimelineTopicContext();
    function SocialContextUnionFromJSON(json) {
      return SocialContextUnionFromJSONTyped(json, false);
    }
    exports2.SocialContextUnionFromJSON = SocialContextUnionFromJSON;
    function SocialContextUnionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      switch (json["type"]) {
        case "TimelineGeneralContext":
          return Object.assign({}, (0, TimelineGeneralContext_1.TimelineGeneralContextFromJSONTyped)(json, true), { type: "TimelineGeneralContext" });
        case "TimelineTopicContext":
          return Object.assign({}, (0, TimelineTopicContext_1.TimelineTopicContextFromJSONTyped)(json, true), { type: "TimelineTopicContext" });
        default:
          throw new Error("No variant of SocialContextUnion exists with 'type=".concat(json["type"], "'"));
      }
    }
    exports2.SocialContextUnionFromJSONTyped = SocialContextUnionFromJSONTyped;
    function SocialContextUnionToJSON(json) {
      return SocialContextUnionToJSONTyped(json, false);
    }
    exports2.SocialContextUnionToJSON = SocialContextUnionToJSON;
    function SocialContextUnionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      switch (value["type"]) {
        case "TimelineGeneralContext":
          return Object.assign({}, (0, TimelineGeneralContext_1.TimelineGeneralContextToJSON)(value), { type: "TimelineGeneralContext" });
        case "TimelineTopicContext":
          return Object.assign({}, (0, TimelineTopicContext_1.TimelineTopicContextToJSON)(value), { type: "TimelineTopicContext" });
        default:
          throw new Error("No variant of SocialContextUnion exists with 'type=".concat(value["type"], "'"));
      }
    }
    exports2.SocialContextUnionToJSONTyped = SocialContextUnionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ContentItemType.js
var require_ContentItemType = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ContentItemType.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ContentItemTypeToJSONTyped = exports2.ContentItemTypeToJSON = exports2.ContentItemTypeFromJSONTyped = exports2.ContentItemTypeFromJSON = exports2.instanceOfContentItemType = exports2.ContentItemType = void 0;
    exports2.ContentItemType = {
      TimelineTweet: "TimelineTweet",
      TimelineTimelineCursor: "TimelineTimelineCursor",
      TimelineUser: "TimelineUser",
      TimelinePrompt: "TimelinePrompt",
      TimelineMessagePrompt: "TimelineMessagePrompt",
      TimelineCommunity: "TimelineCommunity"
    };
    function instanceOfContentItemType(value) {
      for (var key in exports2.ContentItemType) {
        if (Object.prototype.hasOwnProperty.call(exports2.ContentItemType, key)) {
          if (exports2.ContentItemType[key] === value) {
            return true;
          }
        }
      }
      return false;
    }
    exports2.instanceOfContentItemType = instanceOfContentItemType;
    function ContentItemTypeFromJSON(json) {
      return ContentItemTypeFromJSONTyped(json, false);
    }
    exports2.ContentItemTypeFromJSON = ContentItemTypeFromJSON;
    function ContentItemTypeFromJSONTyped(json, ignoreDiscriminator) {
      return json;
    }
    exports2.ContentItemTypeFromJSONTyped = ContentItemTypeFromJSONTyped;
    function ContentItemTypeToJSON(value) {
      return value;
    }
    exports2.ContentItemTypeToJSON = ContentItemTypeToJSON;
    function ContentItemTypeToJSONTyped(value, ignoreDiscriminator) {
      return value;
    }
    exports2.ContentItemTypeToJSONTyped = ContentItemTypeToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTweet.js
var require_TimelineTweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineTweetToJSONTyped = exports2.TimelineTweetToJSON = exports2.TimelineTweetFromJSONTyped = exports2.TimelineTweetFromJSON = exports2.instanceOfTimelineTweet = exports2.TimelineTweetTweetDisplayTypeEnum = void 0;
    var TypeName_1 = require_TypeName();
    var Highlight_1 = require_Highlight();
    var ItemResult_1 = require_ItemResult();
    var SocialContextUnion_1 = require_SocialContextUnion();
    var ContentItemType_1 = require_ContentItemType();
    exports2.TimelineTweetTweetDisplayTypeEnum = {
      Tweet: "Tweet",
      SelfThread: "SelfThread",
      MediaGrid: "MediaGrid",
      CondensedTweet: "CondensedTweet"
    };
    function instanceOfTimelineTweet(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("itemType" in value) || value["itemType"] === void 0)
        return false;
      if (!("tweetDisplayType" in value) || value["tweetDisplayType"] === void 0)
        return false;
      if (!("tweetResults" in value) || value["tweetResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineTweet = instanceOfTimelineTweet;
    function TimelineTweetFromJSON(json) {
      return TimelineTweetFromJSONTyped(json, false);
    }
    exports2.TimelineTweetFromJSON = TimelineTweetFromJSON;
    function TimelineTweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "highlights": json["highlights"] == null ? void 0 : (0, Highlight_1.HighlightFromJSON)(json["highlights"]),
        "itemType": (0, ContentItemType_1.ContentItemTypeFromJSON)(json["itemType"]),
        "promotedMetadata": json["promotedMetadata"] == null ? void 0 : json["promotedMetadata"],
        "socialContext": json["socialContext"] == null ? void 0 : (0, SocialContextUnion_1.SocialContextUnionFromJSON)(json["socialContext"]),
        "tweetDisplayType": json["tweetDisplayType"],
        "tweetResults": (0, ItemResult_1.ItemResultFromJSON)(json["tweet_results"])
      };
    }
    exports2.TimelineTweetFromJSONTyped = TimelineTweetFromJSONTyped;
    function TimelineTweetToJSON(json) {
      return TimelineTweetToJSONTyped(json, false);
    }
    exports2.TimelineTweetToJSON = TimelineTweetToJSON;
    function TimelineTweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "highlights": (0, Highlight_1.HighlightToJSON)(value["highlights"]),
        "itemType": (0, ContentItemType_1.ContentItemTypeToJSON)(value["itemType"]),
        "promotedMetadata": value["promotedMetadata"],
        "socialContext": (0, SocialContextUnion_1.SocialContextUnionToJSON)(value["socialContext"]),
        "tweetDisplayType": value["tweetDisplayType"],
        "tweet_results": (0, ItemResult_1.ItemResultToJSON)(value["tweetResults"])
      };
    }
    exports2.TimelineTweetToJSONTyped = TimelineTweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineUser.js
var require_TimelineUser = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineUser.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineUserToJSONTyped = exports2.TimelineUserToJSON = exports2.TimelineUserFromJSONTyped = exports2.TimelineUserFromJSON = exports2.instanceOfTimelineUser = exports2.TimelineUserUserDisplayTypeEnum = void 0;
    var TypeName_1 = require_TypeName();
    var SocialContextUnion_1 = require_SocialContextUnion();
    var UserResults_1 = require_UserResults();
    var ContentItemType_1 = require_ContentItemType();
    exports2.TimelineUserUserDisplayTypeEnum = {
      User: "User",
      UserDetailed: "UserDetailed",
      SubscribableUser: "SubscribableUser"
    };
    function instanceOfTimelineUser(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("itemType" in value) || value["itemType"] === void 0)
        return false;
      if (!("userDisplayType" in value) || value["userDisplayType"] === void 0)
        return false;
      if (!("userResults" in value) || value["userResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineUser = instanceOfTimelineUser;
    function TimelineUserFromJSON(json) {
      return TimelineUserFromJSONTyped(json, false);
    }
    exports2.TimelineUserFromJSON = TimelineUserFromJSON;
    function TimelineUserFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "itemType": (0, ContentItemType_1.ContentItemTypeFromJSON)(json["itemType"]),
        "socialContext": json["socialContext"] == null ? void 0 : (0, SocialContextUnion_1.SocialContextUnionFromJSON)(json["socialContext"]),
        "userDisplayType": json["userDisplayType"],
        "userResults": (0, UserResults_1.UserResultsFromJSON)(json["user_results"])
      };
    }
    exports2.TimelineUserFromJSONTyped = TimelineUserFromJSONTyped;
    function TimelineUserToJSON(json) {
      return TimelineUserToJSONTyped(json, false);
    }
    exports2.TimelineUserToJSON = TimelineUserToJSON;
    function TimelineUserToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "itemType": (0, ContentItemType_1.ContentItemTypeToJSON)(value["itemType"]),
        "socialContext": (0, SocialContextUnion_1.SocialContextUnionToJSON)(value["socialContext"]),
        "userDisplayType": value["userDisplayType"],
        "user_results": (0, UserResults_1.UserResultsToJSON)(value["userResults"])
      };
    }
    exports2.TimelineUserToJSONTyped = TimelineUserToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ItemContentUnion.js
var require_ItemContentUnion = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ItemContentUnion.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ItemContentUnionToJSONTyped = exports2.ItemContentUnionToJSON = exports2.ItemContentUnionFromJSONTyped = exports2.ItemContentUnionFromJSON = void 0;
    var TimelineCommunity_1 = require_TimelineCommunity();
    var TimelineMessagePrompt_1 = require_TimelineMessagePrompt();
    var TimelinePrompt_1 = require_TimelinePrompt();
    var TimelineTimelineCursor_1 = require_TimelineTimelineCursor();
    var TimelineTweet_1 = require_TimelineTweet();
    var TimelineUser_1 = require_TimelineUser();
    function ItemContentUnionFromJSON(json) {
      return ItemContentUnionFromJSONTyped(json, false);
    }
    exports2.ItemContentUnionFromJSON = ItemContentUnionFromJSON;
    function ItemContentUnionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      switch (json["__typename"]) {
        case "TimelineCommunity":
          return Object.assign({}, (0, TimelineCommunity_1.TimelineCommunityFromJSONTyped)(json, true), { typename: "TimelineCommunity" });
        case "TimelineMessagePrompt":
          return Object.assign({}, (0, TimelineMessagePrompt_1.TimelineMessagePromptFromJSONTyped)(json, true), { typename: "TimelineMessagePrompt" });
        case "TimelinePrompt":
          return Object.assign({}, (0, TimelinePrompt_1.TimelinePromptFromJSONTyped)(json, true), { typename: "TimelinePrompt" });
        case "TimelineTimelineCursor":
          return Object.assign({}, (0, TimelineTimelineCursor_1.TimelineTimelineCursorFromJSONTyped)(json, true), { typename: "TimelineTimelineCursor" });
        case "TimelineTweet":
          return Object.assign({}, (0, TimelineTweet_1.TimelineTweetFromJSONTyped)(json, true), { typename: "TimelineTweet" });
        case "TimelineUser":
          return Object.assign({}, (0, TimelineUser_1.TimelineUserFromJSONTyped)(json, true), { typename: "TimelineUser" });
        default:
          throw new Error("No variant of ItemContentUnion exists with 'typename=".concat(json["typename"], "'"));
      }
    }
    exports2.ItemContentUnionFromJSONTyped = ItemContentUnionFromJSONTyped;
    function ItemContentUnionToJSON(json) {
      return ItemContentUnionToJSONTyped(json, false);
    }
    exports2.ItemContentUnionToJSON = ItemContentUnionToJSON;
    function ItemContentUnionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      switch (value["typename"]) {
        case "TimelineCommunity":
          return Object.assign({}, (0, TimelineCommunity_1.TimelineCommunityToJSON)(value), { typename: "TimelineCommunity" });
        case "TimelineMessagePrompt":
          return Object.assign({}, (0, TimelineMessagePrompt_1.TimelineMessagePromptToJSON)(value), { typename: "TimelineMessagePrompt" });
        case "TimelinePrompt":
          return Object.assign({}, (0, TimelinePrompt_1.TimelinePromptToJSON)(value), { typename: "TimelinePrompt" });
        case "TimelineTimelineCursor":
          return Object.assign({}, (0, TimelineTimelineCursor_1.TimelineTimelineCursorToJSON)(value), { typename: "TimelineTimelineCursor" });
        case "TimelineTweet":
          return Object.assign({}, (0, TimelineTweet_1.TimelineTweetToJSON)(value), { typename: "TimelineTweet" });
        case "TimelineUser":
          return Object.assign({}, (0, TimelineUser_1.TimelineUserToJSON)(value), { typename: "TimelineUser" });
        default:
          throw new Error("No variant of ItemContentUnion exists with 'typename=".concat(value["typename"], "'"));
      }
    }
    exports2.ItemContentUnionToJSONTyped = ItemContentUnionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ClientEventInfo.js
var require_ClientEventInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ClientEventInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ClientEventInfoToJSONTyped = exports2.ClientEventInfoToJSON = exports2.ClientEventInfoFromJSONTyped = exports2.ClientEventInfoFromJSON = exports2.instanceOfClientEventInfo = void 0;
    function instanceOfClientEventInfo(value) {
      return true;
    }
    exports2.instanceOfClientEventInfo = instanceOfClientEventInfo;
    function ClientEventInfoFromJSON(json) {
      return ClientEventInfoFromJSONTyped(json, false);
    }
    exports2.ClientEventInfoFromJSON = ClientEventInfoFromJSON;
    function ClientEventInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "component": json["component"] == null ? void 0 : json["component"],
        "details": json["details"] == null ? void 0 : json["details"],
        "element": json["element"] == null ? void 0 : json["element"]
      };
    }
    exports2.ClientEventInfoFromJSONTyped = ClientEventInfoFromJSONTyped;
    function ClientEventInfoToJSON(json) {
      return ClientEventInfoToJSONTyped(json, false);
    }
    exports2.ClientEventInfoToJSON = ClientEventInfoToJSON;
    function ClientEventInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "component": value["component"],
        "details": value["details"],
        "element": value["element"]
      };
    }
    exports2.ClientEventInfoToJSONTyped = ClientEventInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTimelineItem.js
var require_TimelineTimelineItem = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTimelineItem.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineTimelineItemToJSONTyped = exports2.TimelineTimelineItemToJSON = exports2.TimelineTimelineItemFromJSONTyped = exports2.TimelineTimelineItemFromJSON = exports2.instanceOfTimelineTimelineItem = void 0;
    var TypeName_1 = require_TypeName();
    var ItemContentUnion_1 = require_ItemContentUnion();
    var ClientEventInfo_1 = require_ClientEventInfo();
    var ContentEntryType_1 = require_ContentEntryType();
    function instanceOfTimelineTimelineItem(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("entryType" in value) || value["entryType"] === void 0)
        return false;
      if (!("itemContent" in value) || value["itemContent"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineTimelineItem = instanceOfTimelineTimelineItem;
    function TimelineTimelineItemFromJSON(json) {
      return TimelineTimelineItemFromJSONTyped(json, false);
    }
    exports2.TimelineTimelineItemFromJSON = TimelineTimelineItemFromJSON;
    function TimelineTimelineItemFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "clientEventInfo": json["clientEventInfo"] == null ? void 0 : (0, ClientEventInfo_1.ClientEventInfoFromJSON)(json["clientEventInfo"]),
        "entryType": (0, ContentEntryType_1.ContentEntryTypeFromJSON)(json["entryType"]),
        "feedbackInfo": json["feedbackInfo"] == null ? void 0 : json["feedbackInfo"],
        "itemContent": (0, ItemContentUnion_1.ItemContentUnionFromJSON)(json["itemContent"])
      };
    }
    exports2.TimelineTimelineItemFromJSONTyped = TimelineTimelineItemFromJSONTyped;
    function TimelineTimelineItemToJSON(json) {
      return TimelineTimelineItemToJSONTyped(json, false);
    }
    exports2.TimelineTimelineItemToJSON = TimelineTimelineItemToJSON;
    function TimelineTimelineItemToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "clientEventInfo": (0, ClientEventInfo_1.ClientEventInfoToJSON)(value["clientEventInfo"]),
        "entryType": (0, ContentEntryType_1.ContentEntryTypeToJSON)(value["entryType"]),
        "feedbackInfo": value["feedbackInfo"],
        "itemContent": (0, ItemContentUnion_1.ItemContentUnionToJSON)(value["itemContent"])
      };
    }
    exports2.TimelineTimelineItemToJSONTyped = TimelineTimelineItemToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FeedbackInfo.js
var require_FeedbackInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FeedbackInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FeedbackInfoToJSONTyped = exports2.FeedbackInfoToJSON = exports2.FeedbackInfoFromJSONTyped = exports2.FeedbackInfoFromJSON = exports2.instanceOfFeedbackInfo = void 0;
    function instanceOfFeedbackInfo(value) {
      return true;
    }
    exports2.instanceOfFeedbackInfo = instanceOfFeedbackInfo;
    function FeedbackInfoFromJSON(json) {
      return FeedbackInfoFromJSONTyped(json, false);
    }
    exports2.FeedbackInfoFromJSON = FeedbackInfoFromJSON;
    function FeedbackInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "feedbackKeys": json["feedbackKeys"] == null ? void 0 : json["feedbackKeys"]
      };
    }
    exports2.FeedbackInfoFromJSONTyped = FeedbackInfoFromJSONTyped;
    function FeedbackInfoToJSON(json) {
      return FeedbackInfoToJSONTyped(json, false);
    }
    exports2.FeedbackInfoToJSON = FeedbackInfoToJSON;
    function FeedbackInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "feedbackKeys": value["feedbackKeys"]
      };
    }
    exports2.FeedbackInfoToJSONTyped = FeedbackInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ModuleEntry.js
var require_ModuleEntry = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ModuleEntry.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ModuleEntryToJSONTyped = exports2.ModuleEntryToJSON = exports2.ModuleEntryFromJSONTyped = exports2.ModuleEntryFromJSON = exports2.instanceOfModuleEntry = void 0;
    var ItemContentUnion_1 = require_ItemContentUnion();
    var ClientEventInfo_1 = require_ClientEventInfo();
    var FeedbackInfo_1 = require_FeedbackInfo();
    function instanceOfModuleEntry(value) {
      if (!("itemContent" in value) || value["itemContent"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfModuleEntry = instanceOfModuleEntry;
    function ModuleEntryFromJSON(json) {
      return ModuleEntryFromJSONTyped(json, false);
    }
    exports2.ModuleEntryFromJSON = ModuleEntryFromJSON;
    function ModuleEntryFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "clientEventInfo": json["clientEventInfo"] == null ? void 0 : (0, ClientEventInfo_1.ClientEventInfoFromJSON)(json["clientEventInfo"]),
        "feedbackInfo": json["feedbackInfo"] == null ? void 0 : (0, FeedbackInfo_1.FeedbackInfoFromJSON)(json["feedbackInfo"]),
        "itemContent": (0, ItemContentUnion_1.ItemContentUnionFromJSON)(json["itemContent"])
      };
    }
    exports2.ModuleEntryFromJSONTyped = ModuleEntryFromJSONTyped;
    function ModuleEntryToJSON(json) {
      return ModuleEntryToJSONTyped(json, false);
    }
    exports2.ModuleEntryToJSON = ModuleEntryToJSON;
    function ModuleEntryToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "clientEventInfo": (0, ClientEventInfo_1.ClientEventInfoToJSON)(value["clientEventInfo"]),
        "feedbackInfo": (0, FeedbackInfo_1.FeedbackInfoToJSON)(value["feedbackInfo"]),
        "itemContent": (0, ItemContentUnion_1.ItemContentUnionToJSON)(value["itemContent"])
      };
    }
    exports2.ModuleEntryToJSONTyped = ModuleEntryToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ModuleItem.js
var require_ModuleItem = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ModuleItem.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ModuleItemToJSONTyped = exports2.ModuleItemToJSON = exports2.ModuleItemFromJSONTyped = exports2.ModuleItemFromJSON = exports2.instanceOfModuleItem = void 0;
    var ModuleEntry_1 = require_ModuleEntry();
    function instanceOfModuleItem(value) {
      if (!("entryId" in value) || value["entryId"] === void 0)
        return false;
      if (!("item" in value) || value["item"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfModuleItem = instanceOfModuleItem;
    function ModuleItemFromJSON(json) {
      return ModuleItemFromJSONTyped(json, false);
    }
    exports2.ModuleItemFromJSON = ModuleItemFromJSON;
    function ModuleItemFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entryId": json["entryId"],
        "item": (0, ModuleEntry_1.ModuleEntryFromJSON)(json["item"])
      };
    }
    exports2.ModuleItemFromJSONTyped = ModuleItemFromJSONTyped;
    function ModuleItemToJSON(json) {
      return ModuleItemToJSONTyped(json, false);
    }
    exports2.ModuleItemToJSON = ModuleItemToJSON;
    function ModuleItemToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entryId": value["entryId"],
        "item": (0, ModuleEntry_1.ModuleEntryToJSON)(value["item"])
      };
    }
    exports2.ModuleItemToJSONTyped = ModuleItemToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DisplayType.js
var require_DisplayType = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DisplayType.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DisplayTypeToJSONTyped = exports2.DisplayTypeToJSON = exports2.DisplayTypeFromJSONTyped = exports2.DisplayTypeFromJSON = exports2.instanceOfDisplayType = exports2.DisplayType = void 0;
    exports2.DisplayType = {
      Vertical: "Vertical",
      VerticalConversation: "VerticalConversation",
      VerticalGrid: "VerticalGrid",
      Carousel: "Carousel"
    };
    function instanceOfDisplayType(value) {
      for (var key in exports2.DisplayType) {
        if (Object.prototype.hasOwnProperty.call(exports2.DisplayType, key)) {
          if (exports2.DisplayType[key] === value) {
            return true;
          }
        }
      }
      return false;
    }
    exports2.instanceOfDisplayType = instanceOfDisplayType;
    function DisplayTypeFromJSON(json) {
      return DisplayTypeFromJSONTyped(json, false);
    }
    exports2.DisplayTypeFromJSON = DisplayTypeFromJSON;
    function DisplayTypeFromJSONTyped(json, ignoreDiscriminator) {
      return json;
    }
    exports2.DisplayTypeFromJSONTyped = DisplayTypeFromJSONTyped;
    function DisplayTypeToJSON(value) {
      return value;
    }
    exports2.DisplayTypeToJSON = DisplayTypeToJSON;
    function DisplayTypeToJSONTyped(value, ignoreDiscriminator) {
      return value;
    }
    exports2.DisplayTypeToJSONTyped = DisplayTypeToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTimelineModule.js
var require_TimelineTimelineModule = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTimelineModule.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineTimelineModuleToJSONTyped = exports2.TimelineTimelineModuleToJSON = exports2.TimelineTimelineModuleFromJSONTyped = exports2.TimelineTimelineModuleFromJSON = exports2.instanceOfTimelineTimelineModule = void 0;
    var ModuleItem_1 = require_ModuleItem();
    var TypeName_1 = require_TypeName();
    var DisplayType_1 = require_DisplayType();
    var FeedbackInfo_1 = require_FeedbackInfo();
    var ContentEntryType_1 = require_ContentEntryType();
    function instanceOfTimelineTimelineModule(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("clientEventInfo" in value) || value["clientEventInfo"] === void 0)
        return false;
      if (!("displayType" in value) || value["displayType"] === void 0)
        return false;
      if (!("entryType" in value) || value["entryType"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineTimelineModule = instanceOfTimelineTimelineModule;
    function TimelineTimelineModuleFromJSON(json) {
      return TimelineTimelineModuleFromJSONTyped(json, false);
    }
    exports2.TimelineTimelineModuleFromJSON = TimelineTimelineModuleFromJSON;
    function TimelineTimelineModuleFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "clientEventInfo": json["clientEventInfo"],
        "displayType": (0, DisplayType_1.DisplayTypeFromJSON)(json["displayType"]),
        "entryType": (0, ContentEntryType_1.ContentEntryTypeFromJSON)(json["entryType"]),
        "feedbackInfo": json["feedbackInfo"] == null ? void 0 : (0, FeedbackInfo_1.FeedbackInfoFromJSON)(json["feedbackInfo"]),
        "footer": json["footer"] == null ? void 0 : json["footer"],
        "header": json["header"] == null ? void 0 : json["header"],
        "items": json["items"] == null ? void 0 : json["items"].map(ModuleItem_1.ModuleItemFromJSON),
        "metadata": json["metadata"] == null ? void 0 : json["metadata"]
      };
    }
    exports2.TimelineTimelineModuleFromJSONTyped = TimelineTimelineModuleFromJSONTyped;
    function TimelineTimelineModuleToJSON(json) {
      return TimelineTimelineModuleToJSONTyped(json, false);
    }
    exports2.TimelineTimelineModuleToJSON = TimelineTimelineModuleToJSON;
    function TimelineTimelineModuleToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "clientEventInfo": value["clientEventInfo"],
        "displayType": (0, DisplayType_1.DisplayTypeToJSON)(value["displayType"]),
        "entryType": (0, ContentEntryType_1.ContentEntryTypeToJSON)(value["entryType"]),
        "feedbackInfo": (0, FeedbackInfo_1.FeedbackInfoToJSON)(value["feedbackInfo"]),
        "footer": value["footer"],
        "header": value["header"],
        "items": value["items"] == null ? void 0 : value["items"].map(ModuleItem_1.ModuleItemToJSON),
        "metadata": value["metadata"]
      };
    }
    exports2.TimelineTimelineModuleToJSONTyped = TimelineTimelineModuleToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ContentUnion.js
var require_ContentUnion = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ContentUnion.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ContentUnionToJSONTyped = exports2.ContentUnionToJSON = exports2.ContentUnionFromJSONTyped = exports2.ContentUnionFromJSON = void 0;
    var TimelineTimelineCursor_1 = require_TimelineTimelineCursor();
    var TimelineTimelineItem_1 = require_TimelineTimelineItem();
    var TimelineTimelineModule_1 = require_TimelineTimelineModule();
    function ContentUnionFromJSON(json) {
      return ContentUnionFromJSONTyped(json, false);
    }
    exports2.ContentUnionFromJSON = ContentUnionFromJSON;
    function ContentUnionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      switch (json["entryType"]) {
        case "TimelineTimelineCursor":
          return Object.assign({}, (0, TimelineTimelineCursor_1.TimelineTimelineCursorFromJSONTyped)(json, true), { entryType: "TimelineTimelineCursor" });
        case "TimelineTimelineItem":
          return Object.assign({}, (0, TimelineTimelineItem_1.TimelineTimelineItemFromJSONTyped)(json, true), { entryType: "TimelineTimelineItem" });
        case "TimelineTimelineModule":
          return Object.assign({}, (0, TimelineTimelineModule_1.TimelineTimelineModuleFromJSONTyped)(json, true), { entryType: "TimelineTimelineModule" });
        default:
          throw new Error("No variant of ContentUnion exists with 'entryType=".concat(json["entryType"], "'"));
      }
    }
    exports2.ContentUnionFromJSONTyped = ContentUnionFromJSONTyped;
    function ContentUnionToJSON(json) {
      return ContentUnionToJSONTyped(json, false);
    }
    exports2.ContentUnionToJSON = ContentUnionToJSON;
    function ContentUnionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      switch (value["entryType"]) {
        case "TimelineTimelineCursor":
          return Object.assign({}, (0, TimelineTimelineCursor_1.TimelineTimelineCursorToJSON)(value), { entryType: "TimelineTimelineCursor" });
        case "TimelineTimelineItem":
          return Object.assign({}, (0, TimelineTimelineItem_1.TimelineTimelineItemToJSON)(value), { entryType: "TimelineTimelineItem" });
        case "TimelineTimelineModule":
          return Object.assign({}, (0, TimelineTimelineModule_1.TimelineTimelineModuleToJSON)(value), { entryType: "TimelineTimelineModule" });
        default:
          throw new Error("No variant of ContentUnion exists with 'entryType=".concat(value["entryType"], "'"));
      }
    }
    exports2.ContentUnionToJSONTyped = ContentUnionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineAddEntry.js
var require_TimelineAddEntry = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineAddEntry.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineAddEntryToJSONTyped = exports2.TimelineAddEntryToJSON = exports2.TimelineAddEntryFromJSONTyped = exports2.TimelineAddEntryFromJSON = exports2.instanceOfTimelineAddEntry = void 0;
    var ContentUnion_1 = require_ContentUnion();
    function instanceOfTimelineAddEntry(value) {
      if (!("content" in value) || value["content"] === void 0)
        return false;
      if (!("entryId" in value) || value["entryId"] === void 0)
        return false;
      if (!("sortIndex" in value) || value["sortIndex"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineAddEntry = instanceOfTimelineAddEntry;
    function TimelineAddEntryFromJSON(json) {
      return TimelineAddEntryFromJSONTyped(json, false);
    }
    exports2.TimelineAddEntryFromJSON = TimelineAddEntryFromJSON;
    function TimelineAddEntryFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "content": (0, ContentUnion_1.ContentUnionFromJSON)(json["content"]),
        "entryId": json["entryId"],
        "sortIndex": json["sortIndex"]
      };
    }
    exports2.TimelineAddEntryFromJSONTyped = TimelineAddEntryFromJSONTyped;
    function TimelineAddEntryToJSON(json) {
      return TimelineAddEntryToJSONTyped(json, false);
    }
    exports2.TimelineAddEntryToJSON = TimelineAddEntryToJSON;
    function TimelineAddEntryToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "content": (0, ContentUnion_1.ContentUnionToJSON)(value["content"]),
        "entryId": value["entryId"],
        "sortIndex": value["sortIndex"]
      };
    }
    exports2.TimelineAddEntryToJSONTyped = TimelineAddEntryToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineAddEntries.js
var require_TimelineAddEntries = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineAddEntries.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineAddEntriesToJSONTyped = exports2.TimelineAddEntriesToJSON = exports2.TimelineAddEntriesFromJSONTyped = exports2.TimelineAddEntriesFromJSON = exports2.instanceOfTimelineAddEntries = void 0;
    var InstructionType_1 = require_InstructionType();
    var TimelineAddEntry_1 = require_TimelineAddEntry();
    function instanceOfTimelineAddEntries(value) {
      if (!("entries" in value) || value["entries"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineAddEntries = instanceOfTimelineAddEntries;
    function TimelineAddEntriesFromJSON(json) {
      return TimelineAddEntriesFromJSONTyped(json, false);
    }
    exports2.TimelineAddEntriesFromJSON = TimelineAddEntriesFromJSON;
    function TimelineAddEntriesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entries": json["entries"].map(TimelineAddEntry_1.TimelineAddEntryFromJSON),
        "type": (0, InstructionType_1.InstructionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelineAddEntriesFromJSONTyped = TimelineAddEntriesFromJSONTyped;
    function TimelineAddEntriesToJSON(json) {
      return TimelineAddEntriesToJSONTyped(json, false);
    }
    exports2.TimelineAddEntriesToJSON = TimelineAddEntriesToJSON;
    function TimelineAddEntriesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entries": value["entries"].map(TimelineAddEntry_1.TimelineAddEntryToJSON),
        "type": (0, InstructionType_1.InstructionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelineAddEntriesToJSONTyped = TimelineAddEntriesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineAddToModule.js
var require_TimelineAddToModule = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineAddToModule.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineAddToModuleToJSONTyped = exports2.TimelineAddToModuleToJSON = exports2.TimelineAddToModuleFromJSONTyped = exports2.TimelineAddToModuleFromJSON = exports2.instanceOfTimelineAddToModule = void 0;
    var ModuleItem_1 = require_ModuleItem();
    var InstructionType_1 = require_InstructionType();
    function instanceOfTimelineAddToModule(value) {
      if (!("moduleEntryId" in value) || value["moduleEntryId"] === void 0)
        return false;
      if (!("moduleItems" in value) || value["moduleItems"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineAddToModule = instanceOfTimelineAddToModule;
    function TimelineAddToModuleFromJSON(json) {
      return TimelineAddToModuleFromJSONTyped(json, false);
    }
    exports2.TimelineAddToModuleFromJSON = TimelineAddToModuleFromJSON;
    function TimelineAddToModuleFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "moduleEntryId": json["moduleEntryId"],
        "moduleItems": json["moduleItems"].map(ModuleItem_1.ModuleItemFromJSON),
        "prepend": json["prepend"] == null ? void 0 : json["prepend"],
        "type": (0, InstructionType_1.InstructionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelineAddToModuleFromJSONTyped = TimelineAddToModuleFromJSONTyped;
    function TimelineAddToModuleToJSON(json) {
      return TimelineAddToModuleToJSONTyped(json, false);
    }
    exports2.TimelineAddToModuleToJSON = TimelineAddToModuleToJSON;
    function TimelineAddToModuleToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "moduleEntryId": value["moduleEntryId"],
        "moduleItems": value["moduleItems"].map(ModuleItem_1.ModuleItemToJSON),
        "prepend": value["prepend"],
        "type": (0, InstructionType_1.InstructionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelineAddToModuleToJSONTyped = TimelineAddToModuleToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineClearCache.js
var require_TimelineClearCache = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineClearCache.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineClearCacheToJSONTyped = exports2.TimelineClearCacheToJSON = exports2.TimelineClearCacheFromJSONTyped = exports2.TimelineClearCacheFromJSON = exports2.instanceOfTimelineClearCache = void 0;
    var InstructionType_1 = require_InstructionType();
    function instanceOfTimelineClearCache(value) {
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineClearCache = instanceOfTimelineClearCache;
    function TimelineClearCacheFromJSON(json) {
      return TimelineClearCacheFromJSONTyped(json, false);
    }
    exports2.TimelineClearCacheFromJSON = TimelineClearCacheFromJSON;
    function TimelineClearCacheFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "type": (0, InstructionType_1.InstructionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelineClearCacheFromJSONTyped = TimelineClearCacheFromJSONTyped;
    function TimelineClearCacheToJSON(json) {
      return TimelineClearCacheToJSONTyped(json, false);
    }
    exports2.TimelineClearCacheToJSON = TimelineClearCacheToJSON;
    function TimelineClearCacheToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "type": (0, InstructionType_1.InstructionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelineClearCacheToJSONTyped = TimelineClearCacheToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelinePinEntry.js
var require_TimelinePinEntry = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelinePinEntry.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelinePinEntryToJSONTyped = exports2.TimelinePinEntryToJSON = exports2.TimelinePinEntryFromJSONTyped = exports2.TimelinePinEntryFromJSON = exports2.instanceOfTimelinePinEntry = void 0;
    var InstructionType_1 = require_InstructionType();
    var TimelineAddEntry_1 = require_TimelineAddEntry();
    function instanceOfTimelinePinEntry(value) {
      if (!("entry" in value) || value["entry"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelinePinEntry = instanceOfTimelinePinEntry;
    function TimelinePinEntryFromJSON(json) {
      return TimelinePinEntryFromJSONTyped(json, false);
    }
    exports2.TimelinePinEntryFromJSON = TimelinePinEntryFromJSON;
    function TimelinePinEntryFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entry": (0, TimelineAddEntry_1.TimelineAddEntryFromJSON)(json["entry"]),
        "type": (0, InstructionType_1.InstructionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelinePinEntryFromJSONTyped = TimelinePinEntryFromJSONTyped;
    function TimelinePinEntryToJSON(json) {
      return TimelinePinEntryToJSONTyped(json, false);
    }
    exports2.TimelinePinEntryToJSON = TimelinePinEntryToJSON;
    function TimelinePinEntryToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entry": (0, TimelineAddEntry_1.TimelineAddEntryToJSON)(value["entry"]),
        "type": (0, InstructionType_1.InstructionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelinePinEntryToJSONTyped = TimelinePinEntryToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineReplaceEntry.js
var require_TimelineReplaceEntry = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineReplaceEntry.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineReplaceEntryToJSONTyped = exports2.TimelineReplaceEntryToJSON = exports2.TimelineReplaceEntryFromJSONTyped = exports2.TimelineReplaceEntryFromJSON = exports2.instanceOfTimelineReplaceEntry = void 0;
    var InstructionType_1 = require_InstructionType();
    var TimelineAddEntry_1 = require_TimelineAddEntry();
    function instanceOfTimelineReplaceEntry(value) {
      if (!("entry" in value) || value["entry"] === void 0)
        return false;
      if (!("entryIdToReplace" in value) || value["entryIdToReplace"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineReplaceEntry = instanceOfTimelineReplaceEntry;
    function TimelineReplaceEntryFromJSON(json) {
      return TimelineReplaceEntryFromJSONTyped(json, false);
    }
    exports2.TimelineReplaceEntryFromJSON = TimelineReplaceEntryFromJSON;
    function TimelineReplaceEntryFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entry": (0, TimelineAddEntry_1.TimelineAddEntryFromJSON)(json["entry"]),
        "entryIdToReplace": json["entry_id_to_replace"],
        "type": (0, InstructionType_1.InstructionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelineReplaceEntryFromJSONTyped = TimelineReplaceEntryFromJSONTyped;
    function TimelineReplaceEntryToJSON(json) {
      return TimelineReplaceEntryToJSONTyped(json, false);
    }
    exports2.TimelineReplaceEntryToJSON = TimelineReplaceEntryToJSON;
    function TimelineReplaceEntryToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entry": (0, TimelineAddEntry_1.TimelineAddEntryToJSON)(value["entry"]),
        "entry_id_to_replace": value["entryIdToReplace"],
        "type": (0, InstructionType_1.InstructionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelineReplaceEntryToJSONTyped = TimelineReplaceEntryToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineShowAlertRichText.js
var require_TimelineShowAlertRichText = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineShowAlertRichText.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineShowAlertRichTextToJSONTyped = exports2.TimelineShowAlertRichTextToJSON = exports2.TimelineShowAlertRichTextFromJSONTyped = exports2.TimelineShowAlertRichTextFromJSON = exports2.instanceOfTimelineShowAlertRichText = void 0;
    function instanceOfTimelineShowAlertRichText(value) {
      return true;
    }
    exports2.instanceOfTimelineShowAlertRichText = instanceOfTimelineShowAlertRichText;
    function TimelineShowAlertRichTextFromJSON(json) {
      return TimelineShowAlertRichTextFromJSONTyped(json, false);
    }
    exports2.TimelineShowAlertRichTextFromJSON = TimelineShowAlertRichTextFromJSON;
    function TimelineShowAlertRichTextFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entities": json["entities"] == null ? void 0 : json["entities"],
        "text": json["text"] == null ? void 0 : json["text"]
      };
    }
    exports2.TimelineShowAlertRichTextFromJSONTyped = TimelineShowAlertRichTextFromJSONTyped;
    function TimelineShowAlertRichTextToJSON(json) {
      return TimelineShowAlertRichTextToJSONTyped(json, false);
    }
    exports2.TimelineShowAlertRichTextToJSON = TimelineShowAlertRichTextToJSON;
    function TimelineShowAlertRichTextToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entities": value["entities"],
        "text": value["text"]
      };
    }
    exports2.TimelineShowAlertRichTextToJSONTyped = TimelineShowAlertRichTextToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineShowAlert.js
var require_TimelineShowAlert = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineShowAlert.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineShowAlertToJSONTyped = exports2.TimelineShowAlertToJSON = exports2.TimelineShowAlertFromJSONTyped = exports2.TimelineShowAlertFromJSON = exports2.instanceOfTimelineShowAlert = exports2.TimelineShowAlertDisplayLocationEnum = exports2.TimelineShowAlertAlertTypeEnum = void 0;
    var TimelineShowAlertRichText_1 = require_TimelineShowAlertRichText();
    var InstructionType_1 = require_InstructionType();
    var UserResults_1 = require_UserResults();
    exports2.TimelineShowAlertAlertTypeEnum = {
      NewTweets: "NewTweets"
    };
    exports2.TimelineShowAlertDisplayLocationEnum = {
      Top: "Top"
    };
    function instanceOfTimelineShowAlert(value) {
      if (!("richText" in value) || value["richText"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      if (!("usersResults" in value) || value["usersResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineShowAlert = instanceOfTimelineShowAlert;
    function TimelineShowAlertFromJSON(json) {
      return TimelineShowAlertFromJSONTyped(json, false);
    }
    exports2.TimelineShowAlertFromJSON = TimelineShowAlertFromJSON;
    function TimelineShowAlertFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "alertType": json["alertType"] == null ? void 0 : json["alertType"],
        "colorConfig": json["colorConfig"] == null ? void 0 : json["colorConfig"],
        "displayDurationMs": json["displayDurationMs"] == null ? void 0 : json["displayDurationMs"],
        "displayLocation": json["displayLocation"] == null ? void 0 : json["displayLocation"],
        "iconDisplayInfo": json["iconDisplayInfo"] == null ? void 0 : json["iconDisplayInfo"],
        "richText": (0, TimelineShowAlertRichText_1.TimelineShowAlertRichTextFromJSON)(json["richText"]),
        "triggerDelayMs": json["triggerDelayMs"] == null ? void 0 : json["triggerDelayMs"],
        "type": (0, InstructionType_1.InstructionTypeFromJSON)(json["type"]),
        "usersResults": json["usersResults"].map(UserResults_1.UserResultsFromJSON)
      };
    }
    exports2.TimelineShowAlertFromJSONTyped = TimelineShowAlertFromJSONTyped;
    function TimelineShowAlertToJSON(json) {
      return TimelineShowAlertToJSONTyped(json, false);
    }
    exports2.TimelineShowAlertToJSON = TimelineShowAlertToJSON;
    function TimelineShowAlertToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "alertType": value["alertType"],
        "colorConfig": value["colorConfig"],
        "displayDurationMs": value["displayDurationMs"],
        "displayLocation": value["displayLocation"],
        "iconDisplayInfo": value["iconDisplayInfo"],
        "richText": (0, TimelineShowAlertRichText_1.TimelineShowAlertRichTextToJSON)(value["richText"]),
        "triggerDelayMs": value["triggerDelayMs"],
        "type": (0, InstructionType_1.InstructionTypeToJSON)(value["type"]),
        "usersResults": value["usersResults"].map(UserResults_1.UserResultsToJSON)
      };
    }
    exports2.TimelineShowAlertToJSONTyped = TimelineShowAlertToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Callback.js
var require_Callback = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Callback.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CallbackToJSONTyped = exports2.CallbackToJSON = exports2.CallbackFromJSONTyped = exports2.CallbackFromJSON = exports2.instanceOfCallback = void 0;
    function instanceOfCallback(value) {
      if (!("endpoint" in value) || value["endpoint"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCallback = instanceOfCallback;
    function CallbackFromJSON(json) {
      return CallbackFromJSONTyped(json, false);
    }
    exports2.CallbackFromJSON = CallbackFromJSON;
    function CallbackFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "endpoint": json["endpoint"]
      };
    }
    exports2.CallbackFromJSONTyped = CallbackFromJSONTyped;
    function CallbackToJSON(json) {
      return CallbackToJSONTyped(json, false);
    }
    exports2.CallbackToJSON = CallbackToJSON;
    function CallbackToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "endpoint": value["endpoint"]
      };
    }
    exports2.CallbackToJSONTyped = CallbackToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TextEntityRef.js
var require_TextEntityRef = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TextEntityRef.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TextEntityRefToJSONTyped = exports2.TextEntityRefToJSON = exports2.TextEntityRefFromJSONTyped = exports2.TextEntityRefFromJSON = exports2.instanceOfTextEntityRef = exports2.TextEntityRefUrlTypeEnum = exports2.TextEntityRefTypeEnum = void 0;
    exports2.TextEntityRefTypeEnum = {
      TimelineUrl: "TimelineUrl"
    };
    exports2.TextEntityRefUrlTypeEnum = {
      ExternalUrl: "ExternalUrl"
    };
    function instanceOfTextEntityRef(value) {
      if (!("type" in value) || value["type"] === void 0)
        return false;
      if (!("url" in value) || value["url"] === void 0)
        return false;
      if (!("urlType" in value) || value["urlType"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTextEntityRef = instanceOfTextEntityRef;
    function TextEntityRefFromJSON(json) {
      return TextEntityRefFromJSONTyped(json, false);
    }
    exports2.TextEntityRefFromJSON = TextEntityRefFromJSON;
    function TextEntityRefFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "type": json["type"],
        "url": json["url"],
        "urlType": json["urlType"]
      };
    }
    exports2.TextEntityRefFromJSONTyped = TextEntityRefFromJSONTyped;
    function TextEntityRefToJSON(json) {
      return TextEntityRefToJSONTyped(json, false);
    }
    exports2.TextEntityRefToJSON = TextEntityRefToJSON;
    function TextEntityRefToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "type": value["type"],
        "url": value["url"],
        "urlType": value["urlType"]
      };
    }
    exports2.TextEntityRefToJSONTyped = TextEntityRefToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TextEntity.js
var require_TextEntity = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TextEntity.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TextEntityToJSONTyped = exports2.TextEntityToJSON = exports2.TextEntityFromJSONTyped = exports2.TextEntityFromJSON = exports2.instanceOfTextEntity = void 0;
    var TextEntityRef_1 = require_TextEntityRef();
    function instanceOfTextEntity(value) {
      if (!("fromIndex" in value) || value["fromIndex"] === void 0)
        return false;
      if (!("ref" in value) || value["ref"] === void 0)
        return false;
      if (!("toIndex" in value) || value["toIndex"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTextEntity = instanceOfTextEntity;
    function TextEntityFromJSON(json) {
      return TextEntityFromJSONTyped(json, false);
    }
    exports2.TextEntityFromJSON = TextEntityFromJSON;
    function TextEntityFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "fromIndex": json["fromIndex"],
        "ref": (0, TextEntityRef_1.TextEntityRefFromJSON)(json["ref"]),
        "toIndex": json["toIndex"]
      };
    }
    exports2.TextEntityFromJSONTyped = TextEntityFromJSONTyped;
    function TextEntityToJSON(json) {
      return TextEntityToJSONTyped(json, false);
    }
    exports2.TextEntityToJSON = TextEntityToJSON;
    function TextEntityToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "fromIndex": value["fromIndex"],
        "ref": (0, TextEntityRef_1.TextEntityRefToJSON)(value["ref"]),
        "toIndex": value["toIndex"]
      };
    }
    exports2.TextEntityToJSONTyped = TextEntityToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Text.js
var require_Text = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Text.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TextToJSONTyped = exports2.TextToJSON = exports2.TextFromJSONTyped = exports2.TextFromJSON = exports2.instanceOfText = void 0;
    var TextEntity_1 = require_TextEntity();
    function instanceOfText(value) {
      if (!("entities" in value) || value["entities"] === void 0)
        return false;
      if (!("text" in value) || value["text"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfText = instanceOfText;
    function TextFromJSON(json) {
      return TextFromJSONTyped(json, false);
    }
    exports2.TextFromJSON = TextFromJSON;
    function TextFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "entities": json["entities"].map(TextEntity_1.TextEntityFromJSON),
        "text": json["text"]
      };
    }
    exports2.TextFromJSONTyped = TextFromJSONTyped;
    function TextToJSON(json) {
      return TextToJSONTyped(json, false);
    }
    exports2.TextToJSON = TextToJSON;
    function TextToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "entities": value["entities"].map(TextEntity_1.TextEntityToJSON),
        "text": value["text"]
      };
    }
    exports2.TextToJSONTyped = TextToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineCoverBehaviorUrl.js
var require_TimelineCoverBehaviorUrl = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineCoverBehaviorUrl.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineCoverBehaviorUrlToJSONTyped = exports2.TimelineCoverBehaviorUrlToJSON = exports2.TimelineCoverBehaviorUrlFromJSONTyped = exports2.TimelineCoverBehaviorUrlFromJSON = exports2.instanceOfTimelineCoverBehaviorUrl = exports2.TimelineCoverBehaviorUrlUrlTypeEnum = void 0;
    exports2.TimelineCoverBehaviorUrlUrlTypeEnum = {
      ExternalUrl: "ExternalUrl"
    };
    function instanceOfTimelineCoverBehaviorUrl(value) {
      if (!("url" in value) || value["url"] === void 0)
        return false;
      if (!("urlType" in value) || value["urlType"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineCoverBehaviorUrl = instanceOfTimelineCoverBehaviorUrl;
    function TimelineCoverBehaviorUrlFromJSON(json) {
      return TimelineCoverBehaviorUrlFromJSONTyped(json, false);
    }
    exports2.TimelineCoverBehaviorUrlFromJSON = TimelineCoverBehaviorUrlFromJSON;
    function TimelineCoverBehaviorUrlFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "url": json["url"],
        "urlType": json["url_type"]
      };
    }
    exports2.TimelineCoverBehaviorUrlFromJSONTyped = TimelineCoverBehaviorUrlFromJSONTyped;
    function TimelineCoverBehaviorUrlToJSON(json) {
      return TimelineCoverBehaviorUrlToJSONTyped(json, false);
    }
    exports2.TimelineCoverBehaviorUrlToJSON = TimelineCoverBehaviorUrlToJSON;
    function TimelineCoverBehaviorUrlToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "url": value["url"],
        "url_type": value["urlType"]
      };
    }
    exports2.TimelineCoverBehaviorUrlToJSONTyped = TimelineCoverBehaviorUrlToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineCoverBehavior.js
var require_TimelineCoverBehavior = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineCoverBehavior.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineCoverBehaviorToJSONTyped = exports2.TimelineCoverBehaviorToJSON = exports2.TimelineCoverBehaviorFromJSONTyped = exports2.TimelineCoverBehaviorFromJSON = exports2.instanceOfTimelineCoverBehavior = exports2.TimelineCoverBehaviorTypeEnum = void 0;
    var TimelineCoverBehaviorUrl_1 = require_TimelineCoverBehaviorUrl();
    exports2.TimelineCoverBehaviorTypeEnum = {
      TimelineCoverBehaviorDismiss: "TimelineCoverBehaviorDismiss",
      TimelineCoverBehaviorNavigate: "TimelineCoverBehaviorNavigate"
    };
    function instanceOfTimelineCoverBehavior(value) {
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineCoverBehavior = instanceOfTimelineCoverBehavior;
    function TimelineCoverBehaviorFromJSON(json) {
      return TimelineCoverBehaviorFromJSONTyped(json, false);
    }
    exports2.TimelineCoverBehaviorFromJSON = TimelineCoverBehaviorFromJSON;
    function TimelineCoverBehaviorFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "type": json["type"],
        "url": json["url"] == null ? void 0 : (0, TimelineCoverBehaviorUrl_1.TimelineCoverBehaviorUrlFromJSON)(json["url"])
      };
    }
    exports2.TimelineCoverBehaviorFromJSONTyped = TimelineCoverBehaviorFromJSONTyped;
    function TimelineCoverBehaviorToJSON(json) {
      return TimelineCoverBehaviorToJSONTyped(json, false);
    }
    exports2.TimelineCoverBehaviorToJSON = TimelineCoverBehaviorToJSON;
    function TimelineCoverBehaviorToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "type": value["type"],
        "url": (0, TimelineCoverBehaviorUrl_1.TimelineCoverBehaviorUrlToJSON)(value["url"])
      };
    }
    exports2.TimelineCoverBehaviorToJSONTyped = TimelineCoverBehaviorToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CtaClientEventInfo.js
var require_CtaClientEventInfo = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CtaClientEventInfo.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CtaClientEventInfoToJSONTyped = exports2.CtaClientEventInfoToJSON = exports2.CtaClientEventInfoFromJSONTyped = exports2.CtaClientEventInfoFromJSON = exports2.instanceOfCtaClientEventInfo = exports2.CtaClientEventInfoActionEnum = void 0;
    exports2.CtaClientEventInfoActionEnum = {
      PrimaryCta: "primary_cta"
    };
    function instanceOfCtaClientEventInfo(value) {
      if (!("action" in value) || value["action"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCtaClientEventInfo = instanceOfCtaClientEventInfo;
    function CtaClientEventInfoFromJSON(json) {
      return CtaClientEventInfoFromJSONTyped(json, false);
    }
    exports2.CtaClientEventInfoFromJSON = CtaClientEventInfoFromJSON;
    function CtaClientEventInfoFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "action": json["action"]
      };
    }
    exports2.CtaClientEventInfoFromJSONTyped = CtaClientEventInfoFromJSONTyped;
    function CtaClientEventInfoToJSON(json) {
      return CtaClientEventInfoToJSONTyped(json, false);
    }
    exports2.CtaClientEventInfoToJSON = CtaClientEventInfoToJSON;
    function CtaClientEventInfoToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "action": value["action"]
      };
    }
    exports2.CtaClientEventInfoToJSONTyped = CtaClientEventInfoToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CoverCta.js
var require_CoverCta = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CoverCta.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CoverCtaToJSONTyped = exports2.CoverCtaToJSON = exports2.CoverCtaFromJSONTyped = exports2.CoverCtaFromJSON = exports2.instanceOfCoverCta = exports2.CoverCtaButtonStyleEnum = void 0;
    var TimelineCoverBehavior_1 = require_TimelineCoverBehavior();
    var Callback_1 = require_Callback();
    var CtaClientEventInfo_1 = require_CtaClientEventInfo();
    exports2.CoverCtaButtonStyleEnum = {
      Primary: "Primary"
    };
    function instanceOfCoverCta(value) {
      if (!("callbacks" in value) || value["callbacks"] === void 0)
        return false;
      if (!("clientEventInfo" in value) || value["clientEventInfo"] === void 0)
        return false;
      if (!("ctaBehavior" in value) || value["ctaBehavior"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCoverCta = instanceOfCoverCta;
    function CoverCtaFromJSON(json) {
      return CoverCtaFromJSONTyped(json, false);
    }
    exports2.CoverCtaFromJSON = CoverCtaFromJSON;
    function CoverCtaFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "text": json["Text"] == null ? void 0 : json["Text"],
        "buttonStyle": json["buttonStyle"] == null ? void 0 : json["buttonStyle"],
        "callbacks": json["callbacks"].map(Callback_1.CallbackFromJSON),
        "clientEventInfo": (0, CtaClientEventInfo_1.CtaClientEventInfoFromJSON)(json["clientEventInfo"]),
        "ctaBehavior": (0, TimelineCoverBehavior_1.TimelineCoverBehaviorFromJSON)(json["ctaBehavior"])
      };
    }
    exports2.CoverCtaFromJSONTyped = CoverCtaFromJSONTyped;
    function CoverCtaToJSON(json) {
      return CoverCtaToJSONTyped(json, false);
    }
    exports2.CoverCtaToJSON = CoverCtaToJSON;
    function CoverCtaToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "Text": value["text"],
        "buttonStyle": value["buttonStyle"],
        "callbacks": value["callbacks"].map(Callback_1.CallbackToJSON),
        "clientEventInfo": (0, CtaClientEventInfo_1.CtaClientEventInfoToJSON)(value["clientEventInfo"]),
        "ctaBehavior": (0, TimelineCoverBehavior_1.TimelineCoverBehaviorToJSON)(value["ctaBehavior"])
      };
    }
    exports2.CoverCtaToJSONTyped = CoverCtaToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineHalfCover.js
var require_TimelineHalfCover = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineHalfCover.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineHalfCoverToJSONTyped = exports2.TimelineHalfCoverToJSON = exports2.TimelineHalfCoverFromJSONTyped = exports2.TimelineHalfCoverFromJSON = exports2.instanceOfTimelineHalfCover = exports2.TimelineHalfCoverTypeEnum = exports2.TimelineHalfCoverHalfCoverDisplayTypeEnum = void 0;
    var Callback_1 = require_Callback();
    var Text_1 = require_Text();
    var CoverCta_1 = require_CoverCta();
    exports2.TimelineHalfCoverHalfCoverDisplayTypeEnum = {
      Cover: "Cover"
    };
    exports2.TimelineHalfCoverTypeEnum = {
      TimelineHalfCover: "TimelineHalfCover"
    };
    function instanceOfTimelineHalfCover(value) {
      if (!("dismissible" in value) || value["dismissible"] === void 0)
        return false;
      if (!("halfCoverDisplayType" in value) || value["halfCoverDisplayType"] === void 0)
        return false;
      if (!("impressionCallbacks" in value) || value["impressionCallbacks"] === void 0)
        return false;
      if (!("primaryCoverCta" in value) || value["primaryCoverCta"] === void 0)
        return false;
      if (!("primaryText" in value) || value["primaryText"] === void 0)
        return false;
      if (!("secondaryText" in value) || value["secondaryText"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineHalfCover = instanceOfTimelineHalfCover;
    function TimelineHalfCoverFromJSON(json) {
      return TimelineHalfCoverFromJSONTyped(json, false);
    }
    exports2.TimelineHalfCoverFromJSON = TimelineHalfCoverFromJSON;
    function TimelineHalfCoverFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "dismissible": json["dismissible"],
        "halfCoverDisplayType": json["halfCoverDisplayType"],
        "impressionCallbacks": json["impressionCallbacks"].map(Callback_1.CallbackFromJSON),
        "primaryCoverCta": (0, CoverCta_1.CoverCtaFromJSON)(json["primaryCoverCta"]),
        "primaryText": (0, Text_1.TextFromJSON)(json["primaryText"]),
        "secondaryText": (0, Text_1.TextFromJSON)(json["secondaryText"]),
        "type": json["type"]
      };
    }
    exports2.TimelineHalfCoverFromJSONTyped = TimelineHalfCoverFromJSONTyped;
    function TimelineHalfCoverToJSON(json) {
      return TimelineHalfCoverToJSONTyped(json, false);
    }
    exports2.TimelineHalfCoverToJSON = TimelineHalfCoverToJSON;
    function TimelineHalfCoverToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "dismissible": value["dismissible"],
        "halfCoverDisplayType": value["halfCoverDisplayType"],
        "impressionCallbacks": value["impressionCallbacks"].map(Callback_1.CallbackToJSON),
        "primaryCoverCta": (0, CoverCta_1.CoverCtaToJSON)(value["primaryCoverCta"]),
        "primaryText": (0, Text_1.TextToJSON)(value["primaryText"]),
        "secondaryText": (0, Text_1.TextToJSON)(value["secondaryText"]),
        "type": value["type"]
      };
    }
    exports2.TimelineHalfCoverToJSONTyped = TimelineHalfCoverToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineShowCover.js
var require_TimelineShowCover = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineShowCover.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineShowCoverToJSONTyped = exports2.TimelineShowCoverToJSON = exports2.TimelineShowCoverFromJSONTyped = exports2.TimelineShowCoverFromJSON = exports2.instanceOfTimelineShowCover = void 0;
    var InstructionType_1 = require_InstructionType();
    var ClientEventInfo_1 = require_ClientEventInfo();
    var TimelineHalfCover_1 = require_TimelineHalfCover();
    function instanceOfTimelineShowCover(value) {
      if (!("clientEventInfo" in value) || value["clientEventInfo"] === void 0)
        return false;
      if (!("cover" in value) || value["cover"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineShowCover = instanceOfTimelineShowCover;
    function TimelineShowCoverFromJSON(json) {
      return TimelineShowCoverFromJSONTyped(json, false);
    }
    exports2.TimelineShowCoverFromJSON = TimelineShowCoverFromJSON;
    function TimelineShowCoverFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "clientEventInfo": (0, ClientEventInfo_1.ClientEventInfoFromJSON)(json["clientEventInfo"]),
        "cover": (0, TimelineHalfCover_1.TimelineHalfCoverFromJSON)(json["cover"]),
        "type": (0, InstructionType_1.InstructionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelineShowCoverFromJSONTyped = TimelineShowCoverFromJSONTyped;
    function TimelineShowCoverToJSON(json) {
      return TimelineShowCoverToJSONTyped(json, false);
    }
    exports2.TimelineShowCoverToJSON = TimelineShowCoverToJSON;
    function TimelineShowCoverToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "clientEventInfo": (0, ClientEventInfo_1.ClientEventInfoToJSON)(value["clientEventInfo"]),
        "cover": (0, TimelineHalfCover_1.TimelineHalfCoverToJSON)(value["cover"]),
        "type": (0, InstructionType_1.InstructionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelineShowCoverToJSONTyped = TimelineShowCoverToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTerminateTimeline.js
var require_TimelineTerminateTimeline = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineTerminateTimeline.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineTerminateTimelineToJSONTyped = exports2.TimelineTerminateTimelineToJSON = exports2.TimelineTerminateTimelineFromJSONTyped = exports2.TimelineTerminateTimelineFromJSON = exports2.instanceOfTimelineTerminateTimeline = exports2.TimelineTerminateTimelineDirectionEnum = void 0;
    var InstructionType_1 = require_InstructionType();
    exports2.TimelineTerminateTimelineDirectionEnum = {
      Top: "Top",
      Bottom: "Bottom",
      TopAndBottom: "TopAndBottom"
    };
    function instanceOfTimelineTerminateTimeline(value) {
      if (!("direction" in value) || value["direction"] === void 0)
        return false;
      if (!("type" in value) || value["type"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineTerminateTimeline = instanceOfTimelineTerminateTimeline;
    function TimelineTerminateTimelineFromJSON(json) {
      return TimelineTerminateTimelineFromJSONTyped(json, false);
    }
    exports2.TimelineTerminateTimelineFromJSON = TimelineTerminateTimelineFromJSON;
    function TimelineTerminateTimelineFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "direction": json["direction"],
        "type": (0, InstructionType_1.InstructionTypeFromJSON)(json["type"])
      };
    }
    exports2.TimelineTerminateTimelineFromJSONTyped = TimelineTerminateTimelineFromJSONTyped;
    function TimelineTerminateTimelineToJSON(json) {
      return TimelineTerminateTimelineToJSONTyped(json, false);
    }
    exports2.TimelineTerminateTimelineToJSON = TimelineTerminateTimelineToJSON;
    function TimelineTerminateTimelineToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "direction": value["direction"],
        "type": (0, InstructionType_1.InstructionTypeToJSON)(value["type"])
      };
    }
    exports2.TimelineTerminateTimelineToJSONTyped = TimelineTerminateTimelineToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/InstructionUnion.js
var require_InstructionUnion = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/InstructionUnion.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.InstructionUnionToJSONTyped = exports2.InstructionUnionToJSON = exports2.InstructionUnionFromJSONTyped = exports2.InstructionUnionFromJSON = void 0;
    var TimelineAddEntries_1 = require_TimelineAddEntries();
    var TimelineAddToModule_1 = require_TimelineAddToModule();
    var TimelineClearCache_1 = require_TimelineClearCache();
    var TimelinePinEntry_1 = require_TimelinePinEntry();
    var TimelineReplaceEntry_1 = require_TimelineReplaceEntry();
    var TimelineShowAlert_1 = require_TimelineShowAlert();
    var TimelineShowCover_1 = require_TimelineShowCover();
    var TimelineTerminateTimeline_1 = require_TimelineTerminateTimeline();
    function InstructionUnionFromJSON(json) {
      return InstructionUnionFromJSONTyped(json, false);
    }
    exports2.InstructionUnionFromJSON = InstructionUnionFromJSON;
    function InstructionUnionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      switch (json["type"]) {
        case "TimelineAddEntries":
          return Object.assign({}, (0, TimelineAddEntries_1.TimelineAddEntriesFromJSONTyped)(json, true), { type: "TimelineAddEntries" });
        case "TimelineAddToModule":
          return Object.assign({}, (0, TimelineAddToModule_1.TimelineAddToModuleFromJSONTyped)(json, true), { type: "TimelineAddToModule" });
        case "TimelineClearCache":
          return Object.assign({}, (0, TimelineClearCache_1.TimelineClearCacheFromJSONTyped)(json, true), { type: "TimelineClearCache" });
        case "TimelinePinEntry":
          return Object.assign({}, (0, TimelinePinEntry_1.TimelinePinEntryFromJSONTyped)(json, true), { type: "TimelinePinEntry" });
        case "TimelineReplaceEntry":
          return Object.assign({}, (0, TimelineReplaceEntry_1.TimelineReplaceEntryFromJSONTyped)(json, true), { type: "TimelineReplaceEntry" });
        case "TimelineShowAlert":
          return Object.assign({}, (0, TimelineShowAlert_1.TimelineShowAlertFromJSONTyped)(json, true), { type: "TimelineShowAlert" });
        case "TimelineShowCover":
          return Object.assign({}, (0, TimelineShowCover_1.TimelineShowCoverFromJSONTyped)(json, true), { type: "TimelineShowCover" });
        case "TimelineTerminateTimeline":
          return Object.assign({}, (0, TimelineTerminateTimeline_1.TimelineTerminateTimelineFromJSONTyped)(json, true), { type: "TimelineTerminateTimeline" });
        default:
          throw new Error("No variant of InstructionUnion exists with 'type=".concat(json["type"], "'"));
      }
    }
    exports2.InstructionUnionFromJSONTyped = InstructionUnionFromJSONTyped;
    function InstructionUnionToJSON(json) {
      return InstructionUnionToJSONTyped(json, false);
    }
    exports2.InstructionUnionToJSON = InstructionUnionToJSON;
    function InstructionUnionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      switch (value["type"]) {
        case "TimelineAddEntries":
          return Object.assign({}, (0, TimelineAddEntries_1.TimelineAddEntriesToJSON)(value), { type: "TimelineAddEntries" });
        case "TimelineAddToModule":
          return Object.assign({}, (0, TimelineAddToModule_1.TimelineAddToModuleToJSON)(value), { type: "TimelineAddToModule" });
        case "TimelineClearCache":
          return Object.assign({}, (0, TimelineClearCache_1.TimelineClearCacheToJSON)(value), { type: "TimelineClearCache" });
        case "TimelinePinEntry":
          return Object.assign({}, (0, TimelinePinEntry_1.TimelinePinEntryToJSON)(value), { type: "TimelinePinEntry" });
        case "TimelineReplaceEntry":
          return Object.assign({}, (0, TimelineReplaceEntry_1.TimelineReplaceEntryToJSON)(value), { type: "TimelineReplaceEntry" });
        case "TimelineShowAlert":
          return Object.assign({}, (0, TimelineShowAlert_1.TimelineShowAlertToJSON)(value), { type: "TimelineShowAlert" });
        case "TimelineShowCover":
          return Object.assign({}, (0, TimelineShowCover_1.TimelineShowCoverToJSON)(value), { type: "TimelineShowCover" });
        case "TimelineTerminateTimeline":
          return Object.assign({}, (0, TimelineTerminateTimeline_1.TimelineTerminateTimelineToJSON)(value), { type: "TimelineTerminateTimeline" });
        default:
          throw new Error("No variant of InstructionUnion exists with 'type=".concat(value["type"], "'"));
      }
    }
    exports2.InstructionUnionToJSONTyped = InstructionUnionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Timeline.js
var require_Timeline = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Timeline.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineToJSONTyped = exports2.TimelineToJSON = exports2.TimelineFromJSONTyped = exports2.TimelineFromJSON = exports2.instanceOfTimeline = void 0;
    var InstructionUnion_1 = require_InstructionUnion();
    function instanceOfTimeline(value) {
      if (!("instructions" in value) || value["instructions"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimeline = instanceOfTimeline;
    function TimelineFromJSON(json) {
      return TimelineFromJSONTyped(json, false);
    }
    exports2.TimelineFromJSON = TimelineFromJSON;
    function TimelineFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "instructions": json["instructions"].map(InstructionUnion_1.InstructionUnionFromJSON),
        "metadata": json["metadata"] == null ? void 0 : json["metadata"],
        "responseObjects": json["responseObjects"] == null ? void 0 : json["responseObjects"]
      };
    }
    exports2.TimelineFromJSONTyped = TimelineFromJSONTyped;
    function TimelineToJSON(json) {
      return TimelineToJSONTyped(json, false);
    }
    exports2.TimelineToJSON = TimelineToJSON;
    function TimelineToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "instructions": value["instructions"].map(InstructionUnion_1.InstructionUnionToJSON),
        "metadata": value["metadata"],
        "responseObjects": value["responseObjects"]
      };
    }
    exports2.TimelineToJSONTyped = TimelineToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BookmarksTimeline.js
var require_BookmarksTimeline = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BookmarksTimeline.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BookmarksTimelineToJSONTyped = exports2.BookmarksTimelineToJSON = exports2.BookmarksTimelineFromJSONTyped = exports2.BookmarksTimelineFromJSON = exports2.instanceOfBookmarksTimeline = void 0;
    var Timeline_1 = require_Timeline();
    function instanceOfBookmarksTimeline(value) {
      if (!("timeline" in value) || value["timeline"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBookmarksTimeline = instanceOfBookmarksTimeline;
    function BookmarksTimelineFromJSON(json) {
      return BookmarksTimelineFromJSONTyped(json, false);
    }
    exports2.BookmarksTimelineFromJSON = BookmarksTimelineFromJSON;
    function BookmarksTimelineFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "timeline": (0, Timeline_1.TimelineFromJSON)(json["timeline"])
      };
    }
    exports2.BookmarksTimelineFromJSONTyped = BookmarksTimelineFromJSONTyped;
    function BookmarksTimelineToJSON(json) {
      return BookmarksTimelineToJSONTyped(json, false);
    }
    exports2.BookmarksTimelineToJSON = BookmarksTimelineToJSON;
    function BookmarksTimelineToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "timeline": (0, Timeline_1.TimelineToJSON)(value["timeline"])
      };
    }
    exports2.BookmarksTimelineToJSONTyped = BookmarksTimelineToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BookmarksResponseData.js
var require_BookmarksResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BookmarksResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BookmarksResponseDataToJSONTyped = exports2.BookmarksResponseDataToJSON = exports2.BookmarksResponseDataFromJSONTyped = exports2.BookmarksResponseDataFromJSON = exports2.instanceOfBookmarksResponseData = void 0;
    var BookmarksTimeline_1 = require_BookmarksTimeline();
    function instanceOfBookmarksResponseData(value) {
      if (!("bookmarkTimelineV2" in value) || value["bookmarkTimelineV2"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfBookmarksResponseData = instanceOfBookmarksResponseData;
    function BookmarksResponseDataFromJSON(json) {
      return BookmarksResponseDataFromJSONTyped(json, false);
    }
    exports2.BookmarksResponseDataFromJSON = BookmarksResponseDataFromJSON;
    function BookmarksResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "bookmarkTimelineV2": (0, BookmarksTimeline_1.BookmarksTimelineFromJSON)(json["bookmark_timeline_v2"])
      };
    }
    exports2.BookmarksResponseDataFromJSONTyped = BookmarksResponseDataFromJSONTyped;
    function BookmarksResponseDataToJSON(json) {
      return BookmarksResponseDataToJSONTyped(json, false);
    }
    exports2.BookmarksResponseDataToJSON = BookmarksResponseDataToJSON;
    function BookmarksResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "bookmark_timeline_v2": (0, BookmarksTimeline_1.BookmarksTimelineToJSON)(value["bookmarkTimelineV2"])
      };
    }
    exports2.BookmarksResponseDataToJSONTyped = BookmarksResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Tracing.js
var require_Tracing = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Tracing.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TracingToJSONTyped = exports2.TracingToJSON = exports2.TracingFromJSONTyped = exports2.TracingFromJSON = exports2.instanceOfTracing = void 0;
    function instanceOfTracing(value) {
      if (!("traceId" in value) || value["traceId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTracing = instanceOfTracing;
    function TracingFromJSON(json) {
      return TracingFromJSONTyped(json, false);
    }
    exports2.TracingFromJSON = TracingFromJSON;
    function TracingFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "traceId": json["trace_id"]
      };
    }
    exports2.TracingFromJSONTyped = TracingFromJSONTyped;
    function TracingToJSON(json) {
      return TracingToJSONTyped(json, false);
    }
    exports2.TracingToJSON = TracingToJSON;
    function TracingToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "trace_id": value["traceId"]
      };
    }
    exports2.TracingToJSONTyped = TracingToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ErrorExtensions.js
var require_ErrorExtensions = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ErrorExtensions.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ErrorExtensionsToJSONTyped = exports2.ErrorExtensionsToJSON = exports2.ErrorExtensionsFromJSONTyped = exports2.ErrorExtensionsFromJSON = exports2.instanceOfErrorExtensions = void 0;
    var Tracing_1 = require_Tracing();
    function instanceOfErrorExtensions(value) {
      if (!("code" in value) || value["code"] === void 0)
        return false;
      if (!("kind" in value) || value["kind"] === void 0)
        return false;
      if (!("name" in value) || value["name"] === void 0)
        return false;
      if (!("source" in value) || value["source"] === void 0)
        return false;
      if (!("tracing" in value) || value["tracing"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfErrorExtensions = instanceOfErrorExtensions;
    function ErrorExtensionsFromJSON(json) {
      return ErrorExtensionsFromJSONTyped(json, false);
    }
    exports2.ErrorExtensionsFromJSON = ErrorExtensionsFromJSON;
    function ErrorExtensionsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "code": json["code"],
        "kind": json["kind"],
        "name": json["name"],
        "retryAfter": json["retry_after"] == null ? void 0 : json["retry_after"],
        "source": json["source"],
        "tracing": (0, Tracing_1.TracingFromJSON)(json["tracing"])
      };
    }
    exports2.ErrorExtensionsFromJSONTyped = ErrorExtensionsFromJSONTyped;
    function ErrorExtensionsToJSON(json) {
      return ErrorExtensionsToJSONTyped(json, false);
    }
    exports2.ErrorExtensionsToJSON = ErrorExtensionsToJSON;
    function ErrorExtensionsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "code": value["code"],
        "kind": value["kind"],
        "name": value["name"],
        "retry_after": value["retryAfter"],
        "source": value["source"],
        "tracing": (0, Tracing_1.TracingToJSON)(value["tracing"])
      };
    }
    exports2.ErrorExtensionsToJSONTyped = ErrorExtensionsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Location.js
var require_Location = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Location.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.LocationToJSONTyped = exports2.LocationToJSON = exports2.LocationFromJSONTyped = exports2.LocationFromJSON = exports2.instanceOfLocation = void 0;
    function instanceOfLocation(value) {
      if (!("column" in value) || value["column"] === void 0)
        return false;
      if (!("line" in value) || value["line"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfLocation = instanceOfLocation;
    function LocationFromJSON(json) {
      return LocationFromJSONTyped(json, false);
    }
    exports2.LocationFromJSON = LocationFromJSON;
    function LocationFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "column": json["column"],
        "line": json["line"]
      };
    }
    exports2.LocationFromJSONTyped = LocationFromJSONTyped;
    function LocationToJSON(json) {
      return LocationToJSONTyped(json, false);
    }
    exports2.LocationToJSON = LocationToJSON;
    function LocationToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "column": value["column"],
        "line": value["line"]
      };
    }
    exports2.LocationToJSONTyped = LocationToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ErrorResponse.js
var require_ErrorResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ErrorResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ErrorResponseToJSONTyped = exports2.ErrorResponseToJSON = exports2.ErrorResponseFromJSONTyped = exports2.ErrorResponseFromJSON = exports2.instanceOfErrorResponse = void 0;
    var ErrorExtensions_1 = require_ErrorExtensions();
    var Tracing_1 = require_Tracing();
    var Location_1 = require_Location();
    function instanceOfErrorResponse(value) {
      if (!("code" in value) || value["code"] === void 0)
        return false;
      if (!("extensions" in value) || value["extensions"] === void 0)
        return false;
      if (!("kind" in value) || value["kind"] === void 0)
        return false;
      if (!("locations" in value) || value["locations"] === void 0)
        return false;
      if (!("message" in value) || value["message"] === void 0)
        return false;
      if (!("name" in value) || value["name"] === void 0)
        return false;
      if (!("path" in value) || value["path"] === void 0)
        return false;
      if (!("source" in value) || value["source"] === void 0)
        return false;
      if (!("tracing" in value) || value["tracing"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfErrorResponse = instanceOfErrorResponse;
    function ErrorResponseFromJSON(json) {
      return ErrorResponseFromJSONTyped(json, false);
    }
    exports2.ErrorResponseFromJSON = ErrorResponseFromJSON;
    function ErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "code": json["code"],
        "extensions": (0, ErrorExtensions_1.ErrorExtensionsFromJSON)(json["extensions"]),
        "kind": json["kind"],
        "locations": json["locations"].map(Location_1.LocationFromJSON),
        "message": json["message"],
        "name": json["name"],
        "path": json["path"],
        "retryAfter": json["retry_after"] == null ? void 0 : json["retry_after"],
        "source": json["source"],
        "tracing": (0, Tracing_1.TracingFromJSON)(json["tracing"])
      };
    }
    exports2.ErrorResponseFromJSONTyped = ErrorResponseFromJSONTyped;
    function ErrorResponseToJSON(json) {
      return ErrorResponseToJSONTyped(json, false);
    }
    exports2.ErrorResponseToJSON = ErrorResponseToJSON;
    function ErrorResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "code": value["code"],
        "extensions": (0, ErrorExtensions_1.ErrorExtensionsToJSON)(value["extensions"]),
        "kind": value["kind"],
        "locations": value["locations"].map(Location_1.LocationToJSON),
        "message": value["message"],
        "name": value["name"],
        "path": value["path"],
        "retry_after": value["retryAfter"],
        "source": value["source"],
        "tracing": (0, Tracing_1.TracingToJSON)(value["tracing"])
      };
    }
    exports2.ErrorResponseToJSONTyped = ErrorResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BookmarksResponse.js
var require_BookmarksResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/BookmarksResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.BookmarksResponseToJSONTyped = exports2.BookmarksResponseToJSON = exports2.BookmarksResponseFromJSONTyped = exports2.BookmarksResponseFromJSON = exports2.instanceOfBookmarksResponse = void 0;
    var BookmarksResponseData_1 = require_BookmarksResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfBookmarksResponse(value) {
      return true;
    }
    exports2.instanceOfBookmarksResponse = instanceOfBookmarksResponse;
    function BookmarksResponseFromJSON(json) {
      return BookmarksResponseFromJSONTyped(json, false);
    }
    exports2.BookmarksResponseFromJSON = BookmarksResponseFromJSON;
    function BookmarksResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": json["data"] == null ? void 0 : (0, BookmarksResponseData_1.BookmarksResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.BookmarksResponseFromJSONTyped = BookmarksResponseFromJSONTyped;
    function BookmarksResponseToJSON(json) {
      return BookmarksResponseToJSONTyped(json, false);
    }
    exports2.BookmarksResponseToJSON = BookmarksResponseToJSON;
    function BookmarksResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, BookmarksResponseData_1.BookmarksResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.BookmarksResponseToJSONTyped = BookmarksResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunitiesActions.js
var require_CommunitiesActions = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CommunitiesActions.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CommunitiesActionsToJSONTyped = exports2.CommunitiesActionsToJSON = exports2.CommunitiesActionsFromJSONTyped = exports2.CommunitiesActionsFromJSON = exports2.instanceOfCommunitiesActions = void 0;
    function instanceOfCommunitiesActions(value) {
      if (!("create" in value) || value["create"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCommunitiesActions = instanceOfCommunitiesActions;
    function CommunitiesActionsFromJSON(json) {
      return CommunitiesActionsFromJSONTyped(json, false);
    }
    exports2.CommunitiesActionsFromJSON = CommunitiesActionsFromJSON;
    function CommunitiesActionsFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "create": json["create"]
      };
    }
    exports2.CommunitiesActionsFromJSONTyped = CommunitiesActionsFromJSONTyped;
    function CommunitiesActionsToJSON(json) {
      return CommunitiesActionsToJSONTyped(json, false);
    }
    exports2.CommunitiesActionsToJSON = CommunitiesActionsToJSON;
    function CommunitiesActionsToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "create": value["create"]
      };
    }
    exports2.CommunitiesActionsToJSONTyped = CommunitiesActionsToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ConversationControl.js
var require_ConversationControl = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ConversationControl.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ConversationControlToJSONTyped = exports2.ConversationControlToJSON = exports2.ConversationControlFromJSONTyped = exports2.ConversationControlFromJSON = exports2.instanceOfConversationControl = exports2.ConversationControlModeEnum = void 0;
    exports2.ConversationControlModeEnum = {
      Community: "Community",
      Verified: "Verified",
      ByInvitation: "ByInvitation"
    };
    function instanceOfConversationControl(value) {
      if (!("mode" in value) || value["mode"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfConversationControl = instanceOfConversationControl;
    function ConversationControlFromJSON(json) {
      return ConversationControlFromJSONTyped(json, false);
    }
    exports2.ConversationControlFromJSON = ConversationControlFromJSON;
    function ConversationControlFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "mode": json["mode"]
      };
    }
    exports2.ConversationControlFromJSONTyped = ConversationControlFromJSONTyped;
    function ConversationControlToJSON(json) {
      return ConversationControlToJSONTyped(json, false);
    }
    exports2.ConversationControlToJSON = ConversationControlToJSON;
    function ConversationControlToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "mode": value["mode"]
      };
    }
    exports2.ConversationControlToJSONTyped = ConversationControlToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateBookmarkResponseData.js
var require_CreateBookmarkResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateBookmarkResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateBookmarkResponseDataToJSONTyped = exports2.CreateBookmarkResponseDataToJSON = exports2.CreateBookmarkResponseDataFromJSONTyped = exports2.CreateBookmarkResponseDataFromJSON = exports2.instanceOfCreateBookmarkResponseData = void 0;
    function instanceOfCreateBookmarkResponseData(value) {
      return true;
    }
    exports2.instanceOfCreateBookmarkResponseData = instanceOfCreateBookmarkResponseData;
    function CreateBookmarkResponseDataFromJSON(json) {
      return CreateBookmarkResponseDataFromJSONTyped(json, false);
    }
    exports2.CreateBookmarkResponseDataFromJSON = CreateBookmarkResponseDataFromJSON;
    function CreateBookmarkResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "tweetBookmarkPut": json["tweet_bookmark_put"] == null ? void 0 : json["tweet_bookmark_put"]
      };
    }
    exports2.CreateBookmarkResponseDataFromJSONTyped = CreateBookmarkResponseDataFromJSONTyped;
    function CreateBookmarkResponseDataToJSON(json) {
      return CreateBookmarkResponseDataToJSONTyped(json, false);
    }
    exports2.CreateBookmarkResponseDataToJSON = CreateBookmarkResponseDataToJSON;
    function CreateBookmarkResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "tweet_bookmark_put": value["tweetBookmarkPut"]
      };
    }
    exports2.CreateBookmarkResponseDataToJSONTyped = CreateBookmarkResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateBookmarkResponse.js
var require_CreateBookmarkResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateBookmarkResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateBookmarkResponseToJSONTyped = exports2.CreateBookmarkResponseToJSON = exports2.CreateBookmarkResponseFromJSONTyped = exports2.CreateBookmarkResponseFromJSON = exports2.instanceOfCreateBookmarkResponse = void 0;
    var CreateBookmarkResponseData_1 = require_CreateBookmarkResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfCreateBookmarkResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCreateBookmarkResponse = instanceOfCreateBookmarkResponse;
    function CreateBookmarkResponseFromJSON(json) {
      return CreateBookmarkResponseFromJSONTyped(json, false);
    }
    exports2.CreateBookmarkResponseFromJSON = CreateBookmarkResponseFromJSON;
    function CreateBookmarkResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, CreateBookmarkResponseData_1.CreateBookmarkResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.CreateBookmarkResponseFromJSONTyped = CreateBookmarkResponseFromJSONTyped;
    function CreateBookmarkResponseToJSON(json) {
      return CreateBookmarkResponseToJSONTyped(json, false);
    }
    exports2.CreateBookmarkResponseToJSON = CreateBookmarkResponseToJSON;
    function CreateBookmarkResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, CreateBookmarkResponseData_1.CreateBookmarkResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.CreateBookmarkResponseToJSONTyped = CreateBookmarkResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/RetweetLegacy.js
var require_RetweetLegacy = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/RetweetLegacy.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.RetweetLegacyToJSONTyped = exports2.RetweetLegacyToJSON = exports2.RetweetLegacyFromJSONTyped = exports2.RetweetLegacyFromJSON = exports2.instanceOfRetweetLegacy = void 0;
    function instanceOfRetweetLegacy(value) {
      if (!("fullText" in value) || value["fullText"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfRetweetLegacy = instanceOfRetweetLegacy;
    function RetweetLegacyFromJSON(json) {
      return RetweetLegacyFromJSONTyped(json, false);
    }
    exports2.RetweetLegacyFromJSON = RetweetLegacyFromJSON;
    function RetweetLegacyFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "fullText": json["full_text"]
      };
    }
    exports2.RetweetLegacyFromJSONTyped = RetweetLegacyFromJSONTyped;
    function RetweetLegacyToJSON(json) {
      return RetweetLegacyToJSONTyped(json, false);
    }
    exports2.RetweetLegacyToJSON = RetweetLegacyToJSON;
    function RetweetLegacyToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "full_text": value["fullText"]
      };
    }
    exports2.RetweetLegacyToJSONTyped = RetweetLegacyToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Retweet.js
var require_Retweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Retweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.RetweetToJSONTyped = exports2.RetweetToJSON = exports2.RetweetFromJSONTyped = exports2.RetweetFromJSON = exports2.instanceOfRetweet = void 0;
    var RetweetLegacy_1 = require_RetweetLegacy();
    function instanceOfRetweet(value) {
      if (!("legacy" in value) || value["legacy"] === void 0)
        return false;
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfRetweet = instanceOfRetweet;
    function RetweetFromJSON(json) {
      return RetweetFromJSONTyped(json, false);
    }
    exports2.RetweetFromJSON = RetweetFromJSON;
    function RetweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "legacy": (0, RetweetLegacy_1.RetweetLegacyFromJSON)(json["legacy"]),
        "restId": json["rest_id"]
      };
    }
    exports2.RetweetFromJSONTyped = RetweetFromJSONTyped;
    function RetweetToJSON(json) {
      return RetweetToJSONTyped(json, false);
    }
    exports2.RetweetToJSON = RetweetToJSON;
    function RetweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "legacy": (0, RetweetLegacy_1.RetweetLegacyToJSON)(value["legacy"]),
        "rest_id": value["restId"]
      };
    }
    exports2.RetweetToJSONTyped = RetweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateRetweet.js
var require_CreateRetweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateRetweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateRetweetToJSONTyped = exports2.CreateRetweetToJSON = exports2.CreateRetweetFromJSONTyped = exports2.CreateRetweetFromJSON = exports2.instanceOfCreateRetweet = void 0;
    var Retweet_1 = require_Retweet();
    function instanceOfCreateRetweet(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCreateRetweet = instanceOfCreateRetweet;
    function CreateRetweetFromJSON(json) {
      return CreateRetweetFromJSONTyped(json, false);
    }
    exports2.CreateRetweetFromJSON = CreateRetweetFromJSON;
    function CreateRetweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, Retweet_1.RetweetFromJSON)(json["result"])
      };
    }
    exports2.CreateRetweetFromJSONTyped = CreateRetweetFromJSONTyped;
    function CreateRetweetToJSON(json) {
      return CreateRetweetToJSONTyped(json, false);
    }
    exports2.CreateRetweetToJSON = CreateRetweetToJSON;
    function CreateRetweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, Retweet_1.RetweetToJSON)(value["result"])
      };
    }
    exports2.CreateRetweetToJSONTyped = CreateRetweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateRetweetResponseResult.js
var require_CreateRetweetResponseResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateRetweetResponseResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateRetweetResponseResultToJSONTyped = exports2.CreateRetweetResponseResultToJSON = exports2.CreateRetweetResponseResultFromJSONTyped = exports2.CreateRetweetResponseResultFromJSON = exports2.instanceOfCreateRetweetResponseResult = void 0;
    var CreateRetweet_1 = require_CreateRetweet();
    function instanceOfCreateRetweetResponseResult(value) {
      if (!("retweetResults" in value) || value["retweetResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCreateRetweetResponseResult = instanceOfCreateRetweetResponseResult;
    function CreateRetweetResponseResultFromJSON(json) {
      return CreateRetweetResponseResultFromJSONTyped(json, false);
    }
    exports2.CreateRetweetResponseResultFromJSON = CreateRetweetResponseResultFromJSON;
    function CreateRetweetResponseResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "retweetResults": (0, CreateRetweet_1.CreateRetweetFromJSON)(json["retweet_results"])
      };
    }
    exports2.CreateRetweetResponseResultFromJSONTyped = CreateRetweetResponseResultFromJSONTyped;
    function CreateRetweetResponseResultToJSON(json) {
      return CreateRetweetResponseResultToJSONTyped(json, false);
    }
    exports2.CreateRetweetResponseResultToJSON = CreateRetweetResponseResultToJSON;
    function CreateRetweetResponseResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "retweet_results": (0, CreateRetweet_1.CreateRetweetToJSON)(value["retweetResults"])
      };
    }
    exports2.CreateRetweetResponseResultToJSONTyped = CreateRetweetResponseResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateRetweetResponseData.js
var require_CreateRetweetResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateRetweetResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateRetweetResponseDataToJSONTyped = exports2.CreateRetweetResponseDataToJSON = exports2.CreateRetweetResponseDataFromJSONTyped = exports2.CreateRetweetResponseDataFromJSON = exports2.instanceOfCreateRetweetResponseData = void 0;
    var CreateRetweetResponseResult_1 = require_CreateRetweetResponseResult();
    function instanceOfCreateRetweetResponseData(value) {
      return true;
    }
    exports2.instanceOfCreateRetweetResponseData = instanceOfCreateRetweetResponseData;
    function CreateRetweetResponseDataFromJSON(json) {
      return CreateRetweetResponseDataFromJSONTyped(json, false);
    }
    exports2.CreateRetweetResponseDataFromJSON = CreateRetweetResponseDataFromJSON;
    function CreateRetweetResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "createRetweet": json["create_retweet"] == null ? void 0 : (0, CreateRetweetResponseResult_1.CreateRetweetResponseResultFromJSON)(json["create_retweet"])
      };
    }
    exports2.CreateRetweetResponseDataFromJSONTyped = CreateRetweetResponseDataFromJSONTyped;
    function CreateRetweetResponseDataToJSON(json) {
      return CreateRetweetResponseDataToJSONTyped(json, false);
    }
    exports2.CreateRetweetResponseDataToJSON = CreateRetweetResponseDataToJSON;
    function CreateRetweetResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "create_retweet": (0, CreateRetweetResponseResult_1.CreateRetweetResponseResultToJSON)(value["createRetweet"])
      };
    }
    exports2.CreateRetweetResponseDataToJSONTyped = CreateRetweetResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateRetweetResponse.js
var require_CreateRetweetResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateRetweetResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateRetweetResponseToJSONTyped = exports2.CreateRetweetResponseToJSON = exports2.CreateRetweetResponseFromJSONTyped = exports2.CreateRetweetResponseFromJSON = exports2.instanceOfCreateRetweetResponse = void 0;
    var CreateRetweetResponseData_1 = require_CreateRetweetResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfCreateRetweetResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCreateRetweetResponse = instanceOfCreateRetweetResponse;
    function CreateRetweetResponseFromJSON(json) {
      return CreateRetweetResponseFromJSONTyped(json, false);
    }
    exports2.CreateRetweetResponseFromJSON = CreateRetweetResponseFromJSON;
    function CreateRetweetResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, CreateRetweetResponseData_1.CreateRetweetResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.CreateRetweetResponseFromJSONTyped = CreateRetweetResponseFromJSONTyped;
    function CreateRetweetResponseToJSON(json) {
      return CreateRetweetResponseToJSONTyped(json, false);
    }
    exports2.CreateRetweetResponseToJSON = CreateRetweetResponseToJSON;
    function CreateRetweetResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, CreateRetweetResponseData_1.CreateRetweetResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.CreateRetweetResponseToJSONTyped = CreateRetweetResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateTweet.js
var require_CreateTweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateTweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateTweetToJSONTyped = exports2.CreateTweetToJSON = exports2.CreateTweetFromJSONTyped = exports2.CreateTweetFromJSON = exports2.instanceOfCreateTweet = void 0;
    var Tweet_1 = require_Tweet();
    function instanceOfCreateTweet(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCreateTweet = instanceOfCreateTweet;
    function CreateTweetFromJSON(json) {
      return CreateTweetFromJSONTyped(json, false);
    }
    exports2.CreateTweetFromJSON = CreateTweetFromJSON;
    function CreateTweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, Tweet_1.TweetFromJSON)(json["result"])
      };
    }
    exports2.CreateTweetFromJSONTyped = CreateTweetFromJSONTyped;
    function CreateTweetToJSON(json) {
      return CreateTweetToJSONTyped(json, false);
    }
    exports2.CreateTweetToJSON = CreateTweetToJSON;
    function CreateTweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, Tweet_1.TweetToJSON)(value["result"])
      };
    }
    exports2.CreateTweetToJSONTyped = CreateTweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateTweetResponseResult.js
var require_CreateTweetResponseResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateTweetResponseResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateTweetResponseResultToJSONTyped = exports2.CreateTweetResponseResultToJSON = exports2.CreateTweetResponseResultFromJSONTyped = exports2.CreateTweetResponseResultFromJSON = exports2.instanceOfCreateTweetResponseResult = void 0;
    var CreateTweet_1 = require_CreateTweet();
    function instanceOfCreateTweetResponseResult(value) {
      if (!("tweetResults" in value) || value["tweetResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCreateTweetResponseResult = instanceOfCreateTweetResponseResult;
    function CreateTweetResponseResultFromJSON(json) {
      return CreateTweetResponseResultFromJSONTyped(json, false);
    }
    exports2.CreateTweetResponseResultFromJSON = CreateTweetResponseResultFromJSON;
    function CreateTweetResponseResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "tweetResults": (0, CreateTweet_1.CreateTweetFromJSON)(json["tweet_results"])
      };
    }
    exports2.CreateTweetResponseResultFromJSONTyped = CreateTweetResponseResultFromJSONTyped;
    function CreateTweetResponseResultToJSON(json) {
      return CreateTweetResponseResultToJSONTyped(json, false);
    }
    exports2.CreateTweetResponseResultToJSON = CreateTweetResponseResultToJSON;
    function CreateTweetResponseResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "tweet_results": (0, CreateTweet_1.CreateTweetToJSON)(value["tweetResults"])
      };
    }
    exports2.CreateTweetResponseResultToJSONTyped = CreateTweetResponseResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateTweetResponseData.js
var require_CreateTweetResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateTweetResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateTweetResponseDataToJSONTyped = exports2.CreateTweetResponseDataToJSON = exports2.CreateTweetResponseDataFromJSONTyped = exports2.CreateTweetResponseDataFromJSON = exports2.instanceOfCreateTweetResponseData = void 0;
    var CreateTweetResponseResult_1 = require_CreateTweetResponseResult();
    function instanceOfCreateTweetResponseData(value) {
      return true;
    }
    exports2.instanceOfCreateTweetResponseData = instanceOfCreateTweetResponseData;
    function CreateTweetResponseDataFromJSON(json) {
      return CreateTweetResponseDataFromJSONTyped(json, false);
    }
    exports2.CreateTweetResponseDataFromJSON = CreateTweetResponseDataFromJSON;
    function CreateTweetResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "createTweet": json["create_tweet"] == null ? void 0 : (0, CreateTweetResponseResult_1.CreateTweetResponseResultFromJSON)(json["create_tweet"])
      };
    }
    exports2.CreateTweetResponseDataFromJSONTyped = CreateTweetResponseDataFromJSONTyped;
    function CreateTweetResponseDataToJSON(json) {
      return CreateTweetResponseDataToJSONTyped(json, false);
    }
    exports2.CreateTweetResponseDataToJSON = CreateTweetResponseDataToJSON;
    function CreateTweetResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "create_tweet": (0, CreateTweetResponseResult_1.CreateTweetResponseResultToJSON)(value["createTweet"])
      };
    }
    exports2.CreateTweetResponseDataToJSONTyped = CreateTweetResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateTweetResponse.js
var require_CreateTweetResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/CreateTweetResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CreateTweetResponseToJSONTyped = exports2.CreateTweetResponseToJSON = exports2.CreateTweetResponseFromJSONTyped = exports2.CreateTweetResponseFromJSON = exports2.instanceOfCreateTweetResponse = void 0;
    var CreateTweetResponseData_1 = require_CreateTweetResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfCreateTweetResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfCreateTweetResponse = instanceOfCreateTweetResponse;
    function CreateTweetResponseFromJSON(json) {
      return CreateTweetResponseFromJSONTyped(json, false);
    }
    exports2.CreateTweetResponseFromJSON = CreateTweetResponseFromJSON;
    function CreateTweetResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, CreateTweetResponseData_1.CreateTweetResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.CreateTweetResponseFromJSONTyped = CreateTweetResponseFromJSONTyped;
    function CreateTweetResponseToJSON(json) {
      return CreateTweetResponseToJSONTyped(json, false);
    }
    exports2.CreateTweetResponseToJSON = CreateTweetResponseToJSON;
    function CreateTweetResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, CreateTweetResponseData_1.CreateTweetResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.CreateTweetResponseToJSONTyped = CreateTweetResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteBookmarkResponseData.js
var require_DeleteBookmarkResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteBookmarkResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteBookmarkResponseDataToJSONTyped = exports2.DeleteBookmarkResponseDataToJSON = exports2.DeleteBookmarkResponseDataFromJSONTyped = exports2.DeleteBookmarkResponseDataFromJSON = exports2.instanceOfDeleteBookmarkResponseData = void 0;
    function instanceOfDeleteBookmarkResponseData(value) {
      return true;
    }
    exports2.instanceOfDeleteBookmarkResponseData = instanceOfDeleteBookmarkResponseData;
    function DeleteBookmarkResponseDataFromJSON(json) {
      return DeleteBookmarkResponseDataFromJSONTyped(json, false);
    }
    exports2.DeleteBookmarkResponseDataFromJSON = DeleteBookmarkResponseDataFromJSON;
    function DeleteBookmarkResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "tweetBookmarkDelete": json["tweet_bookmark_delete"] == null ? void 0 : json["tweet_bookmark_delete"]
      };
    }
    exports2.DeleteBookmarkResponseDataFromJSONTyped = DeleteBookmarkResponseDataFromJSONTyped;
    function DeleteBookmarkResponseDataToJSON(json) {
      return DeleteBookmarkResponseDataToJSONTyped(json, false);
    }
    exports2.DeleteBookmarkResponseDataToJSON = DeleteBookmarkResponseDataToJSON;
    function DeleteBookmarkResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "tweet_bookmark_delete": value["tweetBookmarkDelete"]
      };
    }
    exports2.DeleteBookmarkResponseDataToJSONTyped = DeleteBookmarkResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteBookmarkResponse.js
var require_DeleteBookmarkResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteBookmarkResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteBookmarkResponseToJSONTyped = exports2.DeleteBookmarkResponseToJSON = exports2.DeleteBookmarkResponseFromJSONTyped = exports2.DeleteBookmarkResponseFromJSON = exports2.instanceOfDeleteBookmarkResponse = void 0;
    var DeleteBookmarkResponseData_1 = require_DeleteBookmarkResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfDeleteBookmarkResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfDeleteBookmarkResponse = instanceOfDeleteBookmarkResponse;
    function DeleteBookmarkResponseFromJSON(json) {
      return DeleteBookmarkResponseFromJSONTyped(json, false);
    }
    exports2.DeleteBookmarkResponseFromJSON = DeleteBookmarkResponseFromJSON;
    function DeleteBookmarkResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, DeleteBookmarkResponseData_1.DeleteBookmarkResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.DeleteBookmarkResponseFromJSONTyped = DeleteBookmarkResponseFromJSONTyped;
    function DeleteBookmarkResponseToJSON(json) {
      return DeleteBookmarkResponseToJSONTyped(json, false);
    }
    exports2.DeleteBookmarkResponseToJSON = DeleteBookmarkResponseToJSON;
    function DeleteBookmarkResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, DeleteBookmarkResponseData_1.DeleteBookmarkResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.DeleteBookmarkResponseToJSONTyped = DeleteBookmarkResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteRetweet.js
var require_DeleteRetweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteRetweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteRetweetToJSONTyped = exports2.DeleteRetweetToJSON = exports2.DeleteRetweetFromJSONTyped = exports2.DeleteRetweetFromJSON = exports2.instanceOfDeleteRetweet = void 0;
    var Retweet_1 = require_Retweet();
    function instanceOfDeleteRetweet(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfDeleteRetweet = instanceOfDeleteRetweet;
    function DeleteRetweetFromJSON(json) {
      return DeleteRetweetFromJSONTyped(json, false);
    }
    exports2.DeleteRetweetFromJSON = DeleteRetweetFromJSON;
    function DeleteRetweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": json["result"].map(Retweet_1.RetweetFromJSON)
      };
    }
    exports2.DeleteRetweetFromJSONTyped = DeleteRetweetFromJSONTyped;
    function DeleteRetweetToJSON(json) {
      return DeleteRetweetToJSONTyped(json, false);
    }
    exports2.DeleteRetweetToJSON = DeleteRetweetToJSON;
    function DeleteRetweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": value["result"].map(Retweet_1.RetweetToJSON)
      };
    }
    exports2.DeleteRetweetToJSONTyped = DeleteRetweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteRetweetResponseResult.js
var require_DeleteRetweetResponseResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteRetweetResponseResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteRetweetResponseResultToJSONTyped = exports2.DeleteRetweetResponseResultToJSON = exports2.DeleteRetweetResponseResultFromJSONTyped = exports2.DeleteRetweetResponseResultFromJSON = exports2.instanceOfDeleteRetweetResponseResult = void 0;
    var DeleteRetweet_1 = require_DeleteRetweet();
    function instanceOfDeleteRetweetResponseResult(value) {
      return true;
    }
    exports2.instanceOfDeleteRetweetResponseResult = instanceOfDeleteRetweetResponseResult;
    function DeleteRetweetResponseResultFromJSON(json) {
      return DeleteRetweetResponseResultFromJSONTyped(json, false);
    }
    exports2.DeleteRetweetResponseResultFromJSON = DeleteRetweetResponseResultFromJSON;
    function DeleteRetweetResponseResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "retweetResults": json["retweet_results"] == null ? void 0 : (0, DeleteRetweet_1.DeleteRetweetFromJSON)(json["retweet_results"])
      };
    }
    exports2.DeleteRetweetResponseResultFromJSONTyped = DeleteRetweetResponseResultFromJSONTyped;
    function DeleteRetweetResponseResultToJSON(json) {
      return DeleteRetweetResponseResultToJSONTyped(json, false);
    }
    exports2.DeleteRetweetResponseResultToJSON = DeleteRetweetResponseResultToJSON;
    function DeleteRetweetResponseResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "retweet_results": (0, DeleteRetweet_1.DeleteRetweetToJSON)(value["retweetResults"])
      };
    }
    exports2.DeleteRetweetResponseResultToJSONTyped = DeleteRetweetResponseResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteRetweetResponseData.js
var require_DeleteRetweetResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteRetweetResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteRetweetResponseDataToJSONTyped = exports2.DeleteRetweetResponseDataToJSON = exports2.DeleteRetweetResponseDataFromJSONTyped = exports2.DeleteRetweetResponseDataFromJSON = exports2.instanceOfDeleteRetweetResponseData = void 0;
    var DeleteRetweetResponseResult_1 = require_DeleteRetweetResponseResult();
    function instanceOfDeleteRetweetResponseData(value) {
      return true;
    }
    exports2.instanceOfDeleteRetweetResponseData = instanceOfDeleteRetweetResponseData;
    function DeleteRetweetResponseDataFromJSON(json) {
      return DeleteRetweetResponseDataFromJSONTyped(json, false);
    }
    exports2.DeleteRetweetResponseDataFromJSON = DeleteRetweetResponseDataFromJSON;
    function DeleteRetweetResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "createRetweet": json["create_retweet"] == null ? void 0 : (0, DeleteRetweetResponseResult_1.DeleteRetweetResponseResultFromJSON)(json["create_retweet"])
      };
    }
    exports2.DeleteRetweetResponseDataFromJSONTyped = DeleteRetweetResponseDataFromJSONTyped;
    function DeleteRetweetResponseDataToJSON(json) {
      return DeleteRetweetResponseDataToJSONTyped(json, false);
    }
    exports2.DeleteRetweetResponseDataToJSON = DeleteRetweetResponseDataToJSON;
    function DeleteRetweetResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "create_retweet": (0, DeleteRetweetResponseResult_1.DeleteRetweetResponseResultToJSON)(value["createRetweet"])
      };
    }
    exports2.DeleteRetweetResponseDataToJSONTyped = DeleteRetweetResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteRetweetResponse.js
var require_DeleteRetweetResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteRetweetResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteRetweetResponseToJSONTyped = exports2.DeleteRetweetResponseToJSON = exports2.DeleteRetweetResponseFromJSONTyped = exports2.DeleteRetweetResponseFromJSON = exports2.instanceOfDeleteRetweetResponse = void 0;
    var DeleteRetweetResponseData_1 = require_DeleteRetweetResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfDeleteRetweetResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfDeleteRetweetResponse = instanceOfDeleteRetweetResponse;
    function DeleteRetweetResponseFromJSON(json) {
      return DeleteRetweetResponseFromJSONTyped(json, false);
    }
    exports2.DeleteRetweetResponseFromJSON = DeleteRetweetResponseFromJSON;
    function DeleteRetweetResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, DeleteRetweetResponseData_1.DeleteRetweetResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.DeleteRetweetResponseFromJSONTyped = DeleteRetweetResponseFromJSONTyped;
    function DeleteRetweetResponseToJSON(json) {
      return DeleteRetweetResponseToJSONTyped(json, false);
    }
    exports2.DeleteRetweetResponseToJSON = DeleteRetweetResponseToJSON;
    function DeleteRetweetResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, DeleteRetweetResponseData_1.DeleteRetweetResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.DeleteRetweetResponseToJSONTyped = DeleteRetweetResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteTweetResponseResult.js
var require_DeleteTweetResponseResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteTweetResponseResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteTweetResponseResultToJSONTyped = exports2.DeleteTweetResponseResultToJSON = exports2.DeleteTweetResponseResultFromJSONTyped = exports2.DeleteTweetResponseResultFromJSON = exports2.instanceOfDeleteTweetResponseResult = void 0;
    function instanceOfDeleteTweetResponseResult(value) {
      if (!("tweetResults" in value) || value["tweetResults"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfDeleteTweetResponseResult = instanceOfDeleteTweetResponseResult;
    function DeleteTweetResponseResultFromJSON(json) {
      return DeleteTweetResponseResultFromJSONTyped(json, false);
    }
    exports2.DeleteTweetResponseResultFromJSON = DeleteTweetResponseResultFromJSON;
    function DeleteTweetResponseResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "tweetResults": json["tweet_results"]
      };
    }
    exports2.DeleteTweetResponseResultFromJSONTyped = DeleteTweetResponseResultFromJSONTyped;
    function DeleteTweetResponseResultToJSON(json) {
      return DeleteTweetResponseResultToJSONTyped(json, false);
    }
    exports2.DeleteTweetResponseResultToJSON = DeleteTweetResponseResultToJSON;
    function DeleteTweetResponseResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "tweet_results": value["tweetResults"]
      };
    }
    exports2.DeleteTweetResponseResultToJSONTyped = DeleteTweetResponseResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteTweetResponseData.js
var require_DeleteTweetResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteTweetResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteTweetResponseDataToJSONTyped = exports2.DeleteTweetResponseDataToJSON = exports2.DeleteTweetResponseDataFromJSONTyped = exports2.DeleteTweetResponseDataFromJSON = exports2.instanceOfDeleteTweetResponseData = void 0;
    var DeleteTweetResponseResult_1 = require_DeleteTweetResponseResult();
    function instanceOfDeleteTweetResponseData(value) {
      return true;
    }
    exports2.instanceOfDeleteTweetResponseData = instanceOfDeleteTweetResponseData;
    function DeleteTweetResponseDataFromJSON(json) {
      return DeleteTweetResponseDataFromJSONTyped(json, false);
    }
    exports2.DeleteTweetResponseDataFromJSON = DeleteTweetResponseDataFromJSON;
    function DeleteTweetResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "deleteRetweet": json["delete_retweet"] == null ? void 0 : (0, DeleteTweetResponseResult_1.DeleteTweetResponseResultFromJSON)(json["delete_retweet"])
      };
    }
    exports2.DeleteTweetResponseDataFromJSONTyped = DeleteTweetResponseDataFromJSONTyped;
    function DeleteTweetResponseDataToJSON(json) {
      return DeleteTweetResponseDataToJSONTyped(json, false);
    }
    exports2.DeleteTweetResponseDataToJSON = DeleteTweetResponseDataToJSON;
    function DeleteTweetResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "delete_retweet": (0, DeleteTweetResponseResult_1.DeleteTweetResponseResultToJSON)(value["deleteRetweet"])
      };
    }
    exports2.DeleteTweetResponseDataToJSONTyped = DeleteTweetResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteTweetResponse.js
var require_DeleteTweetResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/DeleteTweetResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DeleteTweetResponseToJSONTyped = exports2.DeleteTweetResponseToJSON = exports2.DeleteTweetResponseFromJSONTyped = exports2.DeleteTweetResponseFromJSON = exports2.instanceOfDeleteTweetResponse = void 0;
    var DeleteTweetResponseData_1 = require_DeleteTweetResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfDeleteTweetResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfDeleteTweetResponse = instanceOfDeleteTweetResponse;
    function DeleteTweetResponseFromJSON(json) {
      return DeleteTweetResponseFromJSONTyped(json, false);
    }
    exports2.DeleteTweetResponseFromJSON = DeleteTweetResponseFromJSON;
    function DeleteTweetResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, DeleteTweetResponseData_1.DeleteTweetResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.DeleteTweetResponseFromJSONTyped = DeleteTweetResponseFromJSONTyped;
    function DeleteTweetResponseToJSON(json) {
      return DeleteTweetResponseToJSONTyped(json, false);
    }
    exports2.DeleteTweetResponseToJSON = DeleteTweetResponseToJSON;
    function DeleteTweetResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, DeleteTweetResponseData_1.DeleteTweetResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.DeleteTweetResponseToJSONTyped = DeleteTweetResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FavoriteTweet.js
var require_FavoriteTweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FavoriteTweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FavoriteTweetToJSONTyped = exports2.FavoriteTweetToJSON = exports2.FavoriteTweetFromJSONTyped = exports2.FavoriteTweetFromJSON = exports2.instanceOfFavoriteTweet = void 0;
    function instanceOfFavoriteTweet(value) {
      return true;
    }
    exports2.instanceOfFavoriteTweet = instanceOfFavoriteTweet;
    function FavoriteTweetFromJSON(json) {
      return FavoriteTweetFromJSONTyped(json, false);
    }
    exports2.FavoriteTweetFromJSON = FavoriteTweetFromJSON;
    function FavoriteTweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "favoriteTweet": json["favorite_tweet"] == null ? void 0 : json["favorite_tweet"]
      };
    }
    exports2.FavoriteTweetFromJSONTyped = FavoriteTweetFromJSONTyped;
    function FavoriteTweetToJSON(json) {
      return FavoriteTweetToJSONTyped(json, false);
    }
    exports2.FavoriteTweetToJSON = FavoriteTweetToJSON;
    function FavoriteTweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "favorite_tweet": value["favoriteTweet"]
      };
    }
    exports2.FavoriteTweetToJSONTyped = FavoriteTweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FavoriteTweetResponse.js
var require_FavoriteTweetResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FavoriteTweetResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FavoriteTweetResponseToJSONTyped = exports2.FavoriteTweetResponseToJSON = exports2.FavoriteTweetResponseFromJSONTyped = exports2.FavoriteTweetResponseFromJSON = exports2.instanceOfFavoriteTweetResponse = void 0;
    var FavoriteTweet_1 = require_FavoriteTweet();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfFavoriteTweetResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfFavoriteTweetResponse = instanceOfFavoriteTweetResponse;
    function FavoriteTweetResponseFromJSON(json) {
      return FavoriteTweetResponseFromJSONTyped(json, false);
    }
    exports2.FavoriteTweetResponseFromJSON = FavoriteTweetResponseFromJSON;
    function FavoriteTweetResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, FavoriteTweet_1.FavoriteTweetFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.FavoriteTweetResponseFromJSONTyped = FavoriteTweetResponseFromJSONTyped;
    function FavoriteTweetResponseToJSON(json) {
      return FavoriteTweetResponseToJSONTyped(json, false);
    }
    exports2.FavoriteTweetResponseToJSON = FavoriteTweetResponseToJSON;
    function FavoriteTweetResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, FavoriteTweet_1.FavoriteTweetToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.FavoriteTweetResponseToJSONTyped = FavoriteTweetResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowTimeline.js
var require_FollowTimeline = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowTimeline.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FollowTimelineToJSONTyped = exports2.FollowTimelineToJSON = exports2.FollowTimelineFromJSONTyped = exports2.FollowTimelineFromJSON = exports2.instanceOfFollowTimeline = void 0;
    var Timeline_1 = require_Timeline();
    function instanceOfFollowTimeline(value) {
      if (!("timeline" in value) || value["timeline"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfFollowTimeline = instanceOfFollowTimeline;
    function FollowTimelineFromJSON(json) {
      return FollowTimelineFromJSONTyped(json, false);
    }
    exports2.FollowTimelineFromJSON = FollowTimelineFromJSON;
    function FollowTimelineFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "timeline": (0, Timeline_1.TimelineFromJSON)(json["timeline"])
      };
    }
    exports2.FollowTimelineFromJSONTyped = FollowTimelineFromJSONTyped;
    function FollowTimelineToJSON(json) {
      return FollowTimelineToJSONTyped(json, false);
    }
    exports2.FollowTimelineToJSON = FollowTimelineToJSON;
    function FollowTimelineToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "timeline": (0, Timeline_1.TimelineToJSON)(value["timeline"])
      };
    }
    exports2.FollowTimelineToJSONTyped = FollowTimelineToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowResponseResult.js
var require_FollowResponseResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowResponseResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FollowResponseResultToJSONTyped = exports2.FollowResponseResultToJSON = exports2.FollowResponseResultFromJSONTyped = exports2.FollowResponseResultFromJSON = exports2.instanceOfFollowResponseResult = void 0;
    var TypeName_1 = require_TypeName();
    var FollowTimeline_1 = require_FollowTimeline();
    function instanceOfFollowResponseResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("timeline" in value) || value["timeline"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfFollowResponseResult = instanceOfFollowResponseResult;
    function FollowResponseResultFromJSON(json) {
      return FollowResponseResultFromJSONTyped(json, false);
    }
    exports2.FollowResponseResultFromJSON = FollowResponseResultFromJSON;
    function FollowResponseResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "timeline": (0, FollowTimeline_1.FollowTimelineFromJSON)(json["timeline"])
      };
    }
    exports2.FollowResponseResultFromJSONTyped = FollowResponseResultFromJSONTyped;
    function FollowResponseResultToJSON(json) {
      return FollowResponseResultToJSONTyped(json, false);
    }
    exports2.FollowResponseResultToJSON = FollowResponseResultToJSON;
    function FollowResponseResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "timeline": (0, FollowTimeline_1.FollowTimelineToJSON)(value["timeline"])
      };
    }
    exports2.FollowResponseResultToJSONTyped = FollowResponseResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowResponseUser.js
var require_FollowResponseUser = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowResponseUser.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FollowResponseUserToJSONTyped = exports2.FollowResponseUserToJSON = exports2.FollowResponseUserFromJSONTyped = exports2.FollowResponseUserFromJSON = exports2.instanceOfFollowResponseUser = void 0;
    var FollowResponseResult_1 = require_FollowResponseResult();
    function instanceOfFollowResponseUser(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfFollowResponseUser = instanceOfFollowResponseUser;
    function FollowResponseUserFromJSON(json) {
      return FollowResponseUserFromJSONTyped(json, false);
    }
    exports2.FollowResponseUserFromJSON = FollowResponseUserFromJSON;
    function FollowResponseUserFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, FollowResponseResult_1.FollowResponseResultFromJSON)(json["result"])
      };
    }
    exports2.FollowResponseUserFromJSONTyped = FollowResponseUserFromJSONTyped;
    function FollowResponseUserToJSON(json) {
      return FollowResponseUserToJSONTyped(json, false);
    }
    exports2.FollowResponseUserToJSON = FollowResponseUserToJSON;
    function FollowResponseUserToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, FollowResponseResult_1.FollowResponseResultToJSON)(value["result"])
      };
    }
    exports2.FollowResponseUserToJSONTyped = FollowResponseUserToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowResponseData.js
var require_FollowResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FollowResponseDataToJSONTyped = exports2.FollowResponseDataToJSON = exports2.FollowResponseDataFromJSONTyped = exports2.FollowResponseDataFromJSON = exports2.instanceOfFollowResponseData = void 0;
    var FollowResponseUser_1 = require_FollowResponseUser();
    function instanceOfFollowResponseData(value) {
      return true;
    }
    exports2.instanceOfFollowResponseData = instanceOfFollowResponseData;
    function FollowResponseDataFromJSON(json) {
      return FollowResponseDataFromJSONTyped(json, false);
    }
    exports2.FollowResponseDataFromJSON = FollowResponseDataFromJSON;
    function FollowResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "user": json["user"] == null ? void 0 : (0, FollowResponseUser_1.FollowResponseUserFromJSON)(json["user"])
      };
    }
    exports2.FollowResponseDataFromJSONTyped = FollowResponseDataFromJSONTyped;
    function FollowResponseDataToJSON(json) {
      return FollowResponseDataToJSONTyped(json, false);
    }
    exports2.FollowResponseDataToJSON = FollowResponseDataToJSON;
    function FollowResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "user": (0, FollowResponseUser_1.FollowResponseUserToJSON)(value["user"])
      };
    }
    exports2.FollowResponseDataToJSONTyped = FollowResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowResponse.js
var require_FollowResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/FollowResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FollowResponseToJSONTyped = exports2.FollowResponseToJSON = exports2.FollowResponseFromJSONTyped = exports2.FollowResponseFromJSON = exports2.instanceOfFollowResponse = void 0;
    var FollowResponseData_1 = require_FollowResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfFollowResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfFollowResponse = instanceOfFollowResponse;
    function FollowResponseFromJSON(json) {
      return FollowResponseFromJSONTyped(json, false);
    }
    exports2.FollowResponseFromJSON = FollowResponseFromJSON;
    function FollowResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, FollowResponseData_1.FollowResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.FollowResponseFromJSONTyped = FollowResponseFromJSONTyped;
    function FollowResponseToJSON(json) {
      return FollowResponseToJSONTyped(json, false);
    }
    exports2.FollowResponseToJSON = FollowResponseToJSON;
    function FollowResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, FollowResponseData_1.FollowResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.FollowResponseToJSONTyped = FollowResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/HomeTimelineHome.js
var require_HomeTimelineHome = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/HomeTimelineHome.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.HomeTimelineHomeToJSONTyped = exports2.HomeTimelineHomeToJSON = exports2.HomeTimelineHomeFromJSONTyped = exports2.HomeTimelineHomeFromJSON = exports2.instanceOfHomeTimelineHome = void 0;
    var Timeline_1 = require_Timeline();
    function instanceOfHomeTimelineHome(value) {
      if (!("homeTimelineUrt" in value) || value["homeTimelineUrt"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfHomeTimelineHome = instanceOfHomeTimelineHome;
    function HomeTimelineHomeFromJSON(json) {
      return HomeTimelineHomeFromJSONTyped(json, false);
    }
    exports2.HomeTimelineHomeFromJSON = HomeTimelineHomeFromJSON;
    function HomeTimelineHomeFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "homeTimelineUrt": (0, Timeline_1.TimelineFromJSON)(json["home_timeline_urt"])
      };
    }
    exports2.HomeTimelineHomeFromJSONTyped = HomeTimelineHomeFromJSONTyped;
    function HomeTimelineHomeToJSON(json) {
      return HomeTimelineHomeToJSONTyped(json, false);
    }
    exports2.HomeTimelineHomeToJSON = HomeTimelineHomeToJSON;
    function HomeTimelineHomeToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "home_timeline_urt": (0, Timeline_1.TimelineToJSON)(value["homeTimelineUrt"])
      };
    }
    exports2.HomeTimelineHomeToJSONTyped = HomeTimelineHomeToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/HomeTimelineResponseData.js
var require_HomeTimelineResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/HomeTimelineResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.HomeTimelineResponseDataToJSONTyped = exports2.HomeTimelineResponseDataToJSON = exports2.HomeTimelineResponseDataFromJSONTyped = exports2.HomeTimelineResponseDataFromJSON = exports2.instanceOfHomeTimelineResponseData = void 0;
    var HomeTimelineHome_1 = require_HomeTimelineHome();
    function instanceOfHomeTimelineResponseData(value) {
      return true;
    }
    exports2.instanceOfHomeTimelineResponseData = instanceOfHomeTimelineResponseData;
    function HomeTimelineResponseDataFromJSON(json) {
      return HomeTimelineResponseDataFromJSONTyped(json, false);
    }
    exports2.HomeTimelineResponseDataFromJSON = HomeTimelineResponseDataFromJSON;
    function HomeTimelineResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "home": json["home"] == null ? void 0 : (0, HomeTimelineHome_1.HomeTimelineHomeFromJSON)(json["home"])
      };
    }
    exports2.HomeTimelineResponseDataFromJSONTyped = HomeTimelineResponseDataFromJSONTyped;
    function HomeTimelineResponseDataToJSON(json) {
      return HomeTimelineResponseDataToJSONTyped(json, false);
    }
    exports2.HomeTimelineResponseDataToJSON = HomeTimelineResponseDataToJSON;
    function HomeTimelineResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "home": (0, HomeTimelineHome_1.HomeTimelineHomeToJSON)(value["home"])
      };
    }
    exports2.HomeTimelineResponseDataToJSONTyped = HomeTimelineResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ListTweetsTimeline.js
var require_ListTweetsTimeline = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ListTweetsTimeline.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ListTweetsTimelineToJSONTyped = exports2.ListTweetsTimelineToJSON = exports2.ListTweetsTimelineFromJSONTyped = exports2.ListTweetsTimelineFromJSON = exports2.instanceOfListTweetsTimeline = void 0;
    var Timeline_1 = require_Timeline();
    function instanceOfListTweetsTimeline(value) {
      return true;
    }
    exports2.instanceOfListTweetsTimeline = instanceOfListTweetsTimeline;
    function ListTweetsTimelineFromJSON(json) {
      return ListTweetsTimelineFromJSONTyped(json, false);
    }
    exports2.ListTweetsTimelineFromJSON = ListTweetsTimelineFromJSON;
    function ListTweetsTimelineFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "timeline": json["timeline"] == null ? void 0 : (0, Timeline_1.TimelineFromJSON)(json["timeline"])
      };
    }
    exports2.ListTweetsTimelineFromJSONTyped = ListTweetsTimelineFromJSONTyped;
    function ListTweetsTimelineToJSON(json) {
      return ListTweetsTimelineToJSONTyped(json, false);
    }
    exports2.ListTweetsTimelineToJSON = ListTweetsTimelineToJSON;
    function ListTweetsTimelineToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "timeline": (0, Timeline_1.TimelineToJSON)(value["timeline"])
      };
    }
    exports2.ListTweetsTimelineToJSONTyped = ListTweetsTimelineToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ListTweetsTimelineList.js
var require_ListTweetsTimelineList = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ListTweetsTimelineList.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ListTweetsTimelineListToJSONTyped = exports2.ListTweetsTimelineListToJSON = exports2.ListTweetsTimelineListFromJSONTyped = exports2.ListTweetsTimelineListFromJSON = exports2.instanceOfListTweetsTimelineList = void 0;
    var ListTweetsTimeline_1 = require_ListTweetsTimeline();
    function instanceOfListTweetsTimelineList(value) {
      if (!("tweetsTimeline" in value) || value["tweetsTimeline"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfListTweetsTimelineList = instanceOfListTweetsTimelineList;
    function ListTweetsTimelineListFromJSON(json) {
      return ListTweetsTimelineListFromJSONTyped(json, false);
    }
    exports2.ListTweetsTimelineListFromJSON = ListTweetsTimelineListFromJSON;
    function ListTweetsTimelineListFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "tweetsTimeline": (0, ListTweetsTimeline_1.ListTweetsTimelineFromJSON)(json["tweets_timeline"])
      };
    }
    exports2.ListTweetsTimelineListFromJSONTyped = ListTweetsTimelineListFromJSONTyped;
    function ListTweetsTimelineListToJSON(json) {
      return ListTweetsTimelineListToJSONTyped(json, false);
    }
    exports2.ListTweetsTimelineListToJSON = ListTweetsTimelineListToJSON;
    function ListTweetsTimelineListToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "tweets_timeline": (0, ListTweetsTimeline_1.ListTweetsTimelineToJSON)(value["tweetsTimeline"])
      };
    }
    exports2.ListTweetsTimelineListToJSONTyped = ListTweetsTimelineListToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ListTweetsTimelineData.js
var require_ListTweetsTimelineData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ListTweetsTimelineData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ListTweetsTimelineDataToJSONTyped = exports2.ListTweetsTimelineDataToJSON = exports2.ListTweetsTimelineDataFromJSONTyped = exports2.ListTweetsTimelineDataFromJSON = exports2.instanceOfListTweetsTimelineData = void 0;
    var ListTweetsTimelineList_1 = require_ListTweetsTimelineList();
    function instanceOfListTweetsTimelineData(value) {
      return true;
    }
    exports2.instanceOfListTweetsTimelineData = instanceOfListTweetsTimelineData;
    function ListTweetsTimelineDataFromJSON(json) {
      return ListTweetsTimelineDataFromJSONTyped(json, false);
    }
    exports2.ListTweetsTimelineDataFromJSON = ListTweetsTimelineDataFromJSON;
    function ListTweetsTimelineDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "list": json["list"] == null ? void 0 : (0, ListTweetsTimelineList_1.ListTweetsTimelineListFromJSON)(json["list"])
      };
    }
    exports2.ListTweetsTimelineDataFromJSONTyped = ListTweetsTimelineDataFromJSONTyped;
    function ListTweetsTimelineDataToJSON(json) {
      return ListTweetsTimelineDataToJSONTyped(json, false);
    }
    exports2.ListTweetsTimelineDataToJSON = ListTweetsTimelineDataToJSON;
    function ListTweetsTimelineDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "list": (0, ListTweetsTimelineList_1.ListTweetsTimelineListToJSON)(value["list"])
      };
    }
    exports2.ListTweetsTimelineDataToJSONTyped = ListTweetsTimelineDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ListLatestTweetsTimelineResponse.js
var require_ListLatestTweetsTimelineResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ListLatestTweetsTimelineResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ListLatestTweetsTimelineResponseToJSONTyped = exports2.ListLatestTweetsTimelineResponseToJSON = exports2.ListLatestTweetsTimelineResponseFromJSONTyped = exports2.ListLatestTweetsTimelineResponseFromJSON = exports2.instanceOfListLatestTweetsTimelineResponse = void 0;
    var ListTweetsTimelineData_1 = require_ListTweetsTimelineData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfListLatestTweetsTimelineResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfListLatestTweetsTimelineResponse = instanceOfListLatestTweetsTimelineResponse;
    function ListLatestTweetsTimelineResponseFromJSON(json) {
      return ListLatestTweetsTimelineResponseFromJSONTyped(json, false);
    }
    exports2.ListLatestTweetsTimelineResponseFromJSON = ListLatestTweetsTimelineResponseFromJSON;
    function ListLatestTweetsTimelineResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, ListTweetsTimelineData_1.ListTweetsTimelineDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.ListLatestTweetsTimelineResponseFromJSONTyped = ListLatestTweetsTimelineResponseFromJSONTyped;
    function ListLatestTweetsTimelineResponseToJSON(json) {
      return ListLatestTweetsTimelineResponseToJSONTyped(json, false);
    }
    exports2.ListLatestTweetsTimelineResponseToJSON = ListLatestTweetsTimelineResponseToJSON;
    function ListLatestTweetsTimelineResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, ListTweetsTimelineData_1.ListTweetsTimelineDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.ListLatestTweetsTimelineResponseToJSONTyped = ListLatestTweetsTimelineResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/OneFactorLoginEligibility.js
var require_OneFactorLoginEligibility = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/OneFactorLoginEligibility.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.OneFactorLoginEligibilityToJSONTyped = exports2.OneFactorLoginEligibilityToJSON = exports2.OneFactorLoginEligibilityFromJSONTyped = exports2.OneFactorLoginEligibilityFromJSON = exports2.instanceOfOneFactorLoginEligibility = void 0;
    function instanceOfOneFactorLoginEligibility(value) {
      if (!("fetchStatus" in value) || value["fetchStatus"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfOneFactorLoginEligibility = instanceOfOneFactorLoginEligibility;
    function OneFactorLoginEligibilityFromJSON(json) {
      return OneFactorLoginEligibilityFromJSONTyped(json, false);
    }
    exports2.OneFactorLoginEligibilityFromJSON = OneFactorLoginEligibilityFromJSON;
    function OneFactorLoginEligibilityFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "fetchStatus": json["fetchStatus"]
      };
    }
    exports2.OneFactorLoginEligibilityFromJSONTyped = OneFactorLoginEligibilityFromJSONTyped;
    function OneFactorLoginEligibilityToJSON(json) {
      return OneFactorLoginEligibilityToJSONTyped(json, false);
    }
    exports2.OneFactorLoginEligibilityToJSON = OneFactorLoginEligibilityToJSON;
    function OneFactorLoginEligibilityToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "fetchStatus": value["fetchStatus"]
      };
    }
    exports2.OneFactorLoginEligibilityToJSONTyped = OneFactorLoginEligibilityToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserFeatures.js
var require_UserFeatures = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserFeatures.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserFeaturesToJSONTyped = exports2.UserFeaturesToJSON = exports2.UserFeaturesFromJSONTyped = exports2.UserFeaturesFromJSON = exports2.instanceOfUserFeatures = void 0;
    function instanceOfUserFeatures(value) {
      if (!("mediatoolStudioLibrary" in value) || value["mediatoolStudioLibrary"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserFeatures = instanceOfUserFeatures;
    function UserFeaturesFromJSON(json) {
      return UserFeaturesFromJSONTyped(json, false);
    }
    exports2.UserFeaturesFromJSON = UserFeaturesFromJSON;
    function UserFeaturesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "mediatoolStudioLibrary": json["mediatool_studio_library"]
      };
    }
    exports2.UserFeaturesFromJSONTyped = UserFeaturesFromJSONTyped;
    function UserFeaturesToJSON(json) {
      return UserFeaturesToJSONTyped(json, false);
    }
    exports2.UserFeaturesToJSON = UserFeaturesToJSON;
    function UserFeaturesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "mediatool_studio_library": value["mediatoolStudioLibrary"]
      };
    }
    exports2.UserFeaturesToJSONTyped = UserFeaturesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Session.js
var require_Session = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/Session.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SessionToJSONTyped = exports2.SessionToJSON = exports2.SessionFromJSONTyped = exports2.SessionFromJSON = exports2.instanceOfSession = exports2.SessionSuperFollowsApplicationStatusEnum = void 0;
    var OneFactorLoginEligibility_1 = require_OneFactorLoginEligibility();
    var CommunitiesActions_1 = require_CommunitiesActions();
    var UserFeatures_1 = require_UserFeatures();
    exports2.SessionSuperFollowsApplicationStatusEnum = {
      NotStarted: "NotStarted"
    };
    function instanceOfSession(value) {
      if (!("communitiesActions" in value) || value["communitiesActions"] === void 0)
        return false;
      if (!("country" in value) || value["country"] === void 0)
        return false;
      if (!("guestId" in value) || value["guestId"] === void 0)
        return false;
      if (!("hasCommunityMemberships" in value) || value["hasCommunityMemberships"] === void 0)
        return false;
      if (!("isActiveCreator" in value) || value["isActiveCreator"] === void 0)
        return false;
      if (!("isRestrictedSession" in value) || value["isRestrictedSession"] === void 0)
        return false;
      if (!("isSuperFollowSubscriber" in value) || value["isSuperFollowSubscriber"] === void 0)
        return false;
      if (!("language" in value) || value["language"] === void 0)
        return false;
      if (!("oneFactorLoginEligibility" in value) || value["oneFactorLoginEligibility"] === void 0)
        return false;
      if (!("superFollowersCount" in value) || value["superFollowersCount"] === void 0)
        return false;
      if (!("superFollowsApplicationStatus" in value) || value["superFollowsApplicationStatus"] === void 0)
        return false;
      if (!("userFeatures" in value) || value["userFeatures"] === void 0)
        return false;
      if (!("userId" in value) || value["userId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfSession = instanceOfSession;
    function SessionFromJSON(json) {
      return SessionFromJSONTyped(json, false);
    }
    exports2.SessionFromJSON = SessionFromJSON;
    function SessionFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "ssoInitTokens": json["SsoInitTokens"] == null ? void 0 : json["SsoInitTokens"],
        "communitiesActions": (0, CommunitiesActions_1.CommunitiesActionsFromJSON)(json["communitiesActions"]),
        "country": json["country"],
        "guestId": json["guestId"],
        "hasCommunityMemberships": json["hasCommunityMemberships"],
        "isActiveCreator": json["isActiveCreator"],
        "isRestrictedSession": json["isRestrictedSession"],
        "isSuperFollowSubscriber": json["isSuperFollowSubscriber"],
        "language": json["language"],
        "oneFactorLoginEligibility": (0, OneFactorLoginEligibility_1.OneFactorLoginEligibilityFromJSON)(json["oneFactorLoginEligibility"]),
        "superFollowersCount": json["superFollowersCount"],
        "superFollowsApplicationStatus": json["superFollowsApplicationStatus"],
        "userFeatures": (0, UserFeatures_1.UserFeaturesFromJSON)(json["userFeatures"]),
        "userId": json["user_id"]
      };
    }
    exports2.SessionFromJSONTyped = SessionFromJSONTyped;
    function SessionToJSON(json) {
      return SessionToJSONTyped(json, false);
    }
    exports2.SessionToJSON = SessionToJSON;
    function SessionToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "SsoInitTokens": value["ssoInitTokens"],
        "communitiesActions": (0, CommunitiesActions_1.CommunitiesActionsToJSON)(value["communitiesActions"]),
        "country": value["country"],
        "guestId": value["guestId"],
        "hasCommunityMemberships": value["hasCommunityMemberships"],
        "isActiveCreator": value["isActiveCreator"],
        "isRestrictedSession": value["isRestrictedSession"],
        "isSuperFollowSubscriber": value["isSuperFollowSubscriber"],
        "language": value["language"],
        "oneFactorLoginEligibility": (0, OneFactorLoginEligibility_1.OneFactorLoginEligibilityToJSON)(value["oneFactorLoginEligibility"]),
        "superFollowersCount": value["superFollowersCount"],
        "superFollowsApplicationStatus": value["superFollowsApplicationStatus"],
        "userFeatures": (0, UserFeatures_1.UserFeaturesToJSON)(value["userFeatures"]),
        "user_id": value["userId"]
      };
    }
    exports2.SessionToJSONTyped = SessionToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/OtherObjectAll.js
var require_OtherObjectAll = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/OtherObjectAll.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.OtherObjectAllToJSONTyped = exports2.OtherObjectAllToJSON = exports2.OtherObjectAllFromJSONTyped = exports2.OtherObjectAllFromJSON = exports2.instanceOfOtherObjectAll = void 0;
    var Session_1 = require_Session();
    function instanceOfOtherObjectAll(value) {
      return true;
    }
    exports2.instanceOfOtherObjectAll = instanceOfOtherObjectAll;
    function OtherObjectAllFromJSON(json) {
      return OtherObjectAllFromJSONTyped(json, false);
    }
    exports2.OtherObjectAllFromJSON = OtherObjectAllFromJSON;
    function OtherObjectAllFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "session": json["Session"] == null ? void 0 : (0, Session_1.SessionFromJSON)(json["Session"])
      };
    }
    exports2.OtherObjectAllFromJSONTyped = OtherObjectAllFromJSONTyped;
    function OtherObjectAllToJSON(json) {
      return OtherObjectAllToJSONTyped(json, false);
    }
    exports2.OtherObjectAllToJSON = OtherObjectAllToJSON;
    function OtherObjectAllToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "Session": (0, Session_1.SessionToJSON)(value["session"])
      };
    }
    exports2.OtherObjectAllToJSONTyped = OtherObjectAllToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateBookmarkRequestVariables.js
var require_PostCreateBookmarkRequestVariables = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateBookmarkRequestVariables.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateBookmarkRequestVariablesToJSONTyped = exports2.PostCreateBookmarkRequestVariablesToJSON = exports2.PostCreateBookmarkRequestVariablesFromJSONTyped = exports2.PostCreateBookmarkRequestVariablesFromJSON = exports2.instanceOfPostCreateBookmarkRequestVariables = void 0;
    function instanceOfPostCreateBookmarkRequestVariables(value) {
      if (!("tweetId" in value) || value["tweetId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateBookmarkRequestVariables = instanceOfPostCreateBookmarkRequestVariables;
    function PostCreateBookmarkRequestVariablesFromJSON(json) {
      return PostCreateBookmarkRequestVariablesFromJSONTyped(json, false);
    }
    exports2.PostCreateBookmarkRequestVariablesFromJSON = PostCreateBookmarkRequestVariablesFromJSON;
    function PostCreateBookmarkRequestVariablesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "tweetId": json["tweet_id"]
      };
    }
    exports2.PostCreateBookmarkRequestVariablesFromJSONTyped = PostCreateBookmarkRequestVariablesFromJSONTyped;
    function PostCreateBookmarkRequestVariablesToJSON(json) {
      return PostCreateBookmarkRequestVariablesToJSONTyped(json, false);
    }
    exports2.PostCreateBookmarkRequestVariablesToJSON = PostCreateBookmarkRequestVariablesToJSON;
    function PostCreateBookmarkRequestVariablesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "tweet_id": value["tweetId"]
      };
    }
    exports2.PostCreateBookmarkRequestVariablesToJSONTyped = PostCreateBookmarkRequestVariablesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateBookmarkRequest.js
var require_PostCreateBookmarkRequest = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateBookmarkRequest.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateBookmarkRequestToJSONTyped = exports2.PostCreateBookmarkRequestToJSON = exports2.PostCreateBookmarkRequestFromJSONTyped = exports2.PostCreateBookmarkRequestFromJSON = exports2.instanceOfPostCreateBookmarkRequest = void 0;
    var PostCreateBookmarkRequestVariables_1 = require_PostCreateBookmarkRequestVariables();
    function instanceOfPostCreateBookmarkRequest(value) {
      if (!("queryId" in value) || value["queryId"] === void 0)
        return false;
      if (!("variables" in value) || value["variables"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateBookmarkRequest = instanceOfPostCreateBookmarkRequest;
    function PostCreateBookmarkRequestFromJSON(json) {
      return PostCreateBookmarkRequestFromJSONTyped(json, false);
    }
    exports2.PostCreateBookmarkRequestFromJSON = PostCreateBookmarkRequestFromJSON;
    function PostCreateBookmarkRequestFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "queryId": json["queryId"],
        "variables": (0, PostCreateBookmarkRequestVariables_1.PostCreateBookmarkRequestVariablesFromJSON)(json["variables"])
      };
    }
    exports2.PostCreateBookmarkRequestFromJSONTyped = PostCreateBookmarkRequestFromJSONTyped;
    function PostCreateBookmarkRequestToJSON(json) {
      return PostCreateBookmarkRequestToJSONTyped(json, false);
    }
    exports2.PostCreateBookmarkRequestToJSON = PostCreateBookmarkRequestToJSON;
    function PostCreateBookmarkRequestToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "queryId": value["queryId"],
        "variables": (0, PostCreateBookmarkRequestVariables_1.PostCreateBookmarkRequestVariablesToJSON)(value["variables"])
      };
    }
    exports2.PostCreateBookmarkRequestToJSONTyped = PostCreateBookmarkRequestToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateRetweetRequestVariables.js
var require_PostCreateRetweetRequestVariables = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateRetweetRequestVariables.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateRetweetRequestVariablesToJSONTyped = exports2.PostCreateRetweetRequestVariablesToJSON = exports2.PostCreateRetweetRequestVariablesFromJSONTyped = exports2.PostCreateRetweetRequestVariablesFromJSON = exports2.instanceOfPostCreateRetweetRequestVariables = void 0;
    function instanceOfPostCreateRetweetRequestVariables(value) {
      if (!("darkRequest" in value) || value["darkRequest"] === void 0)
        return false;
      if (!("tweetId" in value) || value["tweetId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateRetweetRequestVariables = instanceOfPostCreateRetweetRequestVariables;
    function PostCreateRetweetRequestVariablesFromJSON(json) {
      return PostCreateRetweetRequestVariablesFromJSONTyped(json, false);
    }
    exports2.PostCreateRetweetRequestVariablesFromJSON = PostCreateRetweetRequestVariablesFromJSON;
    function PostCreateRetweetRequestVariablesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "darkRequest": json["dark_request"],
        "tweetId": json["tweet_id"]
      };
    }
    exports2.PostCreateRetweetRequestVariablesFromJSONTyped = PostCreateRetweetRequestVariablesFromJSONTyped;
    function PostCreateRetweetRequestVariablesToJSON(json) {
      return PostCreateRetweetRequestVariablesToJSONTyped(json, false);
    }
    exports2.PostCreateRetweetRequestVariablesToJSON = PostCreateRetweetRequestVariablesToJSON;
    function PostCreateRetweetRequestVariablesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "dark_request": value["darkRequest"],
        "tweet_id": value["tweetId"]
      };
    }
    exports2.PostCreateRetweetRequestVariablesToJSONTyped = PostCreateRetweetRequestVariablesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateRetweetRequest.js
var require_PostCreateRetweetRequest = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateRetweetRequest.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateRetweetRequestToJSONTyped = exports2.PostCreateRetweetRequestToJSON = exports2.PostCreateRetweetRequestFromJSONTyped = exports2.PostCreateRetweetRequestFromJSON = exports2.instanceOfPostCreateRetweetRequest = void 0;
    var PostCreateRetweetRequestVariables_1 = require_PostCreateRetweetRequestVariables();
    function instanceOfPostCreateRetweetRequest(value) {
      if (!("queryId" in value) || value["queryId"] === void 0)
        return false;
      if (!("variables" in value) || value["variables"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateRetweetRequest = instanceOfPostCreateRetweetRequest;
    function PostCreateRetweetRequestFromJSON(json) {
      return PostCreateRetweetRequestFromJSONTyped(json, false);
    }
    exports2.PostCreateRetweetRequestFromJSON = PostCreateRetweetRequestFromJSON;
    function PostCreateRetweetRequestFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "queryId": json["queryId"],
        "variables": (0, PostCreateRetweetRequestVariables_1.PostCreateRetweetRequestVariablesFromJSON)(json["variables"])
      };
    }
    exports2.PostCreateRetweetRequestFromJSONTyped = PostCreateRetweetRequestFromJSONTyped;
    function PostCreateRetweetRequestToJSON(json) {
      return PostCreateRetweetRequestToJSONTyped(json, false);
    }
    exports2.PostCreateRetweetRequestToJSON = PostCreateRetweetRequestToJSON;
    function PostCreateRetweetRequestToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "queryId": value["queryId"],
        "variables": (0, PostCreateRetweetRequestVariables_1.PostCreateRetweetRequestVariablesToJSON)(value["variables"])
      };
    }
    exports2.PostCreateRetweetRequestToJSONTyped = PostCreateRetweetRequestToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestFeatures.js
var require_PostCreateTweetRequestFeatures = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestFeatures.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateTweetRequestFeaturesToJSONTyped = exports2.PostCreateTweetRequestFeaturesToJSON = exports2.PostCreateTweetRequestFeaturesFromJSONTyped = exports2.PostCreateTweetRequestFeaturesFromJSON = exports2.instanceOfPostCreateTweetRequestFeatures = void 0;
    function instanceOfPostCreateTweetRequestFeatures(value) {
      if (!("articlesPreviewEnabled" in value) || value["articlesPreviewEnabled"] === void 0)
        return false;
      if (!("c9sTweetAnatomyModeratorBadgeEnabled" in value) || value["c9sTweetAnatomyModeratorBadgeEnabled"] === void 0)
        return false;
      if (!("communitiesWebEnableTweetCommunityResultsFetch" in value) || value["communitiesWebEnableTweetCommunityResultsFetch"] === void 0)
        return false;
      if (!("creatorSubscriptionsQuoteTweetPreviewEnabled" in value) || value["creatorSubscriptionsQuoteTweetPreviewEnabled"] === void 0)
        return false;
      if (!("freedomOfSpeechNotReachFetchEnabled" in value) || value["freedomOfSpeechNotReachFetchEnabled"] === void 0)
        return false;
      if (!("graphqlIsTranslatableRwebTweetIsTranslatableEnabled" in value) || value["graphqlIsTranslatableRwebTweetIsTranslatableEnabled"] === void 0)
        return false;
      if (!("longformNotetweetsConsumptionEnabled" in value) || value["longformNotetweetsConsumptionEnabled"] === void 0)
        return false;
      if (!("longformNotetweetsInlineMediaEnabled" in value) || value["longformNotetweetsInlineMediaEnabled"] === void 0)
        return false;
      if (!("longformNotetweetsRichTextReadEnabled" in value) || value["longformNotetweetsRichTextReadEnabled"] === void 0)
        return false;
      if (!("responsiveWebEditTweetApiEnabled" in value) || value["responsiveWebEditTweetApiEnabled"] === void 0)
        return false;
      if (!("responsiveWebEnhanceCardsEnabled" in value) || value["responsiveWebEnhanceCardsEnabled"] === void 0)
        return false;
      if (!("responsiveWebGraphqlExcludeDirectiveEnabled" in value) || value["responsiveWebGraphqlExcludeDirectiveEnabled"] === void 0)
        return false;
      if (!("responsiveWebGraphqlSkipUserProfileImageExtensionsEnabled" in value) || value["responsiveWebGraphqlSkipUserProfileImageExtensionsEnabled"] === void 0)
        return false;
      if (!("responsiveWebGraphqlTimelineNavigationEnabled" in value) || value["responsiveWebGraphqlTimelineNavigationEnabled"] === void 0)
        return false;
      if (!("responsiveWebTwitterArticleTweetConsumptionEnabled" in value) || value["responsiveWebTwitterArticleTweetConsumptionEnabled"] === void 0)
        return false;
      if (!("rwebTipjarConsumptionEnabled" in value) || value["rwebTipjarConsumptionEnabled"] === void 0)
        return false;
      if (!("rwebVideoTimestampsEnabled" in value) || value["rwebVideoTimestampsEnabled"] === void 0)
        return false;
      if (!("standardizedNudgesMisinfo" in value) || value["standardizedNudgesMisinfo"] === void 0)
        return false;
      if (!("tweetAwardsWebTippingEnabled" in value) || value["tweetAwardsWebTippingEnabled"] === void 0)
        return false;
      if (!("tweetWithVisibilityResultsPreferGqlLimitedActionsPolicyEnabled" in value) || value["tweetWithVisibilityResultsPreferGqlLimitedActionsPolicyEnabled"] === void 0)
        return false;
      if (!("verifiedPhoneLabelEnabled" in value) || value["verifiedPhoneLabelEnabled"] === void 0)
        return false;
      if (!("viewCountsEverywhereApiEnabled" in value) || value["viewCountsEverywhereApiEnabled"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateTweetRequestFeatures = instanceOfPostCreateTweetRequestFeatures;
    function PostCreateTweetRequestFeaturesFromJSON(json) {
      return PostCreateTweetRequestFeaturesFromJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestFeaturesFromJSON = PostCreateTweetRequestFeaturesFromJSON;
    function PostCreateTweetRequestFeaturesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "articlesPreviewEnabled": json["articles_preview_enabled"],
        "c9sTweetAnatomyModeratorBadgeEnabled": json["c9s_tweet_anatomy_moderator_badge_enabled"],
        "communitiesWebEnableTweetCommunityResultsFetch": json["communities_web_enable_tweet_community_results_fetch"],
        "creatorSubscriptionsQuoteTweetPreviewEnabled": json["creator_subscriptions_quote_tweet_preview_enabled"],
        "freedomOfSpeechNotReachFetchEnabled": json["freedom_of_speech_not_reach_fetch_enabled"],
        "graphqlIsTranslatableRwebTweetIsTranslatableEnabled": json["graphql_is_translatable_rweb_tweet_is_translatable_enabled"],
        "longformNotetweetsConsumptionEnabled": json["longform_notetweets_consumption_enabled"],
        "longformNotetweetsInlineMediaEnabled": json["longform_notetweets_inline_media_enabled"],
        "longformNotetweetsRichTextReadEnabled": json["longform_notetweets_rich_text_read_enabled"],
        "responsiveWebEditTweetApiEnabled": json["responsive_web_edit_tweet_api_enabled"],
        "responsiveWebEnhanceCardsEnabled": json["responsive_web_enhance_cards_enabled"],
        "responsiveWebGraphqlExcludeDirectiveEnabled": json["responsive_web_graphql_exclude_directive_enabled"],
        "responsiveWebGraphqlSkipUserProfileImageExtensionsEnabled": json["responsive_web_graphql_skip_user_profile_image_extensions_enabled"],
        "responsiveWebGraphqlTimelineNavigationEnabled": json["responsive_web_graphql_timeline_navigation_enabled"],
        "responsiveWebTwitterArticleTweetConsumptionEnabled": json["responsive_web_twitter_article_tweet_consumption_enabled"],
        "rwebTipjarConsumptionEnabled": json["rweb_tipjar_consumption_enabled"],
        "rwebVideoTimestampsEnabled": json["rweb_video_timestamps_enabled"],
        "standardizedNudgesMisinfo": json["standardized_nudges_misinfo"],
        "tweetAwardsWebTippingEnabled": json["tweet_awards_web_tipping_enabled"],
        "tweetWithVisibilityResultsPreferGqlLimitedActionsPolicyEnabled": json["tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled"],
        "verifiedPhoneLabelEnabled": json["verified_phone_label_enabled"],
        "viewCountsEverywhereApiEnabled": json["view_counts_everywhere_api_enabled"]
      };
    }
    exports2.PostCreateTweetRequestFeaturesFromJSONTyped = PostCreateTweetRequestFeaturesFromJSONTyped;
    function PostCreateTweetRequestFeaturesToJSON(json) {
      return PostCreateTweetRequestFeaturesToJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestFeaturesToJSON = PostCreateTweetRequestFeaturesToJSON;
    function PostCreateTweetRequestFeaturesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "articles_preview_enabled": value["articlesPreviewEnabled"],
        "c9s_tweet_anatomy_moderator_badge_enabled": value["c9sTweetAnatomyModeratorBadgeEnabled"],
        "communities_web_enable_tweet_community_results_fetch": value["communitiesWebEnableTweetCommunityResultsFetch"],
        "creator_subscriptions_quote_tweet_preview_enabled": value["creatorSubscriptionsQuoteTweetPreviewEnabled"],
        "freedom_of_speech_not_reach_fetch_enabled": value["freedomOfSpeechNotReachFetchEnabled"],
        "graphql_is_translatable_rweb_tweet_is_translatable_enabled": value["graphqlIsTranslatableRwebTweetIsTranslatableEnabled"],
        "longform_notetweets_consumption_enabled": value["longformNotetweetsConsumptionEnabled"],
        "longform_notetweets_inline_media_enabled": value["longformNotetweetsInlineMediaEnabled"],
        "longform_notetweets_rich_text_read_enabled": value["longformNotetweetsRichTextReadEnabled"],
        "responsive_web_edit_tweet_api_enabled": value["responsiveWebEditTweetApiEnabled"],
        "responsive_web_enhance_cards_enabled": value["responsiveWebEnhanceCardsEnabled"],
        "responsive_web_graphql_exclude_directive_enabled": value["responsiveWebGraphqlExcludeDirectiveEnabled"],
        "responsive_web_graphql_skip_user_profile_image_extensions_enabled": value["responsiveWebGraphqlSkipUserProfileImageExtensionsEnabled"],
        "responsive_web_graphql_timeline_navigation_enabled": value["responsiveWebGraphqlTimelineNavigationEnabled"],
        "responsive_web_twitter_article_tweet_consumption_enabled": value["responsiveWebTwitterArticleTweetConsumptionEnabled"],
        "rweb_tipjar_consumption_enabled": value["rwebTipjarConsumptionEnabled"],
        "rweb_video_timestamps_enabled": value["rwebVideoTimestampsEnabled"],
        "standardized_nudges_misinfo": value["standardizedNudgesMisinfo"],
        "tweet_awards_web_tipping_enabled": value["tweetAwardsWebTippingEnabled"],
        "tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled": value["tweetWithVisibilityResultsPreferGqlLimitedActionsPolicyEnabled"],
        "verified_phone_label_enabled": value["verifiedPhoneLabelEnabled"],
        "view_counts_everywhere_api_enabled": value["viewCountsEverywhereApiEnabled"]
      };
    }
    exports2.PostCreateTweetRequestFeaturesToJSONTyped = PostCreateTweetRequestFeaturesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariablesReply.js
var require_PostCreateTweetRequestVariablesReply = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariablesReply.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateTweetRequestVariablesReplyToJSONTyped = exports2.PostCreateTweetRequestVariablesReplyToJSON = exports2.PostCreateTweetRequestVariablesReplyFromJSONTyped = exports2.PostCreateTweetRequestVariablesReplyFromJSON = exports2.instanceOfPostCreateTweetRequestVariablesReply = void 0;
    function instanceOfPostCreateTweetRequestVariablesReply(value) {
      if (!("excludeReplyUserIds" in value) || value["excludeReplyUserIds"] === void 0)
        return false;
      if (!("inReplyToTweetId" in value) || value["inReplyToTweetId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateTweetRequestVariablesReply = instanceOfPostCreateTweetRequestVariablesReply;
    function PostCreateTweetRequestVariablesReplyFromJSON(json) {
      return PostCreateTweetRequestVariablesReplyFromJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesReplyFromJSON = PostCreateTweetRequestVariablesReplyFromJSON;
    function PostCreateTweetRequestVariablesReplyFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "excludeReplyUserIds": json["exclude_reply_user_ids"],
        "inReplyToTweetId": json["in_reply_to_tweet_id"]
      };
    }
    exports2.PostCreateTweetRequestVariablesReplyFromJSONTyped = PostCreateTweetRequestVariablesReplyFromJSONTyped;
    function PostCreateTweetRequestVariablesReplyToJSON(json) {
      return PostCreateTweetRequestVariablesReplyToJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesReplyToJSON = PostCreateTweetRequestVariablesReplyToJSON;
    function PostCreateTweetRequestVariablesReplyToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "exclude_reply_user_ids": value["excludeReplyUserIds"],
        "in_reply_to_tweet_id": value["inReplyToTweetId"]
      };
    }
    exports2.PostCreateTweetRequestVariablesReplyToJSONTyped = PostCreateTweetRequestVariablesReplyToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariablesConversationControl.js
var require_PostCreateTweetRequestVariablesConversationControl = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariablesConversationControl.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateTweetRequestVariablesConversationControlToJSONTyped = exports2.PostCreateTweetRequestVariablesConversationControlToJSON = exports2.PostCreateTweetRequestVariablesConversationControlFromJSONTyped = exports2.PostCreateTweetRequestVariablesConversationControlFromJSON = exports2.instanceOfPostCreateTweetRequestVariablesConversationControl = void 0;
    function instanceOfPostCreateTweetRequestVariablesConversationControl(value) {
      if (!("mode" in value) || value["mode"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateTweetRequestVariablesConversationControl = instanceOfPostCreateTweetRequestVariablesConversationControl;
    function PostCreateTweetRequestVariablesConversationControlFromJSON(json) {
      return PostCreateTweetRequestVariablesConversationControlFromJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesConversationControlFromJSON = PostCreateTweetRequestVariablesConversationControlFromJSON;
    function PostCreateTweetRequestVariablesConversationControlFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "mode": json["mode"]
      };
    }
    exports2.PostCreateTweetRequestVariablesConversationControlFromJSONTyped = PostCreateTweetRequestVariablesConversationControlFromJSONTyped;
    function PostCreateTweetRequestVariablesConversationControlToJSON(json) {
      return PostCreateTweetRequestVariablesConversationControlToJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesConversationControlToJSON = PostCreateTweetRequestVariablesConversationControlToJSON;
    function PostCreateTweetRequestVariablesConversationControlToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "mode": value["mode"]
      };
    }
    exports2.PostCreateTweetRequestVariablesConversationControlToJSONTyped = PostCreateTweetRequestVariablesConversationControlToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariablesMediaMediaEntitiesInner.js
var require_PostCreateTweetRequestVariablesMediaMediaEntitiesInner = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariablesMediaMediaEntitiesInner.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSONTyped = exports2.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSON = exports2.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSONTyped = exports2.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSON = exports2.instanceOfPostCreateTweetRequestVariablesMediaMediaEntitiesInner = void 0;
    function instanceOfPostCreateTweetRequestVariablesMediaMediaEntitiesInner(value) {
      if (!("mediaId" in value) || value["mediaId"] === void 0)
        return false;
      if (!("taggedUsers" in value) || value["taggedUsers"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateTweetRequestVariablesMediaMediaEntitiesInner = instanceOfPostCreateTweetRequestVariablesMediaMediaEntitiesInner;
    function PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSON(json) {
      return PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSON = PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSON;
    function PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "mediaId": json["media_id"],
        "taggedUsers": json["tagged_users"]
      };
    }
    exports2.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSONTyped = PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSONTyped;
    function PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSON(json) {
      return PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSON = PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSON;
    function PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "media_id": value["mediaId"],
        "tagged_users": value["taggedUsers"]
      };
    }
    exports2.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSONTyped = PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariablesMedia.js
var require_PostCreateTweetRequestVariablesMedia = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariablesMedia.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateTweetRequestVariablesMediaToJSONTyped = exports2.PostCreateTweetRequestVariablesMediaToJSON = exports2.PostCreateTweetRequestVariablesMediaFromJSONTyped = exports2.PostCreateTweetRequestVariablesMediaFromJSON = exports2.instanceOfPostCreateTweetRequestVariablesMedia = void 0;
    var PostCreateTweetRequestVariablesMediaMediaEntitiesInner_1 = require_PostCreateTweetRequestVariablesMediaMediaEntitiesInner();
    function instanceOfPostCreateTweetRequestVariablesMedia(value) {
      if (!("possiblySensitive" in value) || value["possiblySensitive"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateTweetRequestVariablesMedia = instanceOfPostCreateTweetRequestVariablesMedia;
    function PostCreateTweetRequestVariablesMediaFromJSON(json) {
      return PostCreateTweetRequestVariablesMediaFromJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesMediaFromJSON = PostCreateTweetRequestVariablesMediaFromJSON;
    function PostCreateTweetRequestVariablesMediaFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "mediaEntities": json["media_entities"] == null ? void 0 : json["media_entities"].map(PostCreateTweetRequestVariablesMediaMediaEntitiesInner_1.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerFromJSON),
        "possiblySensitive": json["possibly_sensitive"]
      };
    }
    exports2.PostCreateTweetRequestVariablesMediaFromJSONTyped = PostCreateTweetRequestVariablesMediaFromJSONTyped;
    function PostCreateTweetRequestVariablesMediaToJSON(json) {
      return PostCreateTweetRequestVariablesMediaToJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesMediaToJSON = PostCreateTweetRequestVariablesMediaToJSON;
    function PostCreateTweetRequestVariablesMediaToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "media_entities": value["mediaEntities"] == null ? void 0 : value["mediaEntities"].map(PostCreateTweetRequestVariablesMediaMediaEntitiesInner_1.PostCreateTweetRequestVariablesMediaMediaEntitiesInnerToJSON),
        "possibly_sensitive": value["possiblySensitive"]
      };
    }
    exports2.PostCreateTweetRequestVariablesMediaToJSONTyped = PostCreateTweetRequestVariablesMediaToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariables.js
var require_PostCreateTweetRequestVariables = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequestVariables.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateTweetRequestVariablesToJSONTyped = exports2.PostCreateTweetRequestVariablesToJSON = exports2.PostCreateTweetRequestVariablesFromJSONTyped = exports2.PostCreateTweetRequestVariablesFromJSON = exports2.instanceOfPostCreateTweetRequestVariables = void 0;
    var PostCreateTweetRequestVariablesReply_1 = require_PostCreateTweetRequestVariablesReply();
    var PostCreateTweetRequestVariablesConversationControl_1 = require_PostCreateTweetRequestVariablesConversationControl();
    var PostCreateTweetRequestVariablesMedia_1 = require_PostCreateTweetRequestVariablesMedia();
    function instanceOfPostCreateTweetRequestVariables(value) {
      if (!("darkRequest" in value) || value["darkRequest"] === void 0)
        return false;
      if (!("media" in value) || value["media"] === void 0)
        return false;
      if (!("semanticAnnotationIds" in value) || value["semanticAnnotationIds"] === void 0)
        return false;
      if (!("tweetText" in value) || value["tweetText"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateTweetRequestVariables = instanceOfPostCreateTweetRequestVariables;
    function PostCreateTweetRequestVariablesFromJSON(json) {
      return PostCreateTweetRequestVariablesFromJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesFromJSON = PostCreateTweetRequestVariablesFromJSON;
    function PostCreateTweetRequestVariablesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "attachmentUrl": json["attachment_url"] == null ? void 0 : json["attachment_url"],
        "conversationControl": json["conversation_control"] == null ? void 0 : (0, PostCreateTweetRequestVariablesConversationControl_1.PostCreateTweetRequestVariablesConversationControlFromJSON)(json["conversation_control"]),
        "darkRequest": json["dark_request"],
        "disallowedReplyOptions": json["disallowed_reply_options"] == null ? void 0 : json["disallowed_reply_options"],
        "media": (0, PostCreateTweetRequestVariablesMedia_1.PostCreateTweetRequestVariablesMediaFromJSON)(json["media"]),
        "reply": json["reply"] == null ? void 0 : (0, PostCreateTweetRequestVariablesReply_1.PostCreateTweetRequestVariablesReplyFromJSON)(json["reply"]),
        "semanticAnnotationIds": json["semantic_annotation_ids"],
        "tweetText": json["tweet_text"]
      };
    }
    exports2.PostCreateTweetRequestVariablesFromJSONTyped = PostCreateTweetRequestVariablesFromJSONTyped;
    function PostCreateTweetRequestVariablesToJSON(json) {
      return PostCreateTweetRequestVariablesToJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestVariablesToJSON = PostCreateTweetRequestVariablesToJSON;
    function PostCreateTweetRequestVariablesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "attachment_url": value["attachmentUrl"],
        "conversation_control": (0, PostCreateTweetRequestVariablesConversationControl_1.PostCreateTweetRequestVariablesConversationControlToJSON)(value["conversationControl"]),
        "dark_request": value["darkRequest"],
        "disallowed_reply_options": value["disallowedReplyOptions"],
        "media": (0, PostCreateTweetRequestVariablesMedia_1.PostCreateTweetRequestVariablesMediaToJSON)(value["media"]),
        "reply": (0, PostCreateTweetRequestVariablesReply_1.PostCreateTweetRequestVariablesReplyToJSON)(value["reply"]),
        "semantic_annotation_ids": value["semanticAnnotationIds"],
        "tweet_text": value["tweetText"]
      };
    }
    exports2.PostCreateTweetRequestVariablesToJSONTyped = PostCreateTweetRequestVariablesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequest.js
var require_PostCreateTweetRequest = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostCreateTweetRequest.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostCreateTweetRequestToJSONTyped = exports2.PostCreateTweetRequestToJSON = exports2.PostCreateTweetRequestFromJSONTyped = exports2.PostCreateTweetRequestFromJSON = exports2.instanceOfPostCreateTweetRequest = void 0;
    var PostCreateTweetRequestFeatures_1 = require_PostCreateTweetRequestFeatures();
    var PostCreateTweetRequestVariables_1 = require_PostCreateTweetRequestVariables();
    function instanceOfPostCreateTweetRequest(value) {
      if (!("features" in value) || value["features"] === void 0)
        return false;
      if (!("queryId" in value) || value["queryId"] === void 0)
        return false;
      if (!("variables" in value) || value["variables"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostCreateTweetRequest = instanceOfPostCreateTweetRequest;
    function PostCreateTweetRequestFromJSON(json) {
      return PostCreateTweetRequestFromJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestFromJSON = PostCreateTweetRequestFromJSON;
    function PostCreateTweetRequestFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "features": (0, PostCreateTweetRequestFeatures_1.PostCreateTweetRequestFeaturesFromJSON)(json["features"]),
        "queryId": json["queryId"],
        "variables": (0, PostCreateTweetRequestVariables_1.PostCreateTweetRequestVariablesFromJSON)(json["variables"])
      };
    }
    exports2.PostCreateTweetRequestFromJSONTyped = PostCreateTweetRequestFromJSONTyped;
    function PostCreateTweetRequestToJSON(json) {
      return PostCreateTweetRequestToJSONTyped(json, false);
    }
    exports2.PostCreateTweetRequestToJSON = PostCreateTweetRequestToJSON;
    function PostCreateTweetRequestToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "features": (0, PostCreateTweetRequestFeatures_1.PostCreateTweetRequestFeaturesToJSON)(value["features"]),
        "queryId": value["queryId"],
        "variables": (0, PostCreateTweetRequestVariables_1.PostCreateTweetRequestVariablesToJSON)(value["variables"])
      };
    }
    exports2.PostCreateTweetRequestToJSONTyped = PostCreateTweetRequestToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostDeleteBookmarkRequest.js
var require_PostDeleteBookmarkRequest = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostDeleteBookmarkRequest.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostDeleteBookmarkRequestToJSONTyped = exports2.PostDeleteBookmarkRequestToJSON = exports2.PostDeleteBookmarkRequestFromJSONTyped = exports2.PostDeleteBookmarkRequestFromJSON = exports2.instanceOfPostDeleteBookmarkRequest = void 0;
    var PostCreateBookmarkRequestVariables_1 = require_PostCreateBookmarkRequestVariables();
    function instanceOfPostDeleteBookmarkRequest(value) {
      if (!("queryId" in value) || value["queryId"] === void 0)
        return false;
      if (!("variables" in value) || value["variables"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostDeleteBookmarkRequest = instanceOfPostDeleteBookmarkRequest;
    function PostDeleteBookmarkRequestFromJSON(json) {
      return PostDeleteBookmarkRequestFromJSONTyped(json, false);
    }
    exports2.PostDeleteBookmarkRequestFromJSON = PostDeleteBookmarkRequestFromJSON;
    function PostDeleteBookmarkRequestFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "queryId": json["queryId"],
        "variables": (0, PostCreateBookmarkRequestVariables_1.PostCreateBookmarkRequestVariablesFromJSON)(json["variables"])
      };
    }
    exports2.PostDeleteBookmarkRequestFromJSONTyped = PostDeleteBookmarkRequestFromJSONTyped;
    function PostDeleteBookmarkRequestToJSON(json) {
      return PostDeleteBookmarkRequestToJSONTyped(json, false);
    }
    exports2.PostDeleteBookmarkRequestToJSON = PostDeleteBookmarkRequestToJSON;
    function PostDeleteBookmarkRequestToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "queryId": value["queryId"],
        "variables": (0, PostCreateBookmarkRequestVariables_1.PostCreateBookmarkRequestVariablesToJSON)(value["variables"])
      };
    }
    exports2.PostDeleteBookmarkRequestToJSONTyped = PostDeleteBookmarkRequestToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostDeleteRetweetRequestVariables.js
var require_PostDeleteRetweetRequestVariables = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostDeleteRetweetRequestVariables.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostDeleteRetweetRequestVariablesToJSONTyped = exports2.PostDeleteRetweetRequestVariablesToJSON = exports2.PostDeleteRetweetRequestVariablesFromJSONTyped = exports2.PostDeleteRetweetRequestVariablesFromJSON = exports2.instanceOfPostDeleteRetweetRequestVariables = void 0;
    function instanceOfPostDeleteRetweetRequestVariables(value) {
      if (!("darkRequest" in value) || value["darkRequest"] === void 0)
        return false;
      if (!("sourceTweetId" in value) || value["sourceTweetId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostDeleteRetweetRequestVariables = instanceOfPostDeleteRetweetRequestVariables;
    function PostDeleteRetweetRequestVariablesFromJSON(json) {
      return PostDeleteRetweetRequestVariablesFromJSONTyped(json, false);
    }
    exports2.PostDeleteRetweetRequestVariablesFromJSON = PostDeleteRetweetRequestVariablesFromJSON;
    function PostDeleteRetweetRequestVariablesFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "darkRequest": json["dark_request"],
        "sourceTweetId": json["source_tweet_id"]
      };
    }
    exports2.PostDeleteRetweetRequestVariablesFromJSONTyped = PostDeleteRetweetRequestVariablesFromJSONTyped;
    function PostDeleteRetweetRequestVariablesToJSON(json) {
      return PostDeleteRetweetRequestVariablesToJSONTyped(json, false);
    }
    exports2.PostDeleteRetweetRequestVariablesToJSON = PostDeleteRetweetRequestVariablesToJSON;
    function PostDeleteRetweetRequestVariablesToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "dark_request": value["darkRequest"],
        "source_tweet_id": value["sourceTweetId"]
      };
    }
    exports2.PostDeleteRetweetRequestVariablesToJSONTyped = PostDeleteRetweetRequestVariablesToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostDeleteRetweetRequest.js
var require_PostDeleteRetweetRequest = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostDeleteRetweetRequest.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostDeleteRetweetRequestToJSONTyped = exports2.PostDeleteRetweetRequestToJSON = exports2.PostDeleteRetweetRequestFromJSONTyped = exports2.PostDeleteRetweetRequestFromJSON = exports2.instanceOfPostDeleteRetweetRequest = void 0;
    var PostDeleteRetweetRequestVariables_1 = require_PostDeleteRetweetRequestVariables();
    function instanceOfPostDeleteRetweetRequest(value) {
      if (!("queryId" in value) || value["queryId"] === void 0)
        return false;
      if (!("variables" in value) || value["variables"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostDeleteRetweetRequest = instanceOfPostDeleteRetweetRequest;
    function PostDeleteRetweetRequestFromJSON(json) {
      return PostDeleteRetweetRequestFromJSONTyped(json, false);
    }
    exports2.PostDeleteRetweetRequestFromJSON = PostDeleteRetweetRequestFromJSON;
    function PostDeleteRetweetRequestFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "queryId": json["queryId"],
        "variables": (0, PostDeleteRetweetRequestVariables_1.PostDeleteRetweetRequestVariablesFromJSON)(json["variables"])
      };
    }
    exports2.PostDeleteRetweetRequestFromJSONTyped = PostDeleteRetweetRequestFromJSONTyped;
    function PostDeleteRetweetRequestToJSON(json) {
      return PostDeleteRetweetRequestToJSONTyped(json, false);
    }
    exports2.PostDeleteRetweetRequestToJSON = PostDeleteRetweetRequestToJSON;
    function PostDeleteRetweetRequestToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "queryId": value["queryId"],
        "variables": (0, PostDeleteRetweetRequestVariables_1.PostDeleteRetweetRequestVariablesToJSON)(value["variables"])
      };
    }
    exports2.PostDeleteRetweetRequestToJSONTyped = PostDeleteRetweetRequestToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostDeleteTweetRequest.js
var require_PostDeleteTweetRequest = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostDeleteTweetRequest.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostDeleteTweetRequestToJSONTyped = exports2.PostDeleteTweetRequestToJSON = exports2.PostDeleteTweetRequestFromJSONTyped = exports2.PostDeleteTweetRequestFromJSON = exports2.instanceOfPostDeleteTweetRequest = void 0;
    var PostCreateRetweetRequestVariables_1 = require_PostCreateRetweetRequestVariables();
    function instanceOfPostDeleteTweetRequest(value) {
      if (!("queryId" in value) || value["queryId"] === void 0)
        return false;
      if (!("variables" in value) || value["variables"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostDeleteTweetRequest = instanceOfPostDeleteTweetRequest;
    function PostDeleteTweetRequestFromJSON(json) {
      return PostDeleteTweetRequestFromJSONTyped(json, false);
    }
    exports2.PostDeleteTweetRequestFromJSON = PostDeleteTweetRequestFromJSON;
    function PostDeleteTweetRequestFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "queryId": json["queryId"],
        "variables": (0, PostCreateRetweetRequestVariables_1.PostCreateRetweetRequestVariablesFromJSON)(json["variables"])
      };
    }
    exports2.PostDeleteTweetRequestFromJSONTyped = PostDeleteTweetRequestFromJSONTyped;
    function PostDeleteTweetRequestToJSON(json) {
      return PostDeleteTweetRequestToJSONTyped(json, false);
    }
    exports2.PostDeleteTweetRequestToJSON = PostDeleteTweetRequestToJSON;
    function PostDeleteTweetRequestToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "queryId": value["queryId"],
        "variables": (0, PostCreateRetweetRequestVariables_1.PostCreateRetweetRequestVariablesToJSON)(value["variables"])
      };
    }
    exports2.PostDeleteTweetRequestToJSONTyped = PostDeleteTweetRequestToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostFavoriteTweetRequest.js
var require_PostFavoriteTweetRequest = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostFavoriteTweetRequest.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostFavoriteTweetRequestToJSONTyped = exports2.PostFavoriteTweetRequestToJSON = exports2.PostFavoriteTweetRequestFromJSONTyped = exports2.PostFavoriteTweetRequestFromJSON = exports2.instanceOfPostFavoriteTweetRequest = void 0;
    var PostCreateBookmarkRequestVariables_1 = require_PostCreateBookmarkRequestVariables();
    function instanceOfPostFavoriteTweetRequest(value) {
      if (!("queryId" in value) || value["queryId"] === void 0)
        return false;
      if (!("variables" in value) || value["variables"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostFavoriteTweetRequest = instanceOfPostFavoriteTweetRequest;
    function PostFavoriteTweetRequestFromJSON(json) {
      return PostFavoriteTweetRequestFromJSONTyped(json, false);
    }
    exports2.PostFavoriteTweetRequestFromJSON = PostFavoriteTweetRequestFromJSON;
    function PostFavoriteTweetRequestFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "queryId": json["queryId"],
        "variables": (0, PostCreateBookmarkRequestVariables_1.PostCreateBookmarkRequestVariablesFromJSON)(json["variables"])
      };
    }
    exports2.PostFavoriteTweetRequestFromJSONTyped = PostFavoriteTweetRequestFromJSONTyped;
    function PostFavoriteTweetRequestToJSON(json) {
      return PostFavoriteTweetRequestToJSONTyped(json, false);
    }
    exports2.PostFavoriteTweetRequestToJSON = PostFavoriteTweetRequestToJSON;
    function PostFavoriteTweetRequestToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "queryId": value["queryId"],
        "variables": (0, PostCreateBookmarkRequestVariables_1.PostCreateBookmarkRequestVariablesToJSON)(value["variables"])
      };
    }
    exports2.PostFavoriteTweetRequestToJSONTyped = PostFavoriteTweetRequestToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostUnfavoriteTweetRequest.js
var require_PostUnfavoriteTweetRequest = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/PostUnfavoriteTweetRequest.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostUnfavoriteTweetRequestToJSONTyped = exports2.PostUnfavoriteTweetRequestToJSON = exports2.PostUnfavoriteTweetRequestFromJSONTyped = exports2.PostUnfavoriteTweetRequestFromJSON = exports2.instanceOfPostUnfavoriteTweetRequest = void 0;
    var PostCreateRetweetRequestVariables_1 = require_PostCreateRetweetRequestVariables();
    function instanceOfPostUnfavoriteTweetRequest(value) {
      if (!("queryId" in value) || value["queryId"] === void 0)
        return false;
      if (!("variables" in value) || value["variables"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfPostUnfavoriteTweetRequest = instanceOfPostUnfavoriteTweetRequest;
    function PostUnfavoriteTweetRequestFromJSON(json) {
      return PostUnfavoriteTweetRequestFromJSONTyped(json, false);
    }
    exports2.PostUnfavoriteTweetRequestFromJSON = PostUnfavoriteTweetRequestFromJSON;
    function PostUnfavoriteTweetRequestFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "queryId": json["queryId"],
        "variables": (0, PostCreateRetweetRequestVariables_1.PostCreateRetweetRequestVariablesFromJSON)(json["variables"])
      };
    }
    exports2.PostUnfavoriteTweetRequestFromJSONTyped = PostUnfavoriteTweetRequestFromJSONTyped;
    function PostUnfavoriteTweetRequestToJSON(json) {
      return PostUnfavoriteTweetRequestToJSONTyped(json, false);
    }
    exports2.PostUnfavoriteTweetRequestToJSON = PostUnfavoriteTweetRequestToJSON;
    function PostUnfavoriteTweetRequestToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "queryId": value["queryId"],
        "variables": (0, PostCreateRetweetRequestVariables_1.PostCreateRetweetRequestVariablesToJSON)(value["variables"])
      };
    }
    exports2.PostUnfavoriteTweetRequestToJSONTyped = PostUnfavoriteTweetRequestToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResultByScreenNameLegacy.js
var require_UserResultByScreenNameLegacy = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResultByScreenNameLegacy.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserResultByScreenNameLegacyToJSONTyped = exports2.UserResultByScreenNameLegacyToJSON = exports2.UserResultByScreenNameLegacyFromJSONTyped = exports2.UserResultByScreenNameLegacyFromJSON = exports2.instanceOfUserResultByScreenNameLegacy = void 0;
    function instanceOfUserResultByScreenNameLegacy(value) {
      return true;
    }
    exports2.instanceOfUserResultByScreenNameLegacy = instanceOfUserResultByScreenNameLegacy;
    function UserResultByScreenNameLegacyFromJSON(json) {
      return UserResultByScreenNameLegacyFromJSONTyped(json, false);
    }
    exports2.UserResultByScreenNameLegacyFromJSON = UserResultByScreenNameLegacyFromJSON;
    function UserResultByScreenNameLegacyFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "blockedBy": json["blocked_by"] == null ? void 0 : json["blocked_by"],
        "blocking": json["blocking"] == null ? void 0 : json["blocking"],
        "followedBy": json["followed_by"] == null ? void 0 : json["followed_by"],
        "following": json["following"] == null ? void 0 : json["following"],
        "name": json["name"] == null ? void 0 : json["name"],
        "_protected": json["protected"] == null ? void 0 : json["protected"],
        "screenName": json["screen_name"] == null ? void 0 : json["screen_name"]
      };
    }
    exports2.UserResultByScreenNameLegacyFromJSONTyped = UserResultByScreenNameLegacyFromJSONTyped;
    function UserResultByScreenNameLegacyToJSON(json) {
      return UserResultByScreenNameLegacyToJSONTyped(json, false);
    }
    exports2.UserResultByScreenNameLegacyToJSON = UserResultByScreenNameLegacyToJSON;
    function UserResultByScreenNameLegacyToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "blocked_by": value["blockedBy"],
        "blocking": value["blocking"],
        "followed_by": value["followedBy"],
        "following": value["following"],
        "name": value["name"],
        "protected": value["_protected"],
        "screen_name": value["screenName"]
      };
    }
    exports2.UserResultByScreenNameLegacyToJSONTyped = UserResultByScreenNameLegacyToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResultByScreenNameResult.js
var require_UserResultByScreenNameResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResultByScreenNameResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserResultByScreenNameResultToJSONTyped = exports2.UserResultByScreenNameResultToJSON = exports2.UserResultByScreenNameResultFromJSONTyped = exports2.UserResultByScreenNameResultFromJSON = exports2.instanceOfUserResultByScreenNameResult = void 0;
    var TypeName_1 = require_TypeName();
    var UserResultByScreenNameLegacy_1 = require_UserResultByScreenNameLegacy();
    function instanceOfUserResultByScreenNameResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("id" in value) || value["id"] === void 0)
        return false;
      if (!("legacy" in value) || value["legacy"] === void 0)
        return false;
      if (!("profilemodules" in value) || value["profilemodules"] === void 0)
        return false;
      if (!("restId" in value) || value["restId"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserResultByScreenNameResult = instanceOfUserResultByScreenNameResult;
    function UserResultByScreenNameResultFromJSON(json) {
      return UserResultByScreenNameResultFromJSONTyped(json, false);
    }
    exports2.UserResultByScreenNameResultFromJSON = UserResultByScreenNameResultFromJSON;
    function UserResultByScreenNameResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "id": json["id"],
        "legacy": (0, UserResultByScreenNameLegacy_1.UserResultByScreenNameLegacyFromJSON)(json["legacy"]),
        "profilemodules": json["profilemodules"],
        "restId": json["rest_id"]
      };
    }
    exports2.UserResultByScreenNameResultFromJSONTyped = UserResultByScreenNameResultFromJSONTyped;
    function UserResultByScreenNameResultToJSON(json) {
      return UserResultByScreenNameResultToJSONTyped(json, false);
    }
    exports2.UserResultByScreenNameResultToJSON = UserResultByScreenNameResultToJSON;
    function UserResultByScreenNameResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "id": value["id"],
        "legacy": (0, UserResultByScreenNameLegacy_1.UserResultByScreenNameLegacyToJSON)(value["legacy"]),
        "profilemodules": value["profilemodules"],
        "rest_id": value["restId"]
      };
    }
    exports2.UserResultByScreenNameResultToJSONTyped = UserResultByScreenNameResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResultByScreenName.js
var require_UserResultByScreenName = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResultByScreenName.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserResultByScreenNameToJSONTyped = exports2.UserResultByScreenNameToJSON = exports2.UserResultByScreenNameFromJSONTyped = exports2.UserResultByScreenNameFromJSON = exports2.instanceOfUserResultByScreenName = void 0;
    var UserResultByScreenNameResult_1 = require_UserResultByScreenNameResult();
    function instanceOfUserResultByScreenName(value) {
      if (!("id" in value) || value["id"] === void 0)
        return false;
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserResultByScreenName = instanceOfUserResultByScreenName;
    function UserResultByScreenNameFromJSON(json) {
      return UserResultByScreenNameFromJSONTyped(json, false);
    }
    exports2.UserResultByScreenNameFromJSON = UserResultByScreenNameFromJSON;
    function UserResultByScreenNameFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "id": json["id"],
        "result": (0, UserResultByScreenNameResult_1.UserResultByScreenNameResultFromJSON)(json["result"])
      };
    }
    exports2.UserResultByScreenNameFromJSONTyped = UserResultByScreenNameFromJSONTyped;
    function UserResultByScreenNameToJSON(json) {
      return UserResultByScreenNameToJSONTyped(json, false);
    }
    exports2.UserResultByScreenNameToJSON = UserResultByScreenNameToJSON;
    function UserResultByScreenNameToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "id": value["id"],
        "result": (0, UserResultByScreenNameResult_1.UserResultByScreenNameResultToJSON)(value["result"])
      };
    }
    exports2.UserResultByScreenNameToJSONTyped = UserResultByScreenNameToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ProfileResponseData.js
var require_ProfileResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ProfileResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ProfileResponseDataToJSONTyped = exports2.ProfileResponseDataToJSON = exports2.ProfileResponseDataFromJSONTyped = exports2.ProfileResponseDataFromJSON = exports2.instanceOfProfileResponseData = void 0;
    var UserResultByScreenName_1 = require_UserResultByScreenName();
    function instanceOfProfileResponseData(value) {
      return true;
    }
    exports2.instanceOfProfileResponseData = instanceOfProfileResponseData;
    function ProfileResponseDataFromJSON(json) {
      return ProfileResponseDataFromJSONTyped(json, false);
    }
    exports2.ProfileResponseDataFromJSON = ProfileResponseDataFromJSON;
    function ProfileResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "userResultByScreenName": json["user_result_by_screen_name"] == null ? void 0 : (0, UserResultByScreenName_1.UserResultByScreenNameFromJSON)(json["user_result_by_screen_name"])
      };
    }
    exports2.ProfileResponseDataFromJSONTyped = ProfileResponseDataFromJSONTyped;
    function ProfileResponseDataToJSON(json) {
      return ProfileResponseDataToJSONTyped(json, false);
    }
    exports2.ProfileResponseDataToJSON = ProfileResponseDataToJSON;
    function ProfileResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "user_result_by_screen_name": (0, UserResultByScreenName_1.UserResultByScreenNameToJSON)(value["userResultByScreenName"])
      };
    }
    exports2.ProfileResponseDataToJSONTyped = ProfileResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ProfileResponse.js
var require_ProfileResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/ProfileResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ProfileResponseToJSONTyped = exports2.ProfileResponseToJSON = exports2.ProfileResponseFromJSONTyped = exports2.ProfileResponseFromJSON = exports2.instanceOfProfileResponse = void 0;
    var ProfileResponseData_1 = require_ProfileResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfProfileResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfProfileResponse = instanceOfProfileResponse;
    function ProfileResponseFromJSON(json) {
      return ProfileResponseFromJSONTyped(json, false);
    }
    exports2.ProfileResponseFromJSON = ProfileResponseFromJSON;
    function ProfileResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, ProfileResponseData_1.ProfileResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.ProfileResponseFromJSONTyped = ProfileResponseFromJSONTyped;
    function ProfileResponseToJSON(json) {
      return ProfileResponseToJSONTyped(json, false);
    }
    exports2.ProfileResponseToJSON = ProfileResponseToJSON;
    function ProfileResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, ProfileResponseData_1.ProfileResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.ProfileResponseToJSONTyped = ProfileResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SearchTimeline.js
var require_SearchTimeline = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SearchTimeline.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SearchTimelineToJSONTyped = exports2.SearchTimelineToJSON = exports2.SearchTimelineFromJSONTyped = exports2.SearchTimelineFromJSON = exports2.instanceOfSearchTimeline = void 0;
    var Timeline_1 = require_Timeline();
    function instanceOfSearchTimeline(value) {
      if (!("timeline" in value) || value["timeline"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfSearchTimeline = instanceOfSearchTimeline;
    function SearchTimelineFromJSON(json) {
      return SearchTimelineFromJSONTyped(json, false);
    }
    exports2.SearchTimelineFromJSON = SearchTimelineFromJSON;
    function SearchTimelineFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "timeline": (0, Timeline_1.TimelineFromJSON)(json["timeline"])
      };
    }
    exports2.SearchTimelineFromJSONTyped = SearchTimelineFromJSONTyped;
    function SearchTimelineToJSON(json) {
      return SearchTimelineToJSONTyped(json, false);
    }
    exports2.SearchTimelineToJSON = SearchTimelineToJSON;
    function SearchTimelineToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "timeline": (0, Timeline_1.TimelineToJSON)(value["timeline"])
      };
    }
    exports2.SearchTimelineToJSONTyped = SearchTimelineToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SearchByRawQuery.js
var require_SearchByRawQuery = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SearchByRawQuery.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SearchByRawQueryToJSONTyped = exports2.SearchByRawQueryToJSON = exports2.SearchByRawQueryFromJSONTyped = exports2.SearchByRawQueryFromJSON = exports2.instanceOfSearchByRawQuery = void 0;
    var SearchTimeline_1 = require_SearchTimeline();
    function instanceOfSearchByRawQuery(value) {
      if (!("searchTimeline" in value) || value["searchTimeline"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfSearchByRawQuery = instanceOfSearchByRawQuery;
    function SearchByRawQueryFromJSON(json) {
      return SearchByRawQueryFromJSONTyped(json, false);
    }
    exports2.SearchByRawQueryFromJSON = SearchByRawQueryFromJSON;
    function SearchByRawQueryFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "searchTimeline": (0, SearchTimeline_1.SearchTimelineFromJSON)(json["search_timeline"])
      };
    }
    exports2.SearchByRawQueryFromJSONTyped = SearchByRawQueryFromJSONTyped;
    function SearchByRawQueryToJSON(json) {
      return SearchByRawQueryToJSONTyped(json, false);
    }
    exports2.SearchByRawQueryToJSON = SearchByRawQueryToJSON;
    function SearchByRawQueryToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "search_timeline": (0, SearchTimeline_1.SearchTimelineToJSON)(value["searchTimeline"])
      };
    }
    exports2.SearchByRawQueryToJSONTyped = SearchByRawQueryToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SearchTimelineData.js
var require_SearchTimelineData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SearchTimelineData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SearchTimelineDataToJSONTyped = exports2.SearchTimelineDataToJSON = exports2.SearchTimelineDataFromJSONTyped = exports2.SearchTimelineDataFromJSON = exports2.instanceOfSearchTimelineData = void 0;
    var SearchByRawQuery_1 = require_SearchByRawQuery();
    function instanceOfSearchTimelineData(value) {
      return true;
    }
    exports2.instanceOfSearchTimelineData = instanceOfSearchTimelineData;
    function SearchTimelineDataFromJSON(json) {
      return SearchTimelineDataFromJSONTyped(json, false);
    }
    exports2.SearchTimelineDataFromJSON = SearchTimelineDataFromJSON;
    function SearchTimelineDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "searchByRawQuery": json["search_by_raw_query"] == null ? void 0 : (0, SearchByRawQuery_1.SearchByRawQueryFromJSON)(json["search_by_raw_query"])
      };
    }
    exports2.SearchTimelineDataFromJSONTyped = SearchTimelineDataFromJSONTyped;
    function SearchTimelineDataToJSON(json) {
      return SearchTimelineDataToJSONTyped(json, false);
    }
    exports2.SearchTimelineDataToJSON = SearchTimelineDataToJSON;
    function SearchTimelineDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "search_by_raw_query": (0, SearchByRawQuery_1.SearchByRawQueryToJSON)(value["searchByRawQuery"])
      };
    }
    exports2.SearchTimelineDataToJSONTyped = SearchTimelineDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SearchTimelineResponse.js
var require_SearchTimelineResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/SearchTimelineResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SearchTimelineResponseToJSONTyped = exports2.SearchTimelineResponseToJSON = exports2.SearchTimelineResponseFromJSONTyped = exports2.SearchTimelineResponseFromJSON = exports2.instanceOfSearchTimelineResponse = void 0;
    var SearchTimelineData_1 = require_SearchTimelineData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfSearchTimelineResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfSearchTimelineResponse = instanceOfSearchTimelineResponse;
    function SearchTimelineResponseFromJSON(json) {
      return SearchTimelineResponseFromJSONTyped(json, false);
    }
    exports2.SearchTimelineResponseFromJSON = SearchTimelineResponseFromJSON;
    function SearchTimelineResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, SearchTimelineData_1.SearchTimelineDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.SearchTimelineResponseFromJSONTyped = SearchTimelineResponseFromJSONTyped;
    function SearchTimelineResponseToJSON(json) {
      return SearchTimelineResponseToJSONTyped(json, false);
    }
    exports2.SearchTimelineResponseToJSON = SearchTimelineResponseToJSON;
    function SearchTimelineResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, SearchTimelineData_1.SearchTimelineDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.SearchTimelineResponseToJSONTyped = SearchTimelineResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineResponse.js
var require_TimelineResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineResponseToJSONTyped = exports2.TimelineResponseToJSON = exports2.TimelineResponseFromJSONTyped = exports2.TimelineResponseFromJSON = exports2.instanceOfTimelineResponse = void 0;
    var HomeTimelineResponseData_1 = require_HomeTimelineResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfTimelineResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTimelineResponse = instanceOfTimelineResponse;
    function TimelineResponseFromJSON(json) {
      return TimelineResponseFromJSONTyped(json, false);
    }
    exports2.TimelineResponseFromJSON = TimelineResponseFromJSON;
    function TimelineResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, HomeTimelineResponseData_1.HomeTimelineResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.TimelineResponseFromJSONTyped = TimelineResponseFromJSONTyped;
    function TimelineResponseToJSON(json) {
      return TimelineResponseToJSONTyped(json, false);
    }
    exports2.TimelineResponseToJSON = TimelineResponseToJSON;
    function TimelineResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, HomeTimelineResponseData_1.HomeTimelineResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.TimelineResponseToJSONTyped = TimelineResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineV2.js
var require_TimelineV2 = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TimelineV2.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TimelineV2ToJSONTyped = exports2.TimelineV2ToJSON = exports2.TimelineV2FromJSONTyped = exports2.TimelineV2FromJSON = exports2.instanceOfTimelineV2 = void 0;
    var Timeline_1 = require_Timeline();
    function instanceOfTimelineV2(value) {
      return true;
    }
    exports2.instanceOfTimelineV2 = instanceOfTimelineV2;
    function TimelineV2FromJSON(json) {
      return TimelineV2FromJSONTyped(json, false);
    }
    exports2.TimelineV2FromJSON = TimelineV2FromJSON;
    function TimelineV2FromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "timeline": json["timeline"] == null ? void 0 : (0, Timeline_1.TimelineFromJSON)(json["timeline"])
      };
    }
    exports2.TimelineV2FromJSONTyped = TimelineV2FromJSONTyped;
    function TimelineV2ToJSON(json) {
      return TimelineV2ToJSONTyped(json, false);
    }
    exports2.TimelineV2ToJSON = TimelineV2ToJSON;
    function TimelineV2ToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "timeline": (0, Timeline_1.TimelineToJSON)(value["timeline"])
      };
    }
    exports2.TimelineV2ToJSONTyped = TimelineV2ToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetDetailResponseData.js
var require_TweetDetailResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetDetailResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetDetailResponseDataToJSONTyped = exports2.TweetDetailResponseDataToJSON = exports2.TweetDetailResponseDataFromJSONTyped = exports2.TweetDetailResponseDataFromJSON = exports2.instanceOfTweetDetailResponseData = void 0;
    var Timeline_1 = require_Timeline();
    function instanceOfTweetDetailResponseData(value) {
      return true;
    }
    exports2.instanceOfTweetDetailResponseData = instanceOfTweetDetailResponseData;
    function TweetDetailResponseDataFromJSON(json) {
      return TweetDetailResponseDataFromJSONTyped(json, false);
    }
    exports2.TweetDetailResponseDataFromJSON = TweetDetailResponseDataFromJSON;
    function TweetDetailResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "threadedConversationWithInjectionsV2": json["threaded_conversation_with_injections_v2"] == null ? void 0 : (0, Timeline_1.TimelineFromJSON)(json["threaded_conversation_with_injections_v2"])
      };
    }
    exports2.TweetDetailResponseDataFromJSONTyped = TweetDetailResponseDataFromJSONTyped;
    function TweetDetailResponseDataToJSON(json) {
      return TweetDetailResponseDataToJSONTyped(json, false);
    }
    exports2.TweetDetailResponseDataToJSON = TweetDetailResponseDataToJSON;
    function TweetDetailResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "threaded_conversation_with_injections_v2": (0, Timeline_1.TimelineToJSON)(value["threadedConversationWithInjectionsV2"])
      };
    }
    exports2.TweetDetailResponseDataToJSONTyped = TweetDetailResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetDetailResponse.js
var require_TweetDetailResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetDetailResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetDetailResponseToJSONTyped = exports2.TweetDetailResponseToJSON = exports2.TweetDetailResponseFromJSONTyped = exports2.TweetDetailResponseFromJSON = exports2.instanceOfTweetDetailResponse = void 0;
    var ErrorResponse_1 = require_ErrorResponse();
    var TweetDetailResponseData_1 = require_TweetDetailResponseData();
    function instanceOfTweetDetailResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetDetailResponse = instanceOfTweetDetailResponse;
    function TweetDetailResponseFromJSON(json) {
      return TweetDetailResponseFromJSONTyped(json, false);
    }
    exports2.TweetDetailResponseFromJSON = TweetDetailResponseFromJSON;
    function TweetDetailResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, TweetDetailResponseData_1.TweetDetailResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.TweetDetailResponseFromJSONTyped = TweetDetailResponseFromJSONTyped;
    function TweetDetailResponseToJSON(json) {
      return TweetDetailResponseToJSONTyped(json, false);
    }
    exports2.TweetDetailResponseToJSON = TweetDetailResponseToJSON;
    function TweetDetailResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, TweetDetailResponseData_1.TweetDetailResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.TweetDetailResponseToJSONTyped = TweetDetailResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetFavoritersResponseData.js
var require_TweetFavoritersResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetFavoritersResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetFavoritersResponseDataToJSONTyped = exports2.TweetFavoritersResponseDataToJSON = exports2.TweetFavoritersResponseDataFromJSONTyped = exports2.TweetFavoritersResponseDataFromJSON = exports2.instanceOfTweetFavoritersResponseData = void 0;
    var TimelineV2_1 = require_TimelineV2();
    function instanceOfTweetFavoritersResponseData(value) {
      return true;
    }
    exports2.instanceOfTweetFavoritersResponseData = instanceOfTweetFavoritersResponseData;
    function TweetFavoritersResponseDataFromJSON(json) {
      return TweetFavoritersResponseDataFromJSONTyped(json, false);
    }
    exports2.TweetFavoritersResponseDataFromJSON = TweetFavoritersResponseDataFromJSON;
    function TweetFavoritersResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "favoritersTimeline": json["favoriters_timeline"] == null ? void 0 : (0, TimelineV2_1.TimelineV2FromJSON)(json["favoriters_timeline"])
      };
    }
    exports2.TweetFavoritersResponseDataFromJSONTyped = TweetFavoritersResponseDataFromJSONTyped;
    function TweetFavoritersResponseDataToJSON(json) {
      return TweetFavoritersResponseDataToJSONTyped(json, false);
    }
    exports2.TweetFavoritersResponseDataToJSON = TweetFavoritersResponseDataToJSON;
    function TweetFavoritersResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "favoriters_timeline": (0, TimelineV2_1.TimelineV2ToJSON)(value["favoritersTimeline"])
      };
    }
    exports2.TweetFavoritersResponseDataToJSONTyped = TweetFavoritersResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetFavoritersResponse.js
var require_TweetFavoritersResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetFavoritersResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetFavoritersResponseToJSONTyped = exports2.TweetFavoritersResponseToJSON = exports2.TweetFavoritersResponseFromJSONTyped = exports2.TweetFavoritersResponseFromJSON = exports2.instanceOfTweetFavoritersResponse = void 0;
    var TweetFavoritersResponseData_1 = require_TweetFavoritersResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfTweetFavoritersResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetFavoritersResponse = instanceOfTweetFavoritersResponse;
    function TweetFavoritersResponseFromJSON(json) {
      return TweetFavoritersResponseFromJSONTyped(json, false);
    }
    exports2.TweetFavoritersResponseFromJSON = TweetFavoritersResponseFromJSON;
    function TweetFavoritersResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, TweetFavoritersResponseData_1.TweetFavoritersResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.TweetFavoritersResponseFromJSONTyped = TweetFavoritersResponseFromJSONTyped;
    function TweetFavoritersResponseToJSON(json) {
      return TweetFavoritersResponseToJSONTyped(json, false);
    }
    exports2.TweetFavoritersResponseToJSON = TweetFavoritersResponseToJSON;
    function TweetFavoritersResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, TweetFavoritersResponseData_1.TweetFavoritersResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.TweetFavoritersResponseToJSONTyped = TweetFavoritersResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetResultByRestIdData.js
var require_TweetResultByRestIdData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetResultByRestIdData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetResultByRestIdDataToJSONTyped = exports2.TweetResultByRestIdDataToJSON = exports2.TweetResultByRestIdDataFromJSONTyped = exports2.TweetResultByRestIdDataFromJSON = exports2.instanceOfTweetResultByRestIdData = void 0;
    var ItemResult_1 = require_ItemResult();
    function instanceOfTweetResultByRestIdData(value) {
      return true;
    }
    exports2.instanceOfTweetResultByRestIdData = instanceOfTweetResultByRestIdData;
    function TweetResultByRestIdDataFromJSON(json) {
      return TweetResultByRestIdDataFromJSONTyped(json, false);
    }
    exports2.TweetResultByRestIdDataFromJSON = TweetResultByRestIdDataFromJSON;
    function TweetResultByRestIdDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "tweetResult": json["tweetResult"] == null ? void 0 : (0, ItemResult_1.ItemResultFromJSON)(json["tweetResult"])
      };
    }
    exports2.TweetResultByRestIdDataFromJSONTyped = TweetResultByRestIdDataFromJSONTyped;
    function TweetResultByRestIdDataToJSON(json) {
      return TweetResultByRestIdDataToJSONTyped(json, false);
    }
    exports2.TweetResultByRestIdDataToJSON = TweetResultByRestIdDataToJSON;
    function TweetResultByRestIdDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "tweetResult": (0, ItemResult_1.ItemResultToJSON)(value["tweetResult"])
      };
    }
    exports2.TweetResultByRestIdDataToJSONTyped = TweetResultByRestIdDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetResultByRestIdResponse.js
var require_TweetResultByRestIdResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetResultByRestIdResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetResultByRestIdResponseToJSONTyped = exports2.TweetResultByRestIdResponseToJSON = exports2.TweetResultByRestIdResponseFromJSONTyped = exports2.TweetResultByRestIdResponseFromJSON = exports2.instanceOfTweetResultByRestIdResponse = void 0;
    var TweetResultByRestIdData_1 = require_TweetResultByRestIdData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfTweetResultByRestIdResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetResultByRestIdResponse = instanceOfTweetResultByRestIdResponse;
    function TweetResultByRestIdResponseFromJSON(json) {
      return TweetResultByRestIdResponseFromJSONTyped(json, false);
    }
    exports2.TweetResultByRestIdResponseFromJSON = TweetResultByRestIdResponseFromJSON;
    function TweetResultByRestIdResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, TweetResultByRestIdData_1.TweetResultByRestIdDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.TweetResultByRestIdResponseFromJSONTyped = TweetResultByRestIdResponseFromJSONTyped;
    function TweetResultByRestIdResponseToJSON(json) {
      return TweetResultByRestIdResponseToJSONTyped(json, false);
    }
    exports2.TweetResultByRestIdResponseToJSON = TweetResultByRestIdResponseToJSON;
    function TweetResultByRestIdResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, TweetResultByRestIdData_1.TweetResultByRestIdDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.TweetResultByRestIdResponseToJSONTyped = TweetResultByRestIdResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetRetweetersResponseData.js
var require_TweetRetweetersResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetRetweetersResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetRetweetersResponseDataToJSONTyped = exports2.TweetRetweetersResponseDataToJSON = exports2.TweetRetweetersResponseDataFromJSONTyped = exports2.TweetRetweetersResponseDataFromJSON = exports2.instanceOfTweetRetweetersResponseData = void 0;
    var TimelineV2_1 = require_TimelineV2();
    function instanceOfTweetRetweetersResponseData(value) {
      return true;
    }
    exports2.instanceOfTweetRetweetersResponseData = instanceOfTweetRetweetersResponseData;
    function TweetRetweetersResponseDataFromJSON(json) {
      return TweetRetweetersResponseDataFromJSONTyped(json, false);
    }
    exports2.TweetRetweetersResponseDataFromJSON = TweetRetweetersResponseDataFromJSON;
    function TweetRetweetersResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "retweetersTimeline": json["retweeters_timeline"] == null ? void 0 : (0, TimelineV2_1.TimelineV2FromJSON)(json["retweeters_timeline"])
      };
    }
    exports2.TweetRetweetersResponseDataFromJSONTyped = TweetRetweetersResponseDataFromJSONTyped;
    function TweetRetweetersResponseDataToJSON(json) {
      return TweetRetweetersResponseDataToJSONTyped(json, false);
    }
    exports2.TweetRetweetersResponseDataToJSON = TweetRetweetersResponseDataToJSON;
    function TweetRetweetersResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "retweeters_timeline": (0, TimelineV2_1.TimelineV2ToJSON)(value["retweetersTimeline"])
      };
    }
    exports2.TweetRetweetersResponseDataToJSONTyped = TweetRetweetersResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetRetweetersResponse.js
var require_TweetRetweetersResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/TweetRetweetersResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetRetweetersResponseToJSONTyped = exports2.TweetRetweetersResponseToJSON = exports2.TweetRetweetersResponseFromJSONTyped = exports2.TweetRetweetersResponseFromJSON = exports2.instanceOfTweetRetweetersResponse = void 0;
    var TweetRetweetersResponseData_1 = require_TweetRetweetersResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfTweetRetweetersResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfTweetRetweetersResponse = instanceOfTweetRetweetersResponse;
    function TweetRetweetersResponseFromJSON(json) {
      return TweetRetweetersResponseFromJSONTyped(json, false);
    }
    exports2.TweetRetweetersResponseFromJSON = TweetRetweetersResponseFromJSON;
    function TweetRetweetersResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, TweetRetweetersResponseData_1.TweetRetweetersResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.TweetRetweetersResponseFromJSONTyped = TweetRetweetersResponseFromJSONTyped;
    function TweetRetweetersResponseToJSON(json) {
      return TweetRetweetersResponseToJSONTyped(json, false);
    }
    exports2.TweetRetweetersResponseToJSON = TweetRetweetersResponseToJSON;
    function TweetRetweetersResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, TweetRetweetersResponseData_1.TweetRetweetersResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.TweetRetweetersResponseToJSONTyped = TweetRetweetersResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UnfavoriteTweet.js
var require_UnfavoriteTweet = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UnfavoriteTweet.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UnfavoriteTweetToJSONTyped = exports2.UnfavoriteTweetToJSON = exports2.UnfavoriteTweetFromJSONTyped = exports2.UnfavoriteTweetFromJSON = exports2.instanceOfUnfavoriteTweet = void 0;
    function instanceOfUnfavoriteTweet(value) {
      return true;
    }
    exports2.instanceOfUnfavoriteTweet = instanceOfUnfavoriteTweet;
    function UnfavoriteTweetFromJSON(json) {
      return UnfavoriteTweetFromJSONTyped(json, false);
    }
    exports2.UnfavoriteTweetFromJSON = UnfavoriteTweetFromJSON;
    function UnfavoriteTweetFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "unfavoriteTweet": json["unfavorite_tweet"] == null ? void 0 : json["unfavorite_tweet"]
      };
    }
    exports2.UnfavoriteTweetFromJSONTyped = UnfavoriteTweetFromJSONTyped;
    function UnfavoriteTweetToJSON(json) {
      return UnfavoriteTweetToJSONTyped(json, false);
    }
    exports2.UnfavoriteTweetToJSON = UnfavoriteTweetToJSON;
    function UnfavoriteTweetToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "unfavorite_tweet": value["unfavoriteTweet"]
      };
    }
    exports2.UnfavoriteTweetToJSONTyped = UnfavoriteTweetToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UnfavoriteTweetResponse.js
var require_UnfavoriteTweetResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UnfavoriteTweetResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UnfavoriteTweetResponseToJSONTyped = exports2.UnfavoriteTweetResponseToJSON = exports2.UnfavoriteTweetResponseFromJSONTyped = exports2.UnfavoriteTweetResponseFromJSON = exports2.instanceOfUnfavoriteTweetResponse = void 0;
    var UnfavoriteTweet_1 = require_UnfavoriteTweet();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfUnfavoriteTweetResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUnfavoriteTweetResponse = instanceOfUnfavoriteTweetResponse;
    function UnfavoriteTweetResponseFromJSON(json) {
      return UnfavoriteTweetResponseFromJSONTyped(json, false);
    }
    exports2.UnfavoriteTweetResponseFromJSON = UnfavoriteTweetResponseFromJSON;
    function UnfavoriteTweetResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, UnfavoriteTweet_1.UnfavoriteTweetFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.UnfavoriteTweetResponseFromJSONTyped = UnfavoriteTweetResponseFromJSONTyped;
    function UnfavoriteTweetResponseToJSON(json) {
      return UnfavoriteTweetResponseToJSONTyped(json, false);
    }
    exports2.UnfavoriteTweetResponseToJSON = UnfavoriteTweetResponseToJSON;
    function UnfavoriteTweetResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, UnfavoriteTweet_1.UnfavoriteTweetToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.UnfavoriteTweetResponseToJSONTyped = UnfavoriteTweetResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsTimeline.js
var require_UserHighlightsTweetsTimeline = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsTimeline.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserHighlightsTweetsTimelineToJSONTyped = exports2.UserHighlightsTweetsTimelineToJSON = exports2.UserHighlightsTweetsTimelineFromJSONTyped = exports2.UserHighlightsTweetsTimelineFromJSON = exports2.instanceOfUserHighlightsTweetsTimeline = void 0;
    var Timeline_1 = require_Timeline();
    function instanceOfUserHighlightsTweetsTimeline(value) {
      if (!("timeline" in value) || value["timeline"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserHighlightsTweetsTimeline = instanceOfUserHighlightsTweetsTimeline;
    function UserHighlightsTweetsTimelineFromJSON(json) {
      return UserHighlightsTweetsTimelineFromJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsTimelineFromJSON = UserHighlightsTweetsTimelineFromJSON;
    function UserHighlightsTweetsTimelineFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "timeline": (0, Timeline_1.TimelineFromJSON)(json["timeline"])
      };
    }
    exports2.UserHighlightsTweetsTimelineFromJSONTyped = UserHighlightsTweetsTimelineFromJSONTyped;
    function UserHighlightsTweetsTimelineToJSON(json) {
      return UserHighlightsTweetsTimelineToJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsTimelineToJSON = UserHighlightsTweetsTimelineToJSON;
    function UserHighlightsTweetsTimelineToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "timeline": (0, Timeline_1.TimelineToJSON)(value["timeline"])
      };
    }
    exports2.UserHighlightsTweetsTimelineToJSONTyped = UserHighlightsTweetsTimelineToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsResult.js
var require_UserHighlightsTweetsResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserHighlightsTweetsResultToJSONTyped = exports2.UserHighlightsTweetsResultToJSON = exports2.UserHighlightsTweetsResultFromJSONTyped = exports2.UserHighlightsTweetsResultFromJSON = exports2.instanceOfUserHighlightsTweetsResult = void 0;
    var TypeName_1 = require_TypeName();
    var UserHighlightsTweetsTimeline_1 = require_UserHighlightsTweetsTimeline();
    function instanceOfUserHighlightsTweetsResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("timeline" in value) || value["timeline"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserHighlightsTweetsResult = instanceOfUserHighlightsTweetsResult;
    function UserHighlightsTweetsResultFromJSON(json) {
      return UserHighlightsTweetsResultFromJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsResultFromJSON = UserHighlightsTweetsResultFromJSON;
    function UserHighlightsTweetsResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "timeline": (0, UserHighlightsTweetsTimeline_1.UserHighlightsTweetsTimelineFromJSON)(json["timeline"])
      };
    }
    exports2.UserHighlightsTweetsResultFromJSONTyped = UserHighlightsTweetsResultFromJSONTyped;
    function UserHighlightsTweetsResultToJSON(json) {
      return UserHighlightsTweetsResultToJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsResultToJSON = UserHighlightsTweetsResultToJSON;
    function UserHighlightsTweetsResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "timeline": (0, UserHighlightsTweetsTimeline_1.UserHighlightsTweetsTimelineToJSON)(value["timeline"])
      };
    }
    exports2.UserHighlightsTweetsResultToJSONTyped = UserHighlightsTweetsResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsUser.js
var require_UserHighlightsTweetsUser = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsUser.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserHighlightsTweetsUserToJSONTyped = exports2.UserHighlightsTweetsUserToJSON = exports2.UserHighlightsTweetsUserFromJSONTyped = exports2.UserHighlightsTweetsUserFromJSON = exports2.instanceOfUserHighlightsTweetsUser = void 0;
    var UserHighlightsTweetsResult_1 = require_UserHighlightsTweetsResult();
    function instanceOfUserHighlightsTweetsUser(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserHighlightsTweetsUser = instanceOfUserHighlightsTweetsUser;
    function UserHighlightsTweetsUserFromJSON(json) {
      return UserHighlightsTweetsUserFromJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsUserFromJSON = UserHighlightsTweetsUserFromJSON;
    function UserHighlightsTweetsUserFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, UserHighlightsTweetsResult_1.UserHighlightsTweetsResultFromJSON)(json["result"])
      };
    }
    exports2.UserHighlightsTweetsUserFromJSONTyped = UserHighlightsTweetsUserFromJSONTyped;
    function UserHighlightsTweetsUserToJSON(json) {
      return UserHighlightsTweetsUserToJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsUserToJSON = UserHighlightsTweetsUserToJSON;
    function UserHighlightsTweetsUserToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, UserHighlightsTweetsResult_1.UserHighlightsTweetsResultToJSON)(value["result"])
      };
    }
    exports2.UserHighlightsTweetsUserToJSONTyped = UserHighlightsTweetsUserToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsData.js
var require_UserHighlightsTweetsData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserHighlightsTweetsDataToJSONTyped = exports2.UserHighlightsTweetsDataToJSON = exports2.UserHighlightsTweetsDataFromJSONTyped = exports2.UserHighlightsTweetsDataFromJSON = exports2.instanceOfUserHighlightsTweetsData = void 0;
    var UserHighlightsTweetsUser_1 = require_UserHighlightsTweetsUser();
    function instanceOfUserHighlightsTweetsData(value) {
      return true;
    }
    exports2.instanceOfUserHighlightsTweetsData = instanceOfUserHighlightsTweetsData;
    function UserHighlightsTweetsDataFromJSON(json) {
      return UserHighlightsTweetsDataFromJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsDataFromJSON = UserHighlightsTweetsDataFromJSON;
    function UserHighlightsTweetsDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "user": json["user"] == null ? void 0 : (0, UserHighlightsTweetsUser_1.UserHighlightsTweetsUserFromJSON)(json["user"])
      };
    }
    exports2.UserHighlightsTweetsDataFromJSONTyped = UserHighlightsTweetsDataFromJSONTyped;
    function UserHighlightsTweetsDataToJSON(json) {
      return UserHighlightsTweetsDataToJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsDataToJSON = UserHighlightsTweetsDataToJSON;
    function UserHighlightsTweetsDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "user": (0, UserHighlightsTweetsUser_1.UserHighlightsTweetsUserToJSON)(value["user"])
      };
    }
    exports2.UserHighlightsTweetsDataToJSONTyped = UserHighlightsTweetsDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsResponse.js
var require_UserHighlightsTweetsResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserHighlightsTweetsResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserHighlightsTweetsResponseToJSONTyped = exports2.UserHighlightsTweetsResponseToJSON = exports2.UserHighlightsTweetsResponseFromJSONTyped = exports2.UserHighlightsTweetsResponseFromJSON = exports2.instanceOfUserHighlightsTweetsResponse = void 0;
    var UserHighlightsTweetsData_1 = require_UserHighlightsTweetsData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfUserHighlightsTweetsResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserHighlightsTweetsResponse = instanceOfUserHighlightsTweetsResponse;
    function UserHighlightsTweetsResponseFromJSON(json) {
      return UserHighlightsTweetsResponseFromJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsResponseFromJSON = UserHighlightsTweetsResponseFromJSON;
    function UserHighlightsTweetsResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, UserHighlightsTweetsData_1.UserHighlightsTweetsDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.UserHighlightsTweetsResponseFromJSONTyped = UserHighlightsTweetsResponseFromJSONTyped;
    function UserHighlightsTweetsResponseToJSON(json) {
      return UserHighlightsTweetsResponseToJSONTyped(json, false);
    }
    exports2.UserHighlightsTweetsResponseToJSON = UserHighlightsTweetsResponseToJSON;
    function UserHighlightsTweetsResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, UserHighlightsTweetsData_1.UserHighlightsTweetsDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.UserHighlightsTweetsResponseToJSONTyped = UserHighlightsTweetsResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResponseData.js
var require_UserResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserResponseDataToJSONTyped = exports2.UserResponseDataToJSON = exports2.UserResponseDataFromJSONTyped = exports2.UserResponseDataFromJSON = exports2.instanceOfUserResponseData = void 0;
    var UserResults_1 = require_UserResults();
    function instanceOfUserResponseData(value) {
      return true;
    }
    exports2.instanceOfUserResponseData = instanceOfUserResponseData;
    function UserResponseDataFromJSON(json) {
      return UserResponseDataFromJSONTyped(json, false);
    }
    exports2.UserResponseDataFromJSON = UserResponseDataFromJSON;
    function UserResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "user": json["user"] == null ? void 0 : (0, UserResults_1.UserResultsFromJSON)(json["user"])
      };
    }
    exports2.UserResponseDataFromJSONTyped = UserResponseDataFromJSONTyped;
    function UserResponseDataToJSON(json) {
      return UserResponseDataToJSONTyped(json, false);
    }
    exports2.UserResponseDataToJSON = UserResponseDataToJSON;
    function UserResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "user": (0, UserResults_1.UserResultsToJSON)(value["user"])
      };
    }
    exports2.UserResponseDataToJSONTyped = UserResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResponse.js
var require_UserResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserResponseToJSONTyped = exports2.UserResponseToJSON = exports2.UserResponseFromJSONTyped = exports2.UserResponseFromJSON = exports2.instanceOfUserResponse = void 0;
    var UserResponseData_1 = require_UserResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfUserResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserResponse = instanceOfUserResponse;
    function UserResponseFromJSON(json) {
      return UserResponseFromJSONTyped(json, false);
    }
    exports2.UserResponseFromJSON = UserResponseFromJSON;
    function UserResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, UserResponseData_1.UserResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.UserResponseFromJSONTyped = UserResponseFromJSONTyped;
    function UserResponseToJSON(json) {
      return UserResponseToJSONTyped(json, false);
    }
    exports2.UserResponseToJSON = UserResponseToJSON;
    function UserResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, UserResponseData_1.UserResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.UserResponseToJSONTyped = UserResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTweetsResult.js
var require_UserTweetsResult = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTweetsResult.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserTweetsResultToJSONTyped = exports2.UserTweetsResultToJSON = exports2.UserTweetsResultFromJSONTyped = exports2.UserTweetsResultFromJSON = exports2.instanceOfUserTweetsResult = void 0;
    var TypeName_1 = require_TypeName();
    var TimelineV2_1 = require_TimelineV2();
    function instanceOfUserTweetsResult(value) {
      if (!("typename" in value) || value["typename"] === void 0)
        return false;
      if (!("timelineV2" in value) || value["timelineV2"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserTweetsResult = instanceOfUserTweetsResult;
    function UserTweetsResultFromJSON(json) {
      return UserTweetsResultFromJSONTyped(json, false);
    }
    exports2.UserTweetsResultFromJSON = UserTweetsResultFromJSON;
    function UserTweetsResultFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "typename": (0, TypeName_1.TypeNameFromJSON)(json["__typename"]),
        "timelineV2": (0, TimelineV2_1.TimelineV2FromJSON)(json["timeline_v2"])
      };
    }
    exports2.UserTweetsResultFromJSONTyped = UserTweetsResultFromJSONTyped;
    function UserTweetsResultToJSON(json) {
      return UserTweetsResultToJSONTyped(json, false);
    }
    exports2.UserTweetsResultToJSON = UserTweetsResultToJSON;
    function UserTweetsResultToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "__typename": (0, TypeName_1.TypeNameToJSON)(value["typename"]),
        "timeline_v2": (0, TimelineV2_1.TimelineV2ToJSON)(value["timelineV2"])
      };
    }
    exports2.UserTweetsResultToJSONTyped = UserTweetsResultToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTweetsUser.js
var require_UserTweetsUser = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTweetsUser.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserTweetsUserToJSONTyped = exports2.UserTweetsUserToJSON = exports2.UserTweetsUserFromJSONTyped = exports2.UserTweetsUserFromJSON = exports2.instanceOfUserTweetsUser = void 0;
    var UserTweetsResult_1 = require_UserTweetsResult();
    function instanceOfUserTweetsUser(value) {
      if (!("result" in value) || value["result"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserTweetsUser = instanceOfUserTweetsUser;
    function UserTweetsUserFromJSON(json) {
      return UserTweetsUserFromJSONTyped(json, false);
    }
    exports2.UserTweetsUserFromJSON = UserTweetsUserFromJSON;
    function UserTweetsUserFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "result": (0, UserTweetsResult_1.UserTweetsResultFromJSON)(json["result"])
      };
    }
    exports2.UserTweetsUserFromJSONTyped = UserTweetsUserFromJSONTyped;
    function UserTweetsUserToJSON(json) {
      return UserTweetsUserToJSONTyped(json, false);
    }
    exports2.UserTweetsUserToJSON = UserTweetsUserToJSON;
    function UserTweetsUserToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "result": (0, UserTweetsResult_1.UserTweetsResultToJSON)(value["result"])
      };
    }
    exports2.UserTweetsUserToJSONTyped = UserTweetsUserToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTweetsData.js
var require_UserTweetsData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTweetsData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserTweetsDataToJSONTyped = exports2.UserTweetsDataToJSON = exports2.UserTweetsDataFromJSONTyped = exports2.UserTweetsDataFromJSON = exports2.instanceOfUserTweetsData = void 0;
    var UserTweetsUser_1 = require_UserTweetsUser();
    function instanceOfUserTweetsData(value) {
      return true;
    }
    exports2.instanceOfUserTweetsData = instanceOfUserTweetsData;
    function UserTweetsDataFromJSON(json) {
      return UserTweetsDataFromJSONTyped(json, false);
    }
    exports2.UserTweetsDataFromJSON = UserTweetsDataFromJSON;
    function UserTweetsDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "user": json["user"] == null ? void 0 : (0, UserTweetsUser_1.UserTweetsUserFromJSON)(json["user"])
      };
    }
    exports2.UserTweetsDataFromJSONTyped = UserTweetsDataFromJSONTyped;
    function UserTweetsDataToJSON(json) {
      return UserTweetsDataToJSONTyped(json, false);
    }
    exports2.UserTweetsDataToJSON = UserTweetsDataToJSON;
    function UserTweetsDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "user": (0, UserTweetsUser_1.UserTweetsUserToJSON)(value["user"])
      };
    }
    exports2.UserTweetsDataToJSONTyped = UserTweetsDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTweetsResponse.js
var require_UserTweetsResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UserTweetsResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserTweetsResponseToJSONTyped = exports2.UserTweetsResponseToJSON = exports2.UserTweetsResponseFromJSONTyped = exports2.UserTweetsResponseFromJSON = exports2.instanceOfUserTweetsResponse = void 0;
    var UserTweetsData_1 = require_UserTweetsData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfUserTweetsResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUserTweetsResponse = instanceOfUserTweetsResponse;
    function UserTweetsResponseFromJSON(json) {
      return UserTweetsResponseFromJSONTyped(json, false);
    }
    exports2.UserTweetsResponseFromJSON = UserTweetsResponseFromJSON;
    function UserTweetsResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, UserTweetsData_1.UserTweetsDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.UserTweetsResponseFromJSONTyped = UserTweetsResponseFromJSONTyped;
    function UserTweetsResponseToJSON(json) {
      return UserTweetsResponseToJSONTyped(json, false);
    }
    exports2.UserTweetsResponseToJSON = UserTweetsResponseToJSON;
    function UserTweetsResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, UserTweetsData_1.UserTweetsDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.UserTweetsResponseToJSONTyped = UserTweetsResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UsersResponseData.js
var require_UsersResponseData = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UsersResponseData.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UsersResponseDataToJSONTyped = exports2.UsersResponseDataToJSON = exports2.UsersResponseDataFromJSONTyped = exports2.UsersResponseDataFromJSON = exports2.instanceOfUsersResponseData = void 0;
    var UserResults_1 = require_UserResults();
    function instanceOfUsersResponseData(value) {
      return true;
    }
    exports2.instanceOfUsersResponseData = instanceOfUsersResponseData;
    function UsersResponseDataFromJSON(json) {
      return UsersResponseDataFromJSONTyped(json, false);
    }
    exports2.UsersResponseDataFromJSON = UsersResponseDataFromJSON;
    function UsersResponseDataFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "users": json["users"] == null ? void 0 : json["users"].map(UserResults_1.UserResultsFromJSON)
      };
    }
    exports2.UsersResponseDataFromJSONTyped = UsersResponseDataFromJSONTyped;
    function UsersResponseDataToJSON(json) {
      return UsersResponseDataToJSONTyped(json, false);
    }
    exports2.UsersResponseDataToJSON = UsersResponseDataToJSON;
    function UsersResponseDataToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "users": value["users"] == null ? void 0 : value["users"].map(UserResults_1.UserResultsToJSON)
      };
    }
    exports2.UsersResponseDataToJSONTyped = UsersResponseDataToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UsersResponse.js
var require_UsersResponse = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/UsersResponse.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UsersResponseToJSONTyped = exports2.UsersResponseToJSON = exports2.UsersResponseFromJSONTyped = exports2.UsersResponseFromJSON = exports2.instanceOfUsersResponse = void 0;
    var UsersResponseData_1 = require_UsersResponseData();
    var ErrorResponse_1 = require_ErrorResponse();
    function instanceOfUsersResponse(value) {
      if (!("data" in value) || value["data"] === void 0)
        return false;
      return true;
    }
    exports2.instanceOfUsersResponse = instanceOfUsersResponse;
    function UsersResponseFromJSON(json) {
      return UsersResponseFromJSONTyped(json, false);
    }
    exports2.UsersResponseFromJSON = UsersResponseFromJSON;
    function UsersResponseFromJSONTyped(json, ignoreDiscriminator) {
      if (json == null) {
        return json;
      }
      return {
        "data": (0, UsersResponseData_1.UsersResponseDataFromJSON)(json["data"]),
        "errors": json["errors"] == null ? void 0 : json["errors"].map(ErrorResponse_1.ErrorResponseFromJSON)
      };
    }
    exports2.UsersResponseFromJSONTyped = UsersResponseFromJSONTyped;
    function UsersResponseToJSON(json) {
      return UsersResponseToJSONTyped(json, false);
    }
    exports2.UsersResponseToJSON = UsersResponseToJSON;
    function UsersResponseToJSONTyped(value, ignoreDiscriminator) {
      if (ignoreDiscriminator === void 0) {
        ignoreDiscriminator = false;
      }
      if (value == null) {
        return value;
      }
      return {
        "data": (0, UsersResponseData_1.UsersResponseDataToJSON)(value["data"]),
        "errors": value["errors"] == null ? void 0 : value["errors"].map(ErrorResponse_1.ErrorResponseToJSON)
      };
    }
    exports2.UsersResponseToJSONTyped = UsersResponseToJSONTyped;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/index.js
var require_models = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/models/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p)) __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_AdditionalMediaInfo(), exports2);
    __exportStar(require_AdditionalMediaInfoCallToActions(), exports2);
    __exportStar(require_AdditionalMediaInfoCallToActionsUrl(), exports2);
    __exportStar(require_AllowDownloadStatus(), exports2);
    __exportStar(require_Article(), exports2);
    __exportStar(require_ArticleCoverMedia(), exports2);
    __exportStar(require_ArticleCoverMediaColorInfo(), exports2);
    __exportStar(require_ArticleCoverMediaColorInfoPalette(), exports2);
    __exportStar(require_ArticleCoverMediaColorInfoPaletteRGB(), exports2);
    __exportStar(require_ArticleCoverMediaInfo(), exports2);
    __exportStar(require_ArticleLifecycleState(), exports2);
    __exportStar(require_ArticleMetadata(), exports2);
    __exportStar(require_ArticleResult(), exports2);
    __exportStar(require_ArticleResults(), exports2);
    __exportStar(require_AuthorCommunityRelationship(), exports2);
    __exportStar(require_BirdwatchEntity(), exports2);
    __exportStar(require_BirdwatchEntityRef(), exports2);
    __exportStar(require_BirdwatchPivot(), exports2);
    __exportStar(require_BirdwatchPivotCallToAction(), exports2);
    __exportStar(require_BirdwatchPivotFooter(), exports2);
    __exportStar(require_BirdwatchPivotNote(), exports2);
    __exportStar(require_BirdwatchPivotSubtitle(), exports2);
    __exportStar(require_BookmarksResponse(), exports2);
    __exportStar(require_BookmarksResponseData(), exports2);
    __exportStar(require_BookmarksTimeline(), exports2);
    __exportStar(require_Callback(), exports2);
    __exportStar(require_ClientEventInfo(), exports2);
    __exportStar(require_CommunitiesActions(), exports2);
    __exportStar(require_Community(), exports2);
    __exportStar(require_CommunityActions(), exports2);
    __exportStar(require_CommunityData(), exports2);
    __exportStar(require_CommunityDeleteActionResult(), exports2);
    __exportStar(require_CommunityInvitesResult(), exports2);
    __exportStar(require_CommunityJoinAction(), exports2);
    __exportStar(require_CommunityJoinActionResultUnion(), exports2);
    __exportStar(require_CommunityJoinActionUnavailable(), exports2);
    __exportStar(require_CommunityJoinRequestsResult(), exports2);
    __exportStar(require_CommunityLeaveActionResult(), exports2);
    __exportStar(require_CommunityPinActionResult(), exports2);
    __exportStar(require_CommunityRelationship(), exports2);
    __exportStar(require_CommunityRule(), exports2);
    __exportStar(require_CommunityUnpinActionResult(), exports2);
    __exportStar(require_CommunityUrls(), exports2);
    __exportStar(require_CommunityUrlsPermalink(), exports2);
    __exportStar(require_ContentEntryType(), exports2);
    __exportStar(require_ContentItemType(), exports2);
    __exportStar(require_ContentUnion(), exports2);
    __exportStar(require_ConversationControl(), exports2);
    __exportStar(require_CoverCta(), exports2);
    __exportStar(require_CreateBookmarkResponse(), exports2);
    __exportStar(require_CreateBookmarkResponseData(), exports2);
    __exportStar(require_CreateRetweet(), exports2);
    __exportStar(require_CreateRetweetResponse(), exports2);
    __exportStar(require_CreateRetweetResponseData(), exports2);
    __exportStar(require_CreateRetweetResponseResult(), exports2);
    __exportStar(require_CreateTweet(), exports2);
    __exportStar(require_CreateTweetResponse(), exports2);
    __exportStar(require_CreateTweetResponseData(), exports2);
    __exportStar(require_CreateTweetResponseResult(), exports2);
    __exportStar(require_CtaClientEventInfo(), exports2);
    __exportStar(require_CursorType(), exports2);
    __exportStar(require_DeleteBookmarkResponse(), exports2);
    __exportStar(require_DeleteBookmarkResponseData(), exports2);
    __exportStar(require_DeleteRetweet(), exports2);
    __exportStar(require_DeleteRetweetResponse(), exports2);
    __exportStar(require_DeleteRetweetResponseData(), exports2);
    __exportStar(require_DeleteRetweetResponseResult(), exports2);
    __exportStar(require_DeleteTweetResponse(), exports2);
    __exportStar(require_DeleteTweetResponseData(), exports2);
    __exportStar(require_DeleteTweetResponseResult(), exports2);
    __exportStar(require_DisplayTreatment(), exports2);
    __exportStar(require_DisplayType(), exports2);
    __exportStar(require_Entities(), exports2);
    __exportStar(require_ErrorExtensions(), exports2);
    __exportStar(require_ErrorResponse(), exports2);
    __exportStar(require_ExtMediaAvailability(), exports2);
    __exportStar(require_ExtendedEntities(), exports2);
    __exportStar(require_FavoriteTweet(), exports2);
    __exportStar(require_FavoriteTweetResponse(), exports2);
    __exportStar(require_FeedbackInfo(), exports2);
    __exportStar(require_FollowResponse(), exports2);
    __exportStar(require_FollowResponseData(), exports2);
    __exportStar(require_FollowResponseResult(), exports2);
    __exportStar(require_FollowResponseUser(), exports2);
    __exportStar(require_FollowTimeline(), exports2);
    __exportStar(require_Highlight(), exports2);
    __exportStar(require_HomeTimelineHome(), exports2);
    __exportStar(require_HomeTimelineResponseData(), exports2);
    __exportStar(require_InstructionType(), exports2);
    __exportStar(require_InstructionUnion(), exports2);
    __exportStar(require_ItemContentUnion(), exports2);
    __exportStar(require_ItemResult(), exports2);
    __exportStar(require_ListLatestTweetsTimelineResponse(), exports2);
    __exportStar(require_ListTweetsTimeline(), exports2);
    __exportStar(require_ListTweetsTimelineData(), exports2);
    __exportStar(require_ListTweetsTimelineList(), exports2);
    __exportStar(require_Location(), exports2);
    __exportStar(require_Media(), exports2);
    __exportStar(require_MediaExtended(), exports2);
    __exportStar(require_MediaOriginalInfo(), exports2);
    __exportStar(require_MediaOriginalInfoFocusRect(), exports2);
    __exportStar(require_MediaResult(), exports2);
    __exportStar(require_MediaResults(), exports2);
    __exportStar(require_MediaSize(), exports2);
    __exportStar(require_MediaSizes(), exports2);
    __exportStar(require_MediaStats(), exports2);
    __exportStar(require_MediaVideoInfo(), exports2);
    __exportStar(require_MediaVideoInfoVariant(), exports2);
    __exportStar(require_MediaVisibilityResults(), exports2);
    __exportStar(require_MediaVisibilityResultsBlurredImageInterstitial(), exports2);
    __exportStar(require_ModuleEntry(), exports2);
    __exportStar(require_ModuleItem(), exports2);
    __exportStar(require_NoteTweet(), exports2);
    __exportStar(require_NoteTweetResult(), exports2);
    __exportStar(require_NoteTweetResultData(), exports2);
    __exportStar(require_NoteTweetResultMedia(), exports2);
    __exportStar(require_NoteTweetResultMediaInlineMedia(), exports2);
    __exportStar(require_NoteTweetResultRichText(), exports2);
    __exportStar(require_NoteTweetResultRichTextTag(), exports2);
    __exportStar(require_OneFactorLoginEligibility(), exports2);
    __exportStar(require_OtherObjectAll(), exports2);
    __exportStar(require_PostCreateBookmarkRequest(), exports2);
    __exportStar(require_PostCreateBookmarkRequestVariables(), exports2);
    __exportStar(require_PostCreateRetweetRequest(), exports2);
    __exportStar(require_PostCreateRetweetRequestVariables(), exports2);
    __exportStar(require_PostCreateTweetRequest(), exports2);
    __exportStar(require_PostCreateTweetRequestFeatures(), exports2);
    __exportStar(require_PostCreateTweetRequestVariables(), exports2);
    __exportStar(require_PostCreateTweetRequestVariablesConversationControl(), exports2);
    __exportStar(require_PostCreateTweetRequestVariablesMedia(), exports2);
    __exportStar(require_PostCreateTweetRequestVariablesMediaMediaEntitiesInner(), exports2);
    __exportStar(require_PostCreateTweetRequestVariablesReply(), exports2);
    __exportStar(require_PostDeleteBookmarkRequest(), exports2);
    __exportStar(require_PostDeleteRetweetRequest(), exports2);
    __exportStar(require_PostDeleteRetweetRequestVariables(), exports2);
    __exportStar(require_PostDeleteTweetRequest(), exports2);
    __exportStar(require_PostFavoriteTweetRequest(), exports2);
    __exportStar(require_PostUnfavoriteTweetRequest(), exports2);
    __exportStar(require_PrimaryCommunityTopic(), exports2);
    __exportStar(require_ProfileResponse(), exports2);
    __exportStar(require_ProfileResponseData(), exports2);
    __exportStar(require_QuotedRefResult(), exports2);
    __exportStar(require_QuotedStatusPermalink(), exports2);
    __exportStar(require_Retweet(), exports2);
    __exportStar(require_RetweetLegacy(), exports2);
    __exportStar(require_SearchByRawQuery(), exports2);
    __exportStar(require_SearchTimeline(), exports2);
    __exportStar(require_SearchTimelineData(), exports2);
    __exportStar(require_SearchTimelineResponse(), exports2);
    __exportStar(require_SelfThread(), exports2);
    __exportStar(require_SensitiveMediaWarning(), exports2);
    __exportStar(require_Session(), exports2);
    __exportStar(require_SocialContextLandingUrl(), exports2);
    __exportStar(require_SocialContextUnion(), exports2);
    __exportStar(require_SocialContextUnionType(), exports2);
    __exportStar(require_SuperFollowsReplyUserResult(), exports2);
    __exportStar(require_SuperFollowsReplyUserResultData(), exports2);
    __exportStar(require_SuperFollowsReplyUserResultLegacy(), exports2);
    __exportStar(require_Text(), exports2);
    __exportStar(require_TextEntity(), exports2);
    __exportStar(require_TextEntityRef(), exports2);
    __exportStar(require_TextHighlight(), exports2);
    __exportStar(require_Timeline(), exports2);
    __exportStar(require_TimelineAddEntries(), exports2);
    __exportStar(require_TimelineAddEntry(), exports2);
    __exportStar(require_TimelineAddToModule(), exports2);
    __exportStar(require_TimelineClearCache(), exports2);
    __exportStar(require_TimelineCommunity(), exports2);
    __exportStar(require_TimelineCoverBehavior(), exports2);
    __exportStar(require_TimelineCoverBehaviorUrl(), exports2);
    __exportStar(require_TimelineGeneralContext(), exports2);
    __exportStar(require_TimelineHalfCover(), exports2);
    __exportStar(require_TimelineMessagePrompt(), exports2);
    __exportStar(require_TimelinePinEntry(), exports2);
    __exportStar(require_TimelinePrompt(), exports2);
    __exportStar(require_TimelineReplaceEntry(), exports2);
    __exportStar(require_TimelineResponse(), exports2);
    __exportStar(require_TimelineShowAlert(), exports2);
    __exportStar(require_TimelineShowAlertRichText(), exports2);
    __exportStar(require_TimelineShowCover(), exports2);
    __exportStar(require_TimelineTerminateTimeline(), exports2);
    __exportStar(require_TimelineTimelineCursor(), exports2);
    __exportStar(require_TimelineTimelineItem(), exports2);
    __exportStar(require_TimelineTimelineModule(), exports2);
    __exportStar(require_TimelineTopicContext(), exports2);
    __exportStar(require_TimelineTweet(), exports2);
    __exportStar(require_TimelineUser(), exports2);
    __exportStar(require_TimelineV2(), exports2);
    __exportStar(require_Timestamp(), exports2);
    __exportStar(require_TopicContext(), exports2);
    __exportStar(require_Tracing(), exports2);
    __exportStar(require_Tweet(), exports2);
    __exportStar(require_TweetCard(), exports2);
    __exportStar(require_TweetCardLegacy(), exports2);
    __exportStar(require_TweetCardLegacyBindingValue(), exports2);
    __exportStar(require_TweetCardLegacyBindingValueData(), exports2);
    __exportStar(require_TweetCardLegacyBindingValueDataImage(), exports2);
    __exportStar(require_TweetCardPlatform(), exports2);
    __exportStar(require_TweetCardPlatformAudience(), exports2);
    __exportStar(require_TweetCardPlatformData(), exports2);
    __exportStar(require_TweetCardPlatformDevice(), exports2);
    __exportStar(require_TweetDetailResponse(), exports2);
    __exportStar(require_TweetDetailResponseData(), exports2);
    __exportStar(require_TweetEditControl(), exports2);
    __exportStar(require_TweetEditControlInitial(), exports2);
    __exportStar(require_TweetEditPrespective(), exports2);
    __exportStar(require_TweetFavoritersResponse(), exports2);
    __exportStar(require_TweetFavoritersResponseData(), exports2);
    __exportStar(require_TweetInterstitial(), exports2);
    __exportStar(require_TweetInterstitialRevealText(), exports2);
    __exportStar(require_TweetInterstitialText(), exports2);
    __exportStar(require_TweetInterstitialTextEntity(), exports2);
    __exportStar(require_TweetInterstitialTextEntityRef(), exports2);
    __exportStar(require_TweetLegacy(), exports2);
    __exportStar(require_TweetLegacyScopes(), exports2);
    __exportStar(require_TweetPreviousCounts(), exports2);
    __exportStar(require_TweetResultByRestIdData(), exports2);
    __exportStar(require_TweetResultByRestIdResponse(), exports2);
    __exportStar(require_TweetRetweetersResponse(), exports2);
    __exportStar(require_TweetRetweetersResponseData(), exports2);
    __exportStar(require_TweetTombstone(), exports2);
    __exportStar(require_TweetUnavailable(), exports2);
    __exportStar(require_TweetUnion(), exports2);
    __exportStar(require_TweetView(), exports2);
    __exportStar(require_TweetWithVisibilityResults(), exports2);
    __exportStar(require_TypeName(), exports2);
    __exportStar(require_UnfavoriteTweet(), exports2);
    __exportStar(require_UnfavoriteTweetResponse(), exports2);
    __exportStar(require_UnifiedCard(), exports2);
    __exportStar(require_Url(), exports2);
    __exportStar(require_UrtEndpointOptions(), exports2);
    __exportStar(require_UrtEndpointRequestParams(), exports2);
    __exportStar(require_User(), exports2);
    __exportStar(require_UserFeatures(), exports2);
    __exportStar(require_UserHighlightsInfo(), exports2);
    __exportStar(require_UserHighlightsTweetsData(), exports2);
    __exportStar(require_UserHighlightsTweetsResponse(), exports2);
    __exportStar(require_UserHighlightsTweetsResult(), exports2);
    __exportStar(require_UserHighlightsTweetsTimeline(), exports2);
    __exportStar(require_UserHighlightsTweetsUser(), exports2);
    __exportStar(require_UserLegacy(), exports2);
    __exportStar(require_UserLegacyExtendedProfile(), exports2);
    __exportStar(require_UserLegacyExtendedProfileBirthdate(), exports2);
    __exportStar(require_UserProfessional(), exports2);
    __exportStar(require_UserProfessionalCategory(), exports2);
    __exportStar(require_UserResponse(), exports2);
    __exportStar(require_UserResponseData(), exports2);
    __exportStar(require_UserResultByScreenName(), exports2);
    __exportStar(require_UserResultByScreenNameLegacy(), exports2);
    __exportStar(require_UserResultByScreenNameResult(), exports2);
    __exportStar(require_UserResultCore(), exports2);
    __exportStar(require_UserResults(), exports2);
    __exportStar(require_UserTipJarSettings(), exports2);
    __exportStar(require_UserTweetsData(), exports2);
    __exportStar(require_UserTweetsResponse(), exports2);
    __exportStar(require_UserTweetsResult(), exports2);
    __exportStar(require_UserTweetsUser(), exports2);
    __exportStar(require_UserUnavailable(), exports2);
    __exportStar(require_UserUnion(), exports2);
    __exportStar(require_UserValue(), exports2);
    __exportStar(require_UserVerificationInfo(), exports2);
    __exportStar(require_UserVerificationInfoReason(), exports2);
    __exportStar(require_UserVerificationInfoReasonDescription(), exports2);
    __exportStar(require_UserVerificationInfoReasonDescriptionEntities(), exports2);
    __exportStar(require_UserVerificationInfoReasonDescriptionEntitiesRef(), exports2);
    __exportStar(require_UsersResponse(), exports2);
    __exportStar(require_UsersResponseData(), exports2);
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/DefaultApi.js
var require_DefaultApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/DefaultApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DefaultApi = void 0;
    var runtime = require_runtime();
    var index_1 = require_models();
    var DefaultApi = (
      /** @class */
      function(_super) {
        __extends(DefaultApi2, _super);
        function DefaultApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        DefaultApi2.prototype.getProfileSpotlightsQueryRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getProfileSpotlightsQuery().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getProfileSpotlightsQuery().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getProfileSpotlightsQuery().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/ProfileSpotlightsQuery".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.ProfileResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        DefaultApi2.prototype.getProfileSpotlightsQuery = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getProfileSpotlightsQueryRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        DefaultApi2.prototype.getTweetResultByRestIdRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getTweetResultByRestId().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getTweetResultByRestId().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getTweetResultByRestId().');
                  }
                  if (requestParameters["fieldToggles"] == null) {
                    throw new runtime.RequiredError("fieldToggles", 'Required parameter "fieldToggles" was null or undefined when calling getTweetResultByRestId().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  if (requestParameters["fieldToggles"] != null) {
                    queryParameters["fieldToggles"] = requestParameters["fieldToggles"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/TweetResultByRestId".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.TweetResultByRestIdResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        DefaultApi2.prototype.getTweetResultByRestId = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getTweetResultByRestIdRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        return DefaultApi2;
      }(runtime.BaseAPI)
    );
    exports2.DefaultApi = DefaultApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/OtherApi.js
var require_OtherApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/OtherApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.OtherApi = void 0;
    var runtime = require_runtime();
    var index_1 = require_models();
    var OtherApi = (
      /** @class */
      function(_super) {
        __extends(OtherApi2, _super);
        function OtherApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        OtherApi2.prototype.otherRaw = function(initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  queryParameters = {};
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/other",
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.OtherObjectAllFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        OtherApi2.prototype.other = function(initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.otherRaw(initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        return OtherApi2;
      }(runtime.BaseAPI)
    );
    exports2.OtherApi = OtherApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/PostApi.js
var require_PostApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/PostApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostApi = void 0;
    var runtime = require_runtime();
    var index_1 = require_models();
    var PostApi = (
      /** @class */
      function(_super) {
        __extends(PostApi2, _super);
        function PostApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        PostApi2.prototype.postCreateBookmarkRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling postCreateBookmark().');
                  }
                  if (requestParameters["postCreateBookmarkRequest"] == null) {
                    throw new runtime.RequiredError("postCreateBookmarkRequest", 'Required parameter "postCreateBookmarkRequest" was null or undefined when calling postCreateBookmark().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  headerParameters["Content-Type"] = "application/json";
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/CreateBookmark".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: (0, index_1.PostCreateBookmarkRequestToJSON)(requestParameters["postCreateBookmarkRequest"])
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.CreateBookmarkResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        PostApi2.prototype.postCreateBookmark = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postCreateBookmarkRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        PostApi2.prototype.postCreateRetweetRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling postCreateRetweet().');
                  }
                  if (requestParameters["postCreateRetweetRequest"] == null) {
                    throw new runtime.RequiredError("postCreateRetweetRequest", 'Required parameter "postCreateRetweetRequest" was null or undefined when calling postCreateRetweet().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  headerParameters["Content-Type"] = "application/json";
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/CreateRetweet".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: (0, index_1.PostCreateRetweetRequestToJSON)(requestParameters["postCreateRetweetRequest"])
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.CreateRetweetResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        PostApi2.prototype.postCreateRetweet = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postCreateRetweetRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        PostApi2.prototype.postCreateTweetRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling postCreateTweet().');
                  }
                  if (requestParameters["postCreateTweetRequest"] == null) {
                    throw new runtime.RequiredError("postCreateTweetRequest", 'Required parameter "postCreateTweetRequest" was null or undefined when calling postCreateTweet().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  headerParameters["Content-Type"] = "application/json";
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/CreateTweet".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: (0, index_1.PostCreateTweetRequestToJSON)(requestParameters["postCreateTweetRequest"])
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.CreateTweetResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        PostApi2.prototype.postCreateTweet = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postCreateTweetRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        PostApi2.prototype.postDeleteBookmarkRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling postDeleteBookmark().');
                  }
                  if (requestParameters["postDeleteBookmarkRequest"] == null) {
                    throw new runtime.RequiredError("postDeleteBookmarkRequest", 'Required parameter "postDeleteBookmarkRequest" was null or undefined when calling postDeleteBookmark().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  headerParameters["Content-Type"] = "application/json";
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/DeleteBookmark".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: (0, index_1.PostDeleteBookmarkRequestToJSON)(requestParameters["postDeleteBookmarkRequest"])
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.DeleteBookmarkResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        PostApi2.prototype.postDeleteBookmark = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postDeleteBookmarkRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        PostApi2.prototype.postDeleteRetweetRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling postDeleteRetweet().');
                  }
                  if (requestParameters["postDeleteRetweetRequest"] == null) {
                    throw new runtime.RequiredError("postDeleteRetweetRequest", 'Required parameter "postDeleteRetweetRequest" was null or undefined when calling postDeleteRetweet().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  headerParameters["Content-Type"] = "application/json";
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/DeleteRetweet".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: (0, index_1.PostDeleteRetweetRequestToJSON)(requestParameters["postDeleteRetweetRequest"])
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.DeleteRetweetResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        PostApi2.prototype.postDeleteRetweet = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postDeleteRetweetRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        PostApi2.prototype.postDeleteTweetRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling postDeleteTweet().');
                  }
                  if (requestParameters["postDeleteTweetRequest"] == null) {
                    throw new runtime.RequiredError("postDeleteTweetRequest", 'Required parameter "postDeleteTweetRequest" was null or undefined when calling postDeleteTweet().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  headerParameters["Content-Type"] = "application/json";
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/DeleteTweet".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: (0, index_1.PostDeleteTweetRequestToJSON)(requestParameters["postDeleteTweetRequest"])
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.DeleteTweetResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        PostApi2.prototype.postDeleteTweet = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postDeleteTweetRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        PostApi2.prototype.postFavoriteTweetRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling postFavoriteTweet().');
                  }
                  if (requestParameters["postFavoriteTweetRequest"] == null) {
                    throw new runtime.RequiredError("postFavoriteTweetRequest", 'Required parameter "postFavoriteTweetRequest" was null or undefined when calling postFavoriteTweet().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  headerParameters["Content-Type"] = "application/json";
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/FavoriteTweet".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: (0, index_1.PostFavoriteTweetRequestToJSON)(requestParameters["postFavoriteTweetRequest"])
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.FavoriteTweetResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        PostApi2.prototype.postFavoriteTweet = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postFavoriteTweetRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        PostApi2.prototype.postUnfavoriteTweetRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling postUnfavoriteTweet().');
                  }
                  if (requestParameters["postUnfavoriteTweetRequest"] == null) {
                    throw new runtime.RequiredError("postUnfavoriteTweetRequest", 'Required parameter "postUnfavoriteTweetRequest" was null or undefined when calling postUnfavoriteTweet().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  headerParameters["Content-Type"] = "application/json";
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/UnfavoriteTweet".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: (0, index_1.PostUnfavoriteTweetRequestToJSON)(requestParameters["postUnfavoriteTweetRequest"])
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UnfavoriteTweetResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        PostApi2.prototype.postUnfavoriteTweet = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postUnfavoriteTweetRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        return PostApi2;
      }(runtime.BaseAPI)
    );
    exports2.PostApi = PostApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/TweetApi.js
var require_TweetApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/TweetApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetApi = void 0;
    var runtime = require_runtime();
    var index_1 = require_models();
    var TweetApi = (
      /** @class */
      function(_super) {
        __extends(TweetApi2, _super);
        function TweetApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        TweetApi2.prototype.getBookmarksRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getBookmarks().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getBookmarks().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getBookmarks().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/Bookmarks".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.BookmarksResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getBookmarks = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getBookmarksRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getHomeLatestTimelineRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getHomeLatestTimeline().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getHomeLatestTimeline().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getHomeLatestTimeline().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/HomeLatestTimeline".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.TimelineResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getHomeLatestTimeline = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getHomeLatestTimelineRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getHomeTimelineRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getHomeTimeline().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getHomeTimeline().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getHomeTimeline().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/HomeTimeline".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.TimelineResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getHomeTimeline = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getHomeTimelineRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getLikesRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getLikes().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getLikes().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getLikes().');
                  }
                  if (requestParameters["fieldToggles"] == null) {
                    throw new runtime.RequiredError("fieldToggles", 'Required parameter "fieldToggles" was null or undefined when calling getLikes().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  if (requestParameters["fieldToggles"] != null) {
                    queryParameters["fieldToggles"] = requestParameters["fieldToggles"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/Likes".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UserTweetsResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getLikes = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getLikesRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getListLatestTweetsTimelineRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getListLatestTweetsTimeline().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getListLatestTweetsTimeline().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getListLatestTweetsTimeline().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/ListLatestTweetsTimeline".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.ListLatestTweetsTimelineResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getListLatestTweetsTimeline = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getListLatestTweetsTimelineRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getSearchTimelineRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getSearchTimeline().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getSearchTimeline().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getSearchTimeline().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/SearchTimeline".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.SearchTimelineResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getSearchTimeline = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getSearchTimelineRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getTweetDetailRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getTweetDetail().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getTweetDetail().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getTweetDetail().');
                  }
                  if (requestParameters["fieldToggles"] == null) {
                    throw new runtime.RequiredError("fieldToggles", 'Required parameter "fieldToggles" was null or undefined when calling getTweetDetail().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  if (requestParameters["fieldToggles"] != null) {
                    queryParameters["fieldToggles"] = requestParameters["fieldToggles"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/TweetDetail".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.TweetDetailResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getTweetDetail = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getTweetDetailRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getUserHighlightsTweetsRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getUserHighlightsTweets().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getUserHighlightsTweets().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getUserHighlightsTweets().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/UserHighlightsTweets".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UserHighlightsTweetsResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getUserHighlightsTweets = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getUserHighlightsTweetsRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getUserMediaRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getUserMedia().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getUserMedia().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getUserMedia().');
                  }
                  if (requestParameters["fieldToggles"] == null) {
                    throw new runtime.RequiredError("fieldToggles", 'Required parameter "fieldToggles" was null or undefined when calling getUserMedia().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  if (requestParameters["fieldToggles"] != null) {
                    queryParameters["fieldToggles"] = requestParameters["fieldToggles"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/UserMedia".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UserTweetsResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getUserMedia = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getUserMediaRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getUserTweetsRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getUserTweets().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getUserTweets().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getUserTweets().');
                  }
                  if (requestParameters["fieldToggles"] == null) {
                    throw new runtime.RequiredError("fieldToggles", 'Required parameter "fieldToggles" was null or undefined when calling getUserTweets().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  if (requestParameters["fieldToggles"] != null) {
                    queryParameters["fieldToggles"] = requestParameters["fieldToggles"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/UserTweets".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UserTweetsResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getUserTweets = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getUserTweetsRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        TweetApi2.prototype.getUserTweetsAndRepliesRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getUserTweetsAndReplies().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getUserTweetsAndReplies().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getUserTweetsAndReplies().');
                  }
                  if (requestParameters["fieldToggles"] == null) {
                    throw new runtime.RequiredError("fieldToggles", 'Required parameter "fieldToggles" was null or undefined when calling getUserTweetsAndReplies().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  if (requestParameters["fieldToggles"] != null) {
                    queryParameters["fieldToggles"] = requestParameters["fieldToggles"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/UserTweetsAndReplies".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UserTweetsResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        TweetApi2.prototype.getUserTweetsAndReplies = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getUserTweetsAndRepliesRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        return TweetApi2;
      }(runtime.BaseAPI)
    );
    exports2.TweetApi = TweetApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/UserApi.js
var require_UserApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/UserApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserApi = void 0;
    var runtime = require_runtime();
    var index_1 = require_models();
    var UserApi = (
      /** @class */
      function(_super) {
        __extends(UserApi2, _super);
        function UserApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        UserApi2.prototype.getUserByRestIdRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getUserByRestId().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getUserByRestId().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getUserByRestId().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/UserByRestId".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UserResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        UserApi2.prototype.getUserByRestId = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getUserByRestIdRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        UserApi2.prototype.getUserByScreenNameRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getUserByScreenName().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getUserByScreenName().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getUserByScreenName().');
                  }
                  if (requestParameters["fieldToggles"] == null) {
                    throw new runtime.RequiredError("fieldToggles", 'Required parameter "fieldToggles" was null or undefined when calling getUserByScreenName().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  if (requestParameters["fieldToggles"] != null) {
                    queryParameters["fieldToggles"] = requestParameters["fieldToggles"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/UserByScreenName".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UserResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        UserApi2.prototype.getUserByScreenName = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getUserByScreenNameRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        return UserApi2;
      }(runtime.BaseAPI)
    );
    exports2.UserApi = UserApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/UserListApi.js
var require_UserListApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/UserListApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserListApi = void 0;
    var runtime = require_runtime();
    var index_1 = require_models();
    var UserListApi = (
      /** @class */
      function(_super) {
        __extends(UserListApi2, _super);
        function UserListApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        UserListApi2.prototype.getFavoritersRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getFavoriters().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getFavoriters().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getFavoriters().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/Favoriters".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.TweetFavoritersResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        UserListApi2.prototype.getFavoriters = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getFavoritersRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        UserListApi2.prototype.getFollowersRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getFollowers().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getFollowers().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getFollowers().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/Followers".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.FollowResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        UserListApi2.prototype.getFollowers = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getFollowersRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        UserListApi2.prototype.getFollowersYouKnowRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getFollowersYouKnow().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getFollowersYouKnow().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getFollowersYouKnow().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/FollowersYouKnow".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.FollowResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        UserListApi2.prototype.getFollowersYouKnow = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getFollowersYouKnowRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        UserListApi2.prototype.getFollowingRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getFollowing().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getFollowing().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getFollowing().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/Following".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.FollowResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        UserListApi2.prototype.getFollowing = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getFollowingRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        UserListApi2.prototype.getRetweetersRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getRetweeters().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getRetweeters().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getRetweeters().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/Retweeters".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.TweetRetweetersResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        UserListApi2.prototype.getRetweeters = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getRetweetersRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        return UserListApi2;
      }(runtime.BaseAPI)
    );
    exports2.UserListApi = UserListApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/UsersApi.js
var require_UsersApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/UsersApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UsersApi = void 0;
    var runtime = require_runtime();
    var index_1 = require_models();
    var UsersApi = (
      /** @class */
      function(_super) {
        __extends(UsersApi2, _super);
        function UsersApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        UsersApi2.prototype.getUsersByRestIdsRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["pathQueryId"] == null) {
                    throw new runtime.RequiredError("pathQueryId", 'Required parameter "pathQueryId" was null or undefined when calling getUsersByRestIds().');
                  }
                  if (requestParameters["variables"] == null) {
                    throw new runtime.RequiredError("variables", 'Required parameter "variables" was null or undefined when calling getUsersByRestIds().');
                  }
                  if (requestParameters["features"] == null) {
                    throw new runtime.RequiredError("features", 'Required parameter "features" was null or undefined when calling getUsersByRestIds().');
                  }
                  queryParameters = {};
                  if (requestParameters["variables"] != null) {
                    queryParameters["variables"] = requestParameters["variables"];
                  }
                  if (requestParameters["features"] != null) {
                    queryParameters["features"] = requestParameters["features"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/graphql/{pathQueryId}/UsersByRestIds".replace("{".concat("pathQueryId", "}"), encodeURIComponent(String(requestParameters["pathQueryId"]))),
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.JSONApiResponse(response, function(jsonValue) {
                    return (0, index_1.UsersResponseFromJSON)(jsonValue);
                  })];
              }
            });
          });
        };
        UsersApi2.prototype.getUsersByRestIds = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getUsersByRestIdsRaw(requestParameters, initOverrides)];
                case 1:
                  response = _a.sent();
                  return [4, response.value()];
                case 2:
                  return [2, _a.sent()];
              }
            });
          });
        };
        return UsersApi2;
      }(runtime.BaseAPI)
    );
    exports2.UsersApi = UsersApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/V11GetApi.js
var require_V11GetApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/V11GetApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.V11GetApi = void 0;
    var runtime = require_runtime();
    var V11GetApi = (
      /** @class */
      function(_super) {
        __extends(V11GetApi2, _super);
        function V11GetApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        V11GetApi2.prototype.getFriendsFollowingListRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["includeProfileInterstitialType"] == null) {
                    throw new runtime.RequiredError("includeProfileInterstitialType", 'Required parameter "includeProfileInterstitialType" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeBlocking"] == null) {
                    throw new runtime.RequiredError("includeBlocking", 'Required parameter "includeBlocking" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeBlockedBy"] == null) {
                    throw new runtime.RequiredError("includeBlockedBy", 'Required parameter "includeBlockedBy" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeFollowedBy"] == null) {
                    throw new runtime.RequiredError("includeFollowedBy", 'Required parameter "includeFollowedBy" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeWantRetweets"] == null) {
                    throw new runtime.RequiredError("includeWantRetweets", 'Required parameter "includeWantRetweets" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeMuteEdge"] == null) {
                    throw new runtime.RequiredError("includeMuteEdge", 'Required parameter "includeMuteEdge" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeCanDm"] == null) {
                    throw new runtime.RequiredError("includeCanDm", 'Required parameter "includeCanDm" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeCanMediaTag"] == null) {
                    throw new runtime.RequiredError("includeCanMediaTag", 'Required parameter "includeCanMediaTag" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeExtHasNftAvatar"] == null) {
                    throw new runtime.RequiredError("includeExtHasNftAvatar", 'Required parameter "includeExtHasNftAvatar" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeExtIsBlueVerified"] == null) {
                    throw new runtime.RequiredError("includeExtIsBlueVerified", 'Required parameter "includeExtIsBlueVerified" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeExtVerifiedType"] == null) {
                    throw new runtime.RequiredError("includeExtVerifiedType", 'Required parameter "includeExtVerifiedType" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["includeExtProfileImageShape"] == null) {
                    throw new runtime.RequiredError("includeExtProfileImageShape", 'Required parameter "includeExtProfileImageShape" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["skipStatus"] == null) {
                    throw new runtime.RequiredError("skipStatus", 'Required parameter "skipStatus" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["cursor"] == null) {
                    throw new runtime.RequiredError("cursor", 'Required parameter "cursor" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["userId"] == null) {
                    throw new runtime.RequiredError("userId", 'Required parameter "userId" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["count"] == null) {
                    throw new runtime.RequiredError("count", 'Required parameter "count" was null or undefined when calling getFriendsFollowingList().');
                  }
                  if (requestParameters["withTotalCount"] == null) {
                    throw new runtime.RequiredError("withTotalCount", 'Required parameter "withTotalCount" was null or undefined when calling getFriendsFollowingList().');
                  }
                  queryParameters = {};
                  if (requestParameters["includeProfileInterstitialType"] != null) {
                    queryParameters["include_profile_interstitial_type"] = requestParameters["includeProfileInterstitialType"];
                  }
                  if (requestParameters["includeBlocking"] != null) {
                    queryParameters["include_blocking"] = requestParameters["includeBlocking"];
                  }
                  if (requestParameters["includeBlockedBy"] != null) {
                    queryParameters["include_blocked_by"] = requestParameters["includeBlockedBy"];
                  }
                  if (requestParameters["includeFollowedBy"] != null) {
                    queryParameters["include_followed_by"] = requestParameters["includeFollowedBy"];
                  }
                  if (requestParameters["includeWantRetweets"] != null) {
                    queryParameters["include_want_retweets"] = requestParameters["includeWantRetweets"];
                  }
                  if (requestParameters["includeMuteEdge"] != null) {
                    queryParameters["include_mute_edge"] = requestParameters["includeMuteEdge"];
                  }
                  if (requestParameters["includeCanDm"] != null) {
                    queryParameters["include_can_dm"] = requestParameters["includeCanDm"];
                  }
                  if (requestParameters["includeCanMediaTag"] != null) {
                    queryParameters["include_can_media_tag"] = requestParameters["includeCanMediaTag"];
                  }
                  if (requestParameters["includeExtHasNftAvatar"] != null) {
                    queryParameters["include_ext_has_nft_avatar"] = requestParameters["includeExtHasNftAvatar"];
                  }
                  if (requestParameters["includeExtIsBlueVerified"] != null) {
                    queryParameters["include_ext_is_blue_verified"] = requestParameters["includeExtIsBlueVerified"];
                  }
                  if (requestParameters["includeExtVerifiedType"] != null) {
                    queryParameters["include_ext_verified_type"] = requestParameters["includeExtVerifiedType"];
                  }
                  if (requestParameters["includeExtProfileImageShape"] != null) {
                    queryParameters["include_ext_profile_image_shape"] = requestParameters["includeExtProfileImageShape"];
                  }
                  if (requestParameters["skipStatus"] != null) {
                    queryParameters["skip_status"] = requestParameters["skipStatus"];
                  }
                  if (requestParameters["cursor"] != null) {
                    queryParameters["cursor"] = requestParameters["cursor"];
                  }
                  if (requestParameters["userId"] != null) {
                    queryParameters["user_id"] = requestParameters["userId"];
                  }
                  if (requestParameters["count"] != null) {
                    queryParameters["count"] = requestParameters["count"];
                  }
                  if (requestParameters["withTotalCount"] != null) {
                    queryParameters["with_total_count"] = requestParameters["withTotalCount"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/1.1/friends/following/list.json",
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.VoidApiResponse(response)];
              }
            });
          });
        };
        V11GetApi2.prototype.getFriendsFollowingList = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getFriendsFollowingListRaw(requestParameters, initOverrides)];
                case 1:
                  _a.sent();
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        V11GetApi2.prototype.getSearchTypeaheadRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["includeExtIsBlueVerified"] == null) {
                    throw new runtime.RequiredError("includeExtIsBlueVerified", 'Required parameter "includeExtIsBlueVerified" was null or undefined when calling getSearchTypeahead().');
                  }
                  if (requestParameters["includeExtVerifiedType"] == null) {
                    throw new runtime.RequiredError("includeExtVerifiedType", 'Required parameter "includeExtVerifiedType" was null or undefined when calling getSearchTypeahead().');
                  }
                  if (requestParameters["includeExtProfileImageShape"] == null) {
                    throw new runtime.RequiredError("includeExtProfileImageShape", 'Required parameter "includeExtProfileImageShape" was null or undefined when calling getSearchTypeahead().');
                  }
                  if (requestParameters["q"] == null) {
                    throw new runtime.RequiredError("q", 'Required parameter "q" was null or undefined when calling getSearchTypeahead().');
                  }
                  if (requestParameters["src"] == null) {
                    throw new runtime.RequiredError("src", 'Required parameter "src" was null or undefined when calling getSearchTypeahead().');
                  }
                  if (requestParameters["resultType"] == null) {
                    throw new runtime.RequiredError("resultType", 'Required parameter "resultType" was null or undefined when calling getSearchTypeahead().');
                  }
                  queryParameters = {};
                  if (requestParameters["includeExtIsBlueVerified"] != null) {
                    queryParameters["include_ext_is_blue_verified"] = requestParameters["includeExtIsBlueVerified"];
                  }
                  if (requestParameters["includeExtVerifiedType"] != null) {
                    queryParameters["include_ext_verified_type"] = requestParameters["includeExtVerifiedType"];
                  }
                  if (requestParameters["includeExtProfileImageShape"] != null) {
                    queryParameters["include_ext_profile_image_shape"] = requestParameters["includeExtProfileImageShape"];
                  }
                  if (requestParameters["q"] != null) {
                    queryParameters["q"] = requestParameters["q"];
                  }
                  if (requestParameters["src"] != null) {
                    queryParameters["src"] = requestParameters["src"];
                  }
                  if (requestParameters["resultType"] != null) {
                    queryParameters["result_type"] = requestParameters["resultType"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/1.1/search/typeahead.json",
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.VoidApiResponse(response)];
              }
            });
          });
        };
        V11GetApi2.prototype.getSearchTypeahead = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getSearchTypeaheadRaw(requestParameters, initOverrides)];
                case 1:
                  _a.sent();
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        return V11GetApi2;
      }(runtime.BaseAPI)
    );
    exports2.V11GetApi = V11GetApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/V11PostApi.js
var require_V11PostApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/V11PostApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.V11PostApi = void 0;
    var runtime = require_runtime();
    var V11PostApi = (
      /** @class */
      function(_super) {
        __extends(V11PostApi2, _super);
        function V11PostApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        V11PostApi2.prototype.postCreateFriendshipsRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, consumes, canConsumeForm, formParams, useForm, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["includeBlockedBy"] == null) {
                    throw new runtime.RequiredError("includeBlockedBy", 'Required parameter "includeBlockedBy" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeBlocking"] == null) {
                    throw new runtime.RequiredError("includeBlocking", 'Required parameter "includeBlocking" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeCanDm"] == null) {
                    throw new runtime.RequiredError("includeCanDm", 'Required parameter "includeCanDm" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeCanMediaTag"] == null) {
                    throw new runtime.RequiredError("includeCanMediaTag", 'Required parameter "includeCanMediaTag" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeExtHasNftAvatar"] == null) {
                    throw new runtime.RequiredError("includeExtHasNftAvatar", 'Required parameter "includeExtHasNftAvatar" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeExtIsBlueVerified"] == null) {
                    throw new runtime.RequiredError("includeExtIsBlueVerified", 'Required parameter "includeExtIsBlueVerified" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeExtProfileImageShape"] == null) {
                    throw new runtime.RequiredError("includeExtProfileImageShape", 'Required parameter "includeExtProfileImageShape" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeExtVerifiedType"] == null) {
                    throw new runtime.RequiredError("includeExtVerifiedType", 'Required parameter "includeExtVerifiedType" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeFollowedBy"] == null) {
                    throw new runtime.RequiredError("includeFollowedBy", 'Required parameter "includeFollowedBy" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeMuteEdge"] == null) {
                    throw new runtime.RequiredError("includeMuteEdge", 'Required parameter "includeMuteEdge" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeProfileInterstitialType"] == null) {
                    throw new runtime.RequiredError("includeProfileInterstitialType", 'Required parameter "includeProfileInterstitialType" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["includeWantRetweets"] == null) {
                    throw new runtime.RequiredError("includeWantRetweets", 'Required parameter "includeWantRetweets" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["skipStatus"] == null) {
                    throw new runtime.RequiredError("skipStatus", 'Required parameter "skipStatus" was null or undefined when calling postCreateFriendships().');
                  }
                  if (requestParameters["userId"] == null) {
                    throw new runtime.RequiredError("userId", 'Required parameter "userId" was null or undefined when calling postCreateFriendships().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  consumes = [
                    { contentType: "application/x-www-form-urlencoded" }
                  ];
                  canConsumeForm = runtime.canConsumeForm(consumes);
                  useForm = false;
                  if (useForm) {
                    formParams = new FormData();
                  } else {
                    formParams = new URLSearchParams();
                  }
                  if (requestParameters["includeBlockedBy"] != null) {
                    formParams.append("include_blocked_by", requestParameters["includeBlockedBy"]);
                  }
                  if (requestParameters["includeBlocking"] != null) {
                    formParams.append("include_blocking", requestParameters["includeBlocking"]);
                  }
                  if (requestParameters["includeCanDm"] != null) {
                    formParams.append("include_can_dm", requestParameters["includeCanDm"]);
                  }
                  if (requestParameters["includeCanMediaTag"] != null) {
                    formParams.append("include_can_media_tag", requestParameters["includeCanMediaTag"]);
                  }
                  if (requestParameters["includeExtHasNftAvatar"] != null) {
                    formParams.append("include_ext_has_nft_avatar", requestParameters["includeExtHasNftAvatar"]);
                  }
                  if (requestParameters["includeExtIsBlueVerified"] != null) {
                    formParams.append("include_ext_is_blue_verified", requestParameters["includeExtIsBlueVerified"]);
                  }
                  if (requestParameters["includeExtProfileImageShape"] != null) {
                    formParams.append("include_ext_profile_image_shape", requestParameters["includeExtProfileImageShape"]);
                  }
                  if (requestParameters["includeExtVerifiedType"] != null) {
                    formParams.append("include_ext_verified_type", requestParameters["includeExtVerifiedType"]);
                  }
                  if (requestParameters["includeFollowedBy"] != null) {
                    formParams.append("include_followed_by", requestParameters["includeFollowedBy"]);
                  }
                  if (requestParameters["includeMuteEdge"] != null) {
                    formParams.append("include_mute_edge", requestParameters["includeMuteEdge"]);
                  }
                  if (requestParameters["includeProfileInterstitialType"] != null) {
                    formParams.append("include_profile_interstitial_type", requestParameters["includeProfileInterstitialType"]);
                  }
                  if (requestParameters["includeWantRetweets"] != null) {
                    formParams.append("include_want_retweets", requestParameters["includeWantRetweets"]);
                  }
                  if (requestParameters["skipStatus"] != null) {
                    formParams.append("skip_status", requestParameters["skipStatus"]);
                  }
                  if (requestParameters["userId"] != null) {
                    formParams.append("user_id", requestParameters["userId"]);
                  }
                  return [4, this.request({
                    path: "/1.1/friendships/create.json",
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: formParams
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.VoidApiResponse(response)];
              }
            });
          });
        };
        V11PostApi2.prototype.postCreateFriendships = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postCreateFriendshipsRaw(requestParameters, initOverrides)];
                case 1:
                  _a.sent();
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        V11PostApi2.prototype.postDestroyFriendshipsRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, consumes, canConsumeForm, formParams, useForm, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["includeBlockedBy"] == null) {
                    throw new runtime.RequiredError("includeBlockedBy", 'Required parameter "includeBlockedBy" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeBlocking"] == null) {
                    throw new runtime.RequiredError("includeBlocking", 'Required parameter "includeBlocking" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeCanDm"] == null) {
                    throw new runtime.RequiredError("includeCanDm", 'Required parameter "includeCanDm" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeCanMediaTag"] == null) {
                    throw new runtime.RequiredError("includeCanMediaTag", 'Required parameter "includeCanMediaTag" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeExtHasNftAvatar"] == null) {
                    throw new runtime.RequiredError("includeExtHasNftAvatar", 'Required parameter "includeExtHasNftAvatar" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeExtIsBlueVerified"] == null) {
                    throw new runtime.RequiredError("includeExtIsBlueVerified", 'Required parameter "includeExtIsBlueVerified" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeExtProfileImageShape"] == null) {
                    throw new runtime.RequiredError("includeExtProfileImageShape", 'Required parameter "includeExtProfileImageShape" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeExtVerifiedType"] == null) {
                    throw new runtime.RequiredError("includeExtVerifiedType", 'Required parameter "includeExtVerifiedType" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeFollowedBy"] == null) {
                    throw new runtime.RequiredError("includeFollowedBy", 'Required parameter "includeFollowedBy" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeMuteEdge"] == null) {
                    throw new runtime.RequiredError("includeMuteEdge", 'Required parameter "includeMuteEdge" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeProfileInterstitialType"] == null) {
                    throw new runtime.RequiredError("includeProfileInterstitialType", 'Required parameter "includeProfileInterstitialType" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["includeWantRetweets"] == null) {
                    throw new runtime.RequiredError("includeWantRetweets", 'Required parameter "includeWantRetweets" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["skipStatus"] == null) {
                    throw new runtime.RequiredError("skipStatus", 'Required parameter "skipStatus" was null or undefined when calling postDestroyFriendships().');
                  }
                  if (requestParameters["userId"] == null) {
                    throw new runtime.RequiredError("userId", 'Required parameter "userId" was null or undefined when calling postDestroyFriendships().');
                  }
                  queryParameters = {};
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  consumes = [
                    { contentType: "application/x-www-form-urlencoded" }
                  ];
                  canConsumeForm = runtime.canConsumeForm(consumes);
                  useForm = false;
                  if (useForm) {
                    formParams = new FormData();
                  } else {
                    formParams = new URLSearchParams();
                  }
                  if (requestParameters["includeBlockedBy"] != null) {
                    formParams.append("include_blocked_by", requestParameters["includeBlockedBy"]);
                  }
                  if (requestParameters["includeBlocking"] != null) {
                    formParams.append("include_blocking", requestParameters["includeBlocking"]);
                  }
                  if (requestParameters["includeCanDm"] != null) {
                    formParams.append("include_can_dm", requestParameters["includeCanDm"]);
                  }
                  if (requestParameters["includeCanMediaTag"] != null) {
                    formParams.append("include_can_media_tag", requestParameters["includeCanMediaTag"]);
                  }
                  if (requestParameters["includeExtHasNftAvatar"] != null) {
                    formParams.append("include_ext_has_nft_avatar", requestParameters["includeExtHasNftAvatar"]);
                  }
                  if (requestParameters["includeExtIsBlueVerified"] != null) {
                    formParams.append("include_ext_is_blue_verified", requestParameters["includeExtIsBlueVerified"]);
                  }
                  if (requestParameters["includeExtProfileImageShape"] != null) {
                    formParams.append("include_ext_profile_image_shape", requestParameters["includeExtProfileImageShape"]);
                  }
                  if (requestParameters["includeExtVerifiedType"] != null) {
                    formParams.append("include_ext_verified_type", requestParameters["includeExtVerifiedType"]);
                  }
                  if (requestParameters["includeFollowedBy"] != null) {
                    formParams.append("include_followed_by", requestParameters["includeFollowedBy"]);
                  }
                  if (requestParameters["includeMuteEdge"] != null) {
                    formParams.append("include_mute_edge", requestParameters["includeMuteEdge"]);
                  }
                  if (requestParameters["includeProfileInterstitialType"] != null) {
                    formParams.append("include_profile_interstitial_type", requestParameters["includeProfileInterstitialType"]);
                  }
                  if (requestParameters["includeWantRetweets"] != null) {
                    formParams.append("include_want_retweets", requestParameters["includeWantRetweets"]);
                  }
                  if (requestParameters["skipStatus"] != null) {
                    formParams.append("skip_status", requestParameters["skipStatus"]);
                  }
                  if (requestParameters["userId"] != null) {
                    formParams.append("user_id", requestParameters["userId"]);
                  }
                  return [4, this.request({
                    path: "/1.1/friendships/destroy.json",
                    method: "POST",
                    headers: headerParameters,
                    query: queryParameters,
                    body: formParams
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.VoidApiResponse(response)];
              }
            });
          });
        };
        V11PostApi2.prototype.postDestroyFriendships = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.postDestroyFriendshipsRaw(requestParameters, initOverrides)];
                case 1:
                  _a.sent();
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        return V11PostApi2;
      }(runtime.BaseAPI)
    );
    exports2.V11PostApi = V11PostApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/V20GetApi.js
var require_V20GetApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/V20GetApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __extends = exports2 && exports2.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.V20GetApi = void 0;
    var runtime = require_runtime();
    var V20GetApi = (
      /** @class */
      function(_super) {
        __extends(V20GetApi2, _super);
        function V20GetApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        V20GetApi2.prototype.getSearchAdaptiveRaw = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, token, tokenString, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, response;
            return __generator(this, function(_14) {
              switch (_14.label) {
                case 0:
                  if (requestParameters["includeProfileInterstitialType"] == null) {
                    throw new runtime.RequiredError("includeProfileInterstitialType", 'Required parameter "includeProfileInterstitialType" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeBlocking"] == null) {
                    throw new runtime.RequiredError("includeBlocking", 'Required parameter "includeBlocking" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeBlockedBy"] == null) {
                    throw new runtime.RequiredError("includeBlockedBy", 'Required parameter "includeBlockedBy" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeFollowedBy"] == null) {
                    throw new runtime.RequiredError("includeFollowedBy", 'Required parameter "includeFollowedBy" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeWantRetweets"] == null) {
                    throw new runtime.RequiredError("includeWantRetweets", 'Required parameter "includeWantRetweets" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeMuteEdge"] == null) {
                    throw new runtime.RequiredError("includeMuteEdge", 'Required parameter "includeMuteEdge" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeCanDm"] == null) {
                    throw new runtime.RequiredError("includeCanDm", 'Required parameter "includeCanDm" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeCanMediaTag"] == null) {
                    throw new runtime.RequiredError("includeCanMediaTag", 'Required parameter "includeCanMediaTag" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtHasNftAvatar"] == null) {
                    throw new runtime.RequiredError("includeExtHasNftAvatar", 'Required parameter "includeExtHasNftAvatar" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtIsBlueVerified"] == null) {
                    throw new runtime.RequiredError("includeExtIsBlueVerified", 'Required parameter "includeExtIsBlueVerified" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtVerifiedType"] == null) {
                    throw new runtime.RequiredError("includeExtVerifiedType", 'Required parameter "includeExtVerifiedType" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtProfileImageShape"] == null) {
                    throw new runtime.RequiredError("includeExtProfileImageShape", 'Required parameter "includeExtProfileImageShape" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["skipStatus"] == null) {
                    throw new runtime.RequiredError("skipStatus", 'Required parameter "skipStatus" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["cardsPlatform"] == null) {
                    throw new runtime.RequiredError("cardsPlatform", 'Required parameter "cardsPlatform" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeCards"] == null) {
                    throw new runtime.RequiredError("includeCards", 'Required parameter "includeCards" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtAltText"] == null) {
                    throw new runtime.RequiredError("includeExtAltText", 'Required parameter "includeExtAltText" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtLimitedActionResults"] == null) {
                    throw new runtime.RequiredError("includeExtLimitedActionResults", 'Required parameter "includeExtLimitedActionResults" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeQuoteCount"] == null) {
                    throw new runtime.RequiredError("includeQuoteCount", 'Required parameter "includeQuoteCount" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeReplyCount"] == null) {
                    throw new runtime.RequiredError("includeReplyCount", 'Required parameter "includeReplyCount" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["tweetMode"] == null) {
                    throw new runtime.RequiredError("tweetMode", 'Required parameter "tweetMode" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtViews"] == null) {
                    throw new runtime.RequiredError("includeExtViews", 'Required parameter "includeExtViews" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeEntities"] == null) {
                    throw new runtime.RequiredError("includeEntities", 'Required parameter "includeEntities" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeUserEntities"] == null) {
                    throw new runtime.RequiredError("includeUserEntities", 'Required parameter "includeUserEntities" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtMediaColor"] == null) {
                    throw new runtime.RequiredError("includeExtMediaColor", 'Required parameter "includeExtMediaColor" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtMediaAvailability"] == null) {
                    throw new runtime.RequiredError("includeExtMediaAvailability", 'Required parameter "includeExtMediaAvailability" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtSensitiveMediaWarning"] == null) {
                    throw new runtime.RequiredError("includeExtSensitiveMediaWarning", 'Required parameter "includeExtSensitiveMediaWarning" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtTrustedFriendsMetadata"] == null) {
                    throw new runtime.RequiredError("includeExtTrustedFriendsMetadata", 'Required parameter "includeExtTrustedFriendsMetadata" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["sendErrorCodes"] == null) {
                    throw new runtime.RequiredError("sendErrorCodes", 'Required parameter "sendErrorCodes" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["simpleQuotedTweet"] == null) {
                    throw new runtime.RequiredError("simpleQuotedTweet", 'Required parameter "simpleQuotedTweet" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["q"] == null) {
                    throw new runtime.RequiredError("q", 'Required parameter "q" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["querySource"] == null) {
                    throw new runtime.RequiredError("querySource", 'Required parameter "querySource" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["count"] == null) {
                    throw new runtime.RequiredError("count", 'Required parameter "count" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["requestContext"] == null) {
                    throw new runtime.RequiredError("requestContext", 'Required parameter "requestContext" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["pc"] == null) {
                    throw new runtime.RequiredError("pc", 'Required parameter "pc" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["spellingCorrections"] == null) {
                    throw new runtime.RequiredError("spellingCorrections", 'Required parameter "spellingCorrections" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["includeExtEditControl"] == null) {
                    throw new runtime.RequiredError("includeExtEditControl", 'Required parameter "includeExtEditControl" was null or undefined when calling getSearchAdaptive().');
                  }
                  if (requestParameters["ext"] == null) {
                    throw new runtime.RequiredError("ext", 'Required parameter "ext" was null or undefined when calling getSearchAdaptive().');
                  }
                  queryParameters = {};
                  if (requestParameters["includeProfileInterstitialType"] != null) {
                    queryParameters["include_profile_interstitial_type"] = requestParameters["includeProfileInterstitialType"];
                  }
                  if (requestParameters["includeBlocking"] != null) {
                    queryParameters["include_blocking"] = requestParameters["includeBlocking"];
                  }
                  if (requestParameters["includeBlockedBy"] != null) {
                    queryParameters["include_blocked_by"] = requestParameters["includeBlockedBy"];
                  }
                  if (requestParameters["includeFollowedBy"] != null) {
                    queryParameters["include_followed_by"] = requestParameters["includeFollowedBy"];
                  }
                  if (requestParameters["includeWantRetweets"] != null) {
                    queryParameters["include_want_retweets"] = requestParameters["includeWantRetweets"];
                  }
                  if (requestParameters["includeMuteEdge"] != null) {
                    queryParameters["include_mute_edge"] = requestParameters["includeMuteEdge"];
                  }
                  if (requestParameters["includeCanDm"] != null) {
                    queryParameters["include_can_dm"] = requestParameters["includeCanDm"];
                  }
                  if (requestParameters["includeCanMediaTag"] != null) {
                    queryParameters["include_can_media_tag"] = requestParameters["includeCanMediaTag"];
                  }
                  if (requestParameters["includeExtHasNftAvatar"] != null) {
                    queryParameters["include_ext_has_nft_avatar"] = requestParameters["includeExtHasNftAvatar"];
                  }
                  if (requestParameters["includeExtIsBlueVerified"] != null) {
                    queryParameters["include_ext_is_blue_verified"] = requestParameters["includeExtIsBlueVerified"];
                  }
                  if (requestParameters["includeExtVerifiedType"] != null) {
                    queryParameters["include_ext_verified_type"] = requestParameters["includeExtVerifiedType"];
                  }
                  if (requestParameters["includeExtProfileImageShape"] != null) {
                    queryParameters["include_ext_profile_image_shape"] = requestParameters["includeExtProfileImageShape"];
                  }
                  if (requestParameters["skipStatus"] != null) {
                    queryParameters["skip_status"] = requestParameters["skipStatus"];
                  }
                  if (requestParameters["cardsPlatform"] != null) {
                    queryParameters["cards_platform"] = requestParameters["cardsPlatform"];
                  }
                  if (requestParameters["includeCards"] != null) {
                    queryParameters["include_cards"] = requestParameters["includeCards"];
                  }
                  if (requestParameters["includeExtAltText"] != null) {
                    queryParameters["include_ext_alt_text"] = requestParameters["includeExtAltText"];
                  }
                  if (requestParameters["includeExtLimitedActionResults"] != null) {
                    queryParameters["include_ext_limited_action_results"] = requestParameters["includeExtLimitedActionResults"];
                  }
                  if (requestParameters["includeQuoteCount"] != null) {
                    queryParameters["include_quote_count"] = requestParameters["includeQuoteCount"];
                  }
                  if (requestParameters["includeReplyCount"] != null) {
                    queryParameters["include_reply_count"] = requestParameters["includeReplyCount"];
                  }
                  if (requestParameters["tweetMode"] != null) {
                    queryParameters["tweet_mode"] = requestParameters["tweetMode"];
                  }
                  if (requestParameters["includeExtViews"] != null) {
                    queryParameters["include_ext_views"] = requestParameters["includeExtViews"];
                  }
                  if (requestParameters["includeEntities"] != null) {
                    queryParameters["include_entities"] = requestParameters["includeEntities"];
                  }
                  if (requestParameters["includeUserEntities"] != null) {
                    queryParameters["include_user_entities"] = requestParameters["includeUserEntities"];
                  }
                  if (requestParameters["includeExtMediaColor"] != null) {
                    queryParameters["include_ext_media_color"] = requestParameters["includeExtMediaColor"];
                  }
                  if (requestParameters["includeExtMediaAvailability"] != null) {
                    queryParameters["include_ext_media_availability"] = requestParameters["includeExtMediaAvailability"];
                  }
                  if (requestParameters["includeExtSensitiveMediaWarning"] != null) {
                    queryParameters["include_ext_sensitive_media_warning"] = requestParameters["includeExtSensitiveMediaWarning"];
                  }
                  if (requestParameters["includeExtTrustedFriendsMetadata"] != null) {
                    queryParameters["include_ext_trusted_friends_metadata"] = requestParameters["includeExtTrustedFriendsMetadata"];
                  }
                  if (requestParameters["sendErrorCodes"] != null) {
                    queryParameters["send_error_codes"] = requestParameters["sendErrorCodes"];
                  }
                  if (requestParameters["simpleQuotedTweet"] != null) {
                    queryParameters["simple_quoted_tweet"] = requestParameters["simpleQuotedTweet"];
                  }
                  if (requestParameters["q"] != null) {
                    queryParameters["q"] = requestParameters["q"];
                  }
                  if (requestParameters["querySource"] != null) {
                    queryParameters["query_source"] = requestParameters["querySource"];
                  }
                  if (requestParameters["count"] != null) {
                    queryParameters["count"] = requestParameters["count"];
                  }
                  if (requestParameters["requestContext"] != null) {
                    queryParameters["requestContext"] = requestParameters["requestContext"];
                  }
                  if (requestParameters["pc"] != null) {
                    queryParameters["pc"] = requestParameters["pc"];
                  }
                  if (requestParameters["spellingCorrections"] != null) {
                    queryParameters["spelling_corrections"] = requestParameters["spellingCorrections"];
                  }
                  if (requestParameters["includeExtEditControl"] != null) {
                    queryParameters["include_ext_edit_control"] = requestParameters["includeExtEditControl"];
                  }
                  if (requestParameters["ext"] != null) {
                    queryParameters["ext"] = requestParameters["ext"];
                  }
                  headerParameters = {};
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 2];
                  _a = headerParameters;
                  _b = "Accept";
                  return [4, this.configuration.apiKey("Accept")];
                case 1:
                  _a[_b] = _14.sent();
                  _14.label = 2;
                case 2:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 4];
                  _c = headerParameters;
                  _d = "x-twitter-client-language";
                  return [4, this.configuration.apiKey("x-twitter-client-language")];
                case 3:
                  _c[_d] = _14.sent();
                  _14.label = 4;
                case 4:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 6];
                  _e = headerParameters;
                  _f = "Priority";
                  return [4, this.configuration.apiKey("Priority")];
                case 5:
                  _e[_f] = _14.sent();
                  _14.label = 6;
                case 6:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 8];
                  _g = headerParameters;
                  _h = "Referer";
                  return [4, this.configuration.apiKey("Referer")];
                case 7:
                  _g[_h] = _14.sent();
                  _14.label = 8;
                case 8:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 10];
                  _j = headerParameters;
                  _k = "Sec-Fetch-Dest";
                  return [4, this.configuration.apiKey("Sec-Fetch-Dest")];
                case 9:
                  _j[_k] = _14.sent();
                  _14.label = 10;
                case 10:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 12];
                  _l = headerParameters;
                  _m = "Sec-Ch-Ua-Platform";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Platform")];
                case 11:
                  _l[_m] = _14.sent();
                  _14.label = 12;
                case 12:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 14];
                  _o = headerParameters;
                  _p = "Sec-Fetch-Mode";
                  return [4, this.configuration.apiKey("Sec-Fetch-Mode")];
                case 13:
                  _o[_p] = _14.sent();
                  _14.label = 14;
                case 14:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 16];
                  _q = headerParameters;
                  _r = "x-csrf-token";
                  return [4, this.configuration.apiKey("x-csrf-token")];
                case 15:
                  _q[_r] = _14.sent();
                  _14.label = 16;
                case 16:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 18];
                  _s = headerParameters;
                  _t = "x-client-uuid";
                  return [4, this.configuration.apiKey("x-client-uuid")];
                case 17:
                  _s[_t] = _14.sent();
                  _14.label = 18;
                case 18:
                  if (!(this.configuration && this.configuration.accessToken)) return [3, 20];
                  token = this.configuration.accessToken;
                  return [4, token("BearerAuth", [])];
                case 19:
                  tokenString = _14.sent();
                  if (tokenString) {
                    headerParameters["Authorization"] = "Bearer ".concat(tokenString);
                  }
                  _14.label = 20;
                case 20:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 22];
                  _u = headerParameters;
                  _v = "x-guest-token";
                  return [4, this.configuration.apiKey("x-guest-token")];
                case 21:
                  _u[_v] = _14.sent();
                  _14.label = 22;
                case 22:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 24];
                  _w = headerParameters;
                  _x = "Sec-Ch-Ua";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua")];
                case 23:
                  _w[_x] = _14.sent();
                  _14.label = 24;
                case 24:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 26];
                  _y = headerParameters;
                  _z = "x-client-transaction-id";
                  return [4, this.configuration.apiKey("x-client-transaction-id")];
                case 25:
                  _y[_z] = _14.sent();
                  _14.label = 26;
                case 26:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 28];
                  _0 = headerParameters;
                  _1 = "x-twitter-active-user";
                  return [4, this.configuration.apiKey("x-twitter-active-user")];
                case 27:
                  _0[_1] = _14.sent();
                  _14.label = 28;
                case 28:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 30];
                  _2 = headerParameters;
                  _3 = "user-agent";
                  return [4, this.configuration.apiKey("user-agent")];
                case 29:
                  _2[_3] = _14.sent();
                  _14.label = 30;
                case 30:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 32];
                  _4 = headerParameters;
                  _5 = "Accept-Language";
                  return [4, this.configuration.apiKey("Accept-Language")];
                case 31:
                  _4[_5] = _14.sent();
                  _14.label = 32;
                case 32:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 34];
                  _6 = headerParameters;
                  _7 = "Sec-Fetch-Site";
                  return [4, this.configuration.apiKey("Sec-Fetch-Site")];
                case 33:
                  _6[_7] = _14.sent();
                  _14.label = 34;
                case 34:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 36];
                  _8 = headerParameters;
                  _9 = "x-twitter-auth-type";
                  return [4, this.configuration.apiKey("x-twitter-auth-type")];
                case 35:
                  _8[_9] = _14.sent();
                  _14.label = 36;
                case 36:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 38];
                  _10 = headerParameters;
                  _11 = "Sec-Ch-Ua-Mobile";
                  return [4, this.configuration.apiKey("Sec-Ch-Ua-Mobile")];
                case 37:
                  _10[_11] = _14.sent();
                  _14.label = 38;
                case 38:
                  if (!(this.configuration && this.configuration.apiKey)) return [3, 40];
                  _12 = headerParameters;
                  _13 = "Accept-Encoding";
                  return [4, this.configuration.apiKey("Accept-Encoding")];
                case 39:
                  _12[_13] = _14.sent();
                  _14.label = 40;
                case 40:
                  return [4, this.request({
                    path: "/2/search/adaptive.json",
                    method: "GET",
                    headers: headerParameters,
                    query: queryParameters
                  }, initOverrides)];
                case 41:
                  response = _14.sent();
                  return [2, new runtime.VoidApiResponse(response)];
              }
            });
          });
        };
        V20GetApi2.prototype.getSearchAdaptive = function(requestParameters, initOverrides) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.getSearchAdaptiveRaw(requestParameters, initOverrides)];
                case 1:
                  _a.sent();
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        return V20GetApi2;
      }(runtime.BaseAPI)
    );
    exports2.V20GetApi = V20GetApi;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/index.js
var require_apis = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/apis/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p)) __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_DefaultApi(), exports2);
    __exportStar(require_OtherApi(), exports2);
    __exportStar(require_PostApi(), exports2);
    __exportStar(require_TweetApi(), exports2);
    __exportStar(require_UserApi(), exports2);
    __exportStar(require_UserListApi(), exports2);
    __exportStar(require_UsersApi(), exports2);
    __exportStar(require_V11GetApi(), exports2);
    __exportStar(require_V11PostApi(), exports2);
    __exportStar(require_V20GetApi(), exports2);
  }
});

// node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/index.js
var require_dist = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript-generated@0.0.32/node_modules/twitter-openapi-typescript-generated/dist/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p)) __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_runtime(), exports2);
    __exportStar(require_apis(), exports2);
    __exportStar(require_models(), exports2);
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/utils/api.js
var require_api = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/utils/api.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i2 = 1, n = arguments.length; i2 < n; i2++) {
          s = arguments[i2];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.buildHeader = exports2.buildCursor = exports2.entriesCursor = exports2.userResultConverter = exports2.userEntriesConverter = exports2.userOrNullConverter = exports2.tweetResultsConverter = exports2.buildTweetApiUtils = exports2.moduleConverter = exports2.tweetEntriesConverter = exports2.instructionConverter = exports2.instructionToEntry = exports2.errorCheck = exports2.getKwargs = void 0;
    var i = require_dist();
    var getKwargs = function(flag, additional) {
      var kwargs = { pathQueryId: flag.queryId };
      if (flag.variables != void 0) {
        kwargs.variables = JSON.stringify(__assign(__assign({}, flag.variables), additional));
      }
      if (flag.features != void 0) {
        kwargs.features = JSON.stringify(flag.features);
      }
      if (flag.fieldToggles != void 0) {
        kwargs.fieldToggles = JSON.stringify(flag.fieldToggles);
      }
      return kwargs;
    };
    exports2.getKwargs = getKwargs;
    var errorCheck = function(data, error) {
      var _a;
      if (data == void 0) {
        throw Error((_a = error === null || error === void 0 ? void 0 : error.map(function(e) {
          return e.message;
        }).join(", ")) !== null && _a !== void 0 ? _a : "No data");
      }
      return data;
    };
    exports2.errorCheck = errorCheck;
    var instructionToEntry = function(item) {
      return item.flatMap(function(e) {
        if (e.type == i.InstructionType.TimelineAddEntries) {
          return e.entries;
        } else if (e.type == i.InstructionType.TimelineAddToModule) {
          return [];
        } else if (e.type == i.InstructionType.TimelineReplaceEntry) {
          return [e.entry];
        }
        return [];
      });
    };
    exports2.instructionToEntry = instructionToEntry;
    var instructionConverter = function(item) {
      return item.flatMap(function(e) {
        var _a;
        if (e.type == i.InstructionType.TimelineAddEntries) {
          return [];
        } else if (e.type == i.InstructionType.TimelineAddToModule) {
          var item_1 = (_a = e.moduleItems) !== null && _a !== void 0 ? _a : [];
          return (0, exports2.moduleConverter)(item_1);
        } else if (e.type == i.InstructionType.TimelineReplaceEntry) {
          return [];
        }
        return [];
      }).filter(function(e) {
        return e != void 0;
      }).flat();
    };
    exports2.instructionConverter = instructionConverter;
    var tweetEntriesConverter = function(item) {
      return item.map(function(e) {
        var _a;
        if (e.content.entryType == i.ContentEntryType.TimelineTimelineItem) {
          var item_2 = e.content.itemContent;
          var timeline = item_2.itemType == i.ContentItemType.TimelineTweet ? item_2 : void 0;
          if (timeline == void 0)
            return void 0;
          return [
            (0, exports2.buildTweetApiUtils)({
              result: timeline.tweetResults,
              promotedMetadata: timeline.promotedMetadata
            })
          ];
        } else if (e.content.entryType == i.ContentEntryType.TimelineTimelineModule) {
          var item_3 = (_a = e.content.items) !== null && _a !== void 0 ? _a : [];
          return (0, exports2.moduleConverter)(item_3);
        }
      }).filter(function(e) {
        return e != void 0;
      }).map(function(e) {
        return e.filter(function(e2) {
          return e2 != void 0;
        });
      }).flat();
    };
    exports2.tweetEntriesConverter = tweetEntriesConverter;
    var moduleConverter = function(item) {
      var timelineList = item.filter(function(e) {
        return e.item.itemContent.itemType == i.ContentItemType.TimelineTweet;
      }).map(function(e) {
        return e.item.itemContent;
      });
      if (timelineList.length == 0)
        return [];
      if (timelineList[0].tweetDisplayType == i.TimelineTweetTweetDisplayTypeEnum.MediaGrid) {
        return timelineList.map(function(e) {
          return (0, exports2.buildTweetApiUtils)({
            result: e.tweetResults,
            promotedMetadata: e.promotedMetadata
          });
        }).filter(function(e) {
          return e != void 0;
        });
      } else {
        var timeline = timelineList[0];
        return [
          (0, exports2.buildTweetApiUtils)({
            result: timeline.tweetResults,
            promotedMetadata: timeline.promotedMetadata,
            reply: timelineList.slice(1)
          })
        ].filter(function(e) {
          return e != void 0;
        });
      }
    };
    exports2.moduleConverter = moduleConverter;
    var buildTweetApiUtils = function(args) {
      var _a, _b, _c, _d;
      var tweet = (0, exports2.tweetResultsConverter)(args.result);
      if (tweet == void 0)
        return void 0;
      var result = (_a = tweet.core) === null || _a === void 0 ? void 0 : _a.userResults.result;
      var user = result && (0, exports2.userOrNullConverter)(result);
      if (user == void 0)
        return void 0;
      var quoted = tweet.quotedStatusResult;
      var retweeted = (_b = tweet.legacy) === null || _b === void 0 ? void 0 : _b.retweetedStatusResult;
      var reply = (_d = (_c = args.reply) === null || _c === void 0 ? void 0 : _c.map(function(e) {
        return (0, exports2.buildTweetApiUtils)({ result: e.tweetResults, promotedMetadata: e.promotedMetadata });
      }).filter(function(e) {
        return e != void 0;
      })) !== null && _d !== void 0 ? _d : [];
      return {
        raw: args.result,
        promotedMetadata: args.promotedMetadata,
        tweet,
        user,
        replies: reply,
        retweeted: retweeted == void 0 ? void 0 : (0, exports2.buildTweetApiUtils)({ result: retweeted }),
        quoted: quoted == void 0 ? void 0 : (0, exports2.buildTweetApiUtils)({ result: quoted })
      };
    };
    exports2.buildTweetApiUtils = buildTweetApiUtils;
    var tweetResultsConverter = function(tweetResults) {
      if (tweetResults.result == void 0)
        return void 0;
      switch (tweetResults.result.typename) {
        case i.TypeName.Tweet:
          return tweetResults.result;
        case i.TypeName.TweetWithVisibilityResults:
          return tweetResults.result.tweet;
        case i.TypeName.TweetTombstone:
          return void 0;
      }
    };
    exports2.tweetResultsConverter = tweetResultsConverter;
    var userOrNullConverter = function(userResults) {
      if (userResults.typename == i.TypeName.User) {
        return userResults;
      } else if (userResults.typename == void 0) {
        return userResults;
      }
    };
    exports2.userOrNullConverter = userOrNullConverter;
    var userEntriesConverter = function(item) {
      return item.map(function(e) {
        if (e.content.typename == i.TypeName.TimelineTimelineItem) {
          var item_4 = e.content.itemContent;
          if (item_4.itemType == i.ContentItemType.TimelineUser) {
            return item_4.userResults;
          }
        }
      }).filter(function(e) {
        return e != void 0;
      });
    };
    exports2.userEntriesConverter = userEntriesConverter;
    var userResultConverter = function(user) {
      return user.map(function(e) {
        var user2 = e.result && (0, exports2.userOrNullConverter)(e.result);
        if (user2 == void 0)
          return void 0;
        return {
          raw: e,
          user: user2
        };
      }).filter(function(e) {
        return e != void 0;
      });
    };
    exports2.userResultConverter = userResultConverter;
    var entriesCursor = function(item) {
      var cursorList = item.map(function(e) {
        if (e.content.entryType == i.ContentEntryType.TimelineTimelineCursor) {
          return e.content;
        } else if (e.content.entryType == i.ContentEntryType.TimelineTimelineItem) {
          var item_5 = e.content;
          if (item_5.itemContent.itemType == i.ContentItemType.TimelineTimelineCursor) {
            return item_5.itemContent;
          }
        }
      }).filter(function(e) {
        return e != void 0;
      });
      return (0, exports2.buildCursor)(cursorList);
    };
    exports2.entriesCursor = entriesCursor;
    var buildCursor = function(cursorList) {
      return {
        top: cursorList.find(function(e) {
          return e.cursorType == i.CursorType.Top;
        }),
        bottom: cursorList.find(function(e) {
          return e.cursorType == i.CursorType.Bottom;
        })
      };
    };
    exports2.buildCursor = buildCursor;
    var buildHeader = function(headers) {
      var _a, _b, _c;
      return {
        raw: headers,
        connectionHash: headers.get("x-connection-hash"),
        contentTypeOptions: headers.get("x-content-type-options"),
        frameOptions: headers.get("x-frame-options"),
        rateLimitLimit: Number((_a = headers.get("x-rate-limit-limit")) !== null && _a !== void 0 ? _a : 0),
        rateLimitRemaining: Number((_b = headers.get("x-rate-limit-remaining")) !== null && _b !== void 0 ? _b : 0),
        rateLimitReset: Number((_c = headers.get("x-rate-limit-reset")) !== null && _c !== void 0 ? _c : 0),
        responseTime: Number(headers.get("x-response-time")),
        tfePreserveBody: headers.get("x-tfe-preserve-body") == "true",
        transactionId: headers.get("x-transaction-id"),
        twitterResponseTags: headers.get("x-twitter-response-tags"),
        xssProtection: Number(headers.get("x-xss-protection"))
      };
    };
    exports2.buildHeader = buildHeader;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/utils/index.js
var require_utils = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/utils/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p)) __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_api(), exports2);
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/defaultApi.js
var require_defaultApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/defaultApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DefaultApiUtils = void 0;
    var utils_1 = require_utils();
    var DefaultApiUtils = (
      /** @class */
      function() {
        function DefaultApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        DefaultApiUtils2.prototype.request = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var apiFn, args, response, data, _a, _b;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  apiFn = param.apiFn.bind(this.api);
                  args = (0, utils_1.getKwargs)(this.flag[param.key], param.param);
                  return [4, apiFn(args, this.initOverrides)];
                case 1:
                  response = _c.sent();
                  _b = (_a = param).convertFn;
                  return [4, response.value()];
                case 2:
                  data = _b.apply(_a, [_c.sent()]);
                  return [2, {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers),
                    data
                  }];
              }
            });
          });
        };
        DefaultApiUtils2.prototype.getProfileSpotlightsQuery = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign({ screenName: param.screenName }, param.extraParam);
                  return [4, this.request({
                    key: "ProfileSpotlightsQuery",
                    apiFn: this.api.getProfileSpotlightsQueryRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)(e.data.userResultByScreenName, e.errors);
                    },
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        DefaultApiUtils2.prototype.getTweetResultByRestId = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign({ tweetId: param.tweetId }, param.extraParam);
                  return [4, this.request({
                    key: "TweetResultByRestId",
                    apiFn: this.api.getTweetResultByRestIdRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)((0, utils_1.buildTweetApiUtils)({ result: (0, utils_1.errorCheck)(e.data.tweetResult, e.errors) }), e.errors);
                    },
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        return DefaultApiUtils2;
      }()
    );
    exports2.DefaultApiUtils = DefaultApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/initialStateApi.js
var require_initialStateApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/initialStateApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.InitialStateApiUtils = void 0;
    var InitialStateApiUtils = (
      /** @class */
      /* @__PURE__ */ function() {
        function InitialStateApiUtils2() {
        }
        return InitialStateApiUtils2;
      }()
    );
    exports2.InitialStateApiUtils = InitialStateApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/postApi.js
var require_postApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/postApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i2 = 1, n = arguments.length; i2 < n; i2++) {
          s = arguments[i2];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PostApiUtils = void 0;
    var utils_1 = require_utils();
    var i = require_dist();
    var PostApiUtils = (
      /** @class */
      function() {
        function PostApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        PostApiUtils2.prototype.postCreateTweet = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, queryId, features, variables, response;
            var _a;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  args = __assign({ tweetText: param.tweetText }, param.extraParam);
                  queryId = "CreateTweet";
                  features = i.PostCreateTweetRequestFeaturesFromJSON(this.flag[queryId]["features"]);
                  variables = i.PostCreateTweetRequestVariablesFromJSON(this.flag[queryId]["variables"]);
                  if (param.mediaIds) {
                    variables.media.mediaEntities = param.mediaIds.map(function(mediaId, index) {
                      var _a2;
                      return {
                        mediaId,
                        taggedUsers: ((_a2 = param.taggedUsers) === null || _a2 === void 0 ? void 0 : _a2[index]) || []
                      };
                    });
                  }
                  variables.attachmentUrl = param.attachmentUrl;
                  if (param.conversationControl) {
                    variables.conversationControl = {
                      mode: param.conversationControl
                    };
                  }
                  if (param.inReplyToTweetId) {
                    variables.reply = {
                      excludeReplyUserIds: [],
                      inReplyToTweetId: param.inReplyToTweetId
                    };
                  }
                  variables.disallowedReplyOptions = null;
                  return [4, this.api.postCreateTweetRaw({
                    pathQueryId: this.flag[queryId]["queryId"],
                    postCreateTweetRequest: {
                      queryId: this.flag[queryId]["queryId"],
                      features,
                      variables: __assign(__assign({}, variables), args)
                    }
                  })];
                case 1:
                  response = _b.sent();
                  _a = {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers)
                  };
                  return [4, response.value()];
                case 2:
                  return [2, (_a.data = _b.sent(), _a)];
              }
            });
          });
        };
        PostApiUtils2.prototype.postDeleteTweet = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, queryId, variables, response;
            var _a;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  args = __assign({ tweetId: param.tweetId }, param.extraParam);
                  queryId = "DeleteTweet";
                  variables = i.PostCreateRetweetRequestVariablesFromJSON(this.flag[queryId]["variables"]);
                  return [4, this.api.postDeleteTweetRaw({
                    pathQueryId: this.flag[queryId]["queryId"],
                    postDeleteTweetRequest: {
                      queryId: this.flag[queryId]["queryId"],
                      variables: __assign(__assign({}, variables), args)
                    }
                  })];
                case 1:
                  response = _b.sent();
                  _a = {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers)
                  };
                  return [4, response.value()];
                case 2:
                  return [2, (_a.data = _b.sent(), _a)];
              }
            });
          });
        };
        PostApiUtils2.prototype.postCreateRetweet = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, queryId, variables, response;
            var _a;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  args = __assign({ tweetId: param.tweetId }, param.extraParam);
                  queryId = "CreateRetweet";
                  variables = i.PostCreateRetweetRequestVariablesFromJSON(this.flag[queryId]["variables"]);
                  return [4, this.api.postCreateRetweetRaw({
                    pathQueryId: this.flag[queryId]["queryId"],
                    postCreateRetweetRequest: {
                      queryId: this.flag[queryId]["queryId"],
                      variables: __assign(__assign({}, variables), args)
                    }
                  })];
                case 1:
                  response = _b.sent();
                  _a = {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers)
                  };
                  return [4, response.value()];
                case 2:
                  return [2, (_a.data = _b.sent(), _a)];
              }
            });
          });
        };
        PostApiUtils2.prototype.postDeleteRetweet = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, queryId, variables, response;
            var _a;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  args = __assign({ sourceTweetId: param.sourceTweetId }, param.extraParam);
                  queryId = "DeleteRetweet";
                  variables = i.PostDeleteRetweetRequestVariablesFromJSON(this.flag[queryId]["variables"]);
                  return [4, this.api.postDeleteRetweetRaw({
                    pathQueryId: this.flag[queryId]["queryId"],
                    postDeleteRetweetRequest: {
                      queryId: this.flag[queryId]["queryId"],
                      variables: __assign(__assign({}, variables), args)
                    }
                  })];
                case 1:
                  response = _b.sent();
                  _a = {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers)
                  };
                  return [4, response.value()];
                case 2:
                  return [2, (_a.data = _b.sent(), _a)];
              }
            });
          });
        };
        PostApiUtils2.prototype.postFavoriteTweet = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, queryId, variables, response;
            var _a;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  args = __assign({ tweetId: param.tweetId }, param.extraParam);
                  queryId = "FavoriteTweet";
                  variables = i.PostCreateRetweetRequestVariablesFromJSON(this.flag[queryId]["variables"]);
                  return [4, this.api.postFavoriteTweetRaw({
                    pathQueryId: this.flag[queryId]["queryId"],
                    postFavoriteTweetRequest: {
                      queryId: this.flag[queryId]["queryId"],
                      variables: __assign(__assign({}, variables), args)
                    }
                  })];
                case 1:
                  response = _b.sent();
                  _a = {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers)
                  };
                  return [4, response.value()];
                case 2:
                  return [2, (_a.data = _b.sent(), _a)];
              }
            });
          });
        };
        PostApiUtils2.prototype.postUnfavoriteTweet = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, queryId, variables, response;
            var _a;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  args = __assign({ tweetId: param.tweetId }, param.extraParam);
                  queryId = "UnfavoriteTweet";
                  variables = i.PostCreateRetweetRequestVariablesFromJSON(this.flag[queryId]["variables"]);
                  return [4, this.api.postUnfavoriteTweetRaw({
                    pathQueryId: this.flag[queryId]["queryId"],
                    postUnfavoriteTweetRequest: {
                      queryId: this.flag[queryId]["queryId"],
                      variables: __assign(__assign({}, variables), args)
                    }
                  })];
                case 1:
                  response = _b.sent();
                  _a = {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers)
                  };
                  return [4, response.value()];
                case 2:
                  return [2, (_a.data = _b.sent(), _a)];
              }
            });
          });
        };
        return PostApiUtils2;
      }()
    );
    exports2.PostApiUtils = PostApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/tweetApi.js
var require_tweetApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/tweetApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    var __read = exports2 && exports2.__read || function(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o), r, ar = [], e;
      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
      } catch (error) {
        e = { error };
      } finally {
        try {
          if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
          if (e) throw e.error;
        }
      }
      return ar;
    };
    var __spreadArray = exports2 && exports2.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TweetApiUtils = void 0;
    var utils_1 = require_utils();
    var TweetApiUtils = (
      /** @class */
      function() {
        function TweetApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        TweetApiUtils2.prototype.request = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var apiFn, args, response, instruction, _a, _b, entry, data;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  apiFn = param.apiFn.bind(this.api);
                  args = (0, utils_1.getKwargs)(this.flag[param.key], param.param);
                  return [4, apiFn(args, this.initOverrides)];
                case 1:
                  response = _c.sent();
                  _b = (_a = param).convertFn;
                  return [4, response.value()];
                case 2:
                  instruction = _b.apply(_a, [_c.sent()]);
                  entry = (0, utils_1.instructionToEntry)(instruction);
                  data = __spreadArray(__spreadArray([], __read((0, utils_1.tweetEntriesConverter)(entry)), false), __read((0, utils_1.instructionConverter)(instruction)), false);
                  return [2, {
                    raw: {
                      response: response.raw
                    },
                    header: (0, utils_1.buildHeader)(response.raw.headers),
                    data: {
                      raw: {
                        instruction,
                        entry
                      },
                      cursor: (0, utils_1.entriesCursor)(entry),
                      data
                    }
                  }];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getTweetDetail = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ focalTweetId: param.focalTweetId }, param.cursor == void 0 ? {} : { cursor: param.cursor }), param.controllerData == void 0 ? {} : { controller_data: param.controllerData }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getTweetDetailRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)(e.data.threadedConversationWithInjectionsV2, e.errors).instructions;
                    },
                    key: "TweetDetail",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getSearchTimeline = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign(__assign({ rawQuery: param.rawQuery }, param.product == void 0 ? {} : { product: param.product }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.count == void 0 ? {} : { count: param.count }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getSearchTimelineRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)(e.data.searchByRawQuery, e.errors).searchTimeline.timeline.instructions;
                    },
                    key: "SearchTimeline",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getHomeTimeline = function() {
          return __awaiter(this, arguments, void 0, function(param) {
            var args, response;
            if (param === void 0) {
              param = {};
            }
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({}, param.count == void 0 ? {} : { count: param.count }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getHomeTimelineRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)(e.data.home, e.errors).homeTimelineUrt.instructions;
                    },
                    key: "HomeTimeline",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getHomeLatestTimeline = function() {
          return __awaiter(this, arguments, void 0, function(param) {
            var args, response;
            if (param === void 0) {
              param = {};
            }
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({}, param.count == void 0 ? {} : { count: param.count }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getHomeLatestTimelineRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)(e.data.home, e.errors).homeTimelineUrt.instructions;
                    },
                    key: "HomeLatestTimeline",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getListLatestTweetsTimeline = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ listId: param.listId }, param.count == void 0 ? {} : { count: param.count }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getListLatestTweetsTimelineRaw,
                    convertFn: function(e) {
                      var _a2;
                      return (0, utils_1.errorCheck)((_a2 = e.data.list) === null || _a2 === void 0 ? void 0 : _a2.tweetsTimeline.timeline, e.errors).instructions;
                    },
                    key: "ListLatestTweetsTimeline",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getUserTweets = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ userId: param.userId }, param.count == void 0 ? {} : { count: param.count }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getUserTweetsRaw,
                    convertFn: function(e) {
                      var _a2;
                      return (0, utils_1.errorCheck)((_a2 = e.data.user) === null || _a2 === void 0 ? void 0 : _a2.result.timelineV2.timeline, e.errors).instructions;
                    },
                    key: "UserTweets",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getUserTweetsAndReplies = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ userId: param.userId }, param.count == void 0 ? {} : { count: param.count }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getUserTweetsAndRepliesRaw,
                    convertFn: function(e) {
                      var _a2;
                      return (0, utils_1.errorCheck)((_a2 = e.data.user) === null || _a2 === void 0 ? void 0 : _a2.result.timelineV2.timeline, e.errors).instructions;
                    },
                    key: "UserTweetsAndReplies",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getUserMedia = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ userId: param.userId }, param.count == void 0 ? {} : { count: param.count }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getUserMediaRaw,
                    convertFn: function(e) {
                      var _a2;
                      return (0, utils_1.errorCheck)((_a2 = e.data.user) === null || _a2 === void 0 ? void 0 : _a2.result.timelineV2.timeline, e.errors).instructions;
                    },
                    key: "UserMedia",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getLikes = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ userId: param.userId }, param.count == void 0 ? {} : { count: param.count }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getLikesRaw,
                    convertFn: function(e) {
                      var _a2;
                      return (0, utils_1.errorCheck)((_a2 = e.data.user) === null || _a2 === void 0 ? void 0 : _a2.result.timelineV2.timeline, e.errors).instructions;
                    },
                    key: "Likes",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        TweetApiUtils2.prototype.getBookmarks = function() {
          return __awaiter(this, arguments, void 0, function(param) {
            var args, response;
            if (param === void 0) {
              param = {};
            }
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({}, param.count == void 0 ? {} : { count: param.count }), param.cursor == void 0 ? {} : { cursor: param.cursor }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getBookmarksRaw,
                    convertFn: function(e) {
                      var _a2;
                      return (0, utils_1.errorCheck)((_a2 = e.data) === null || _a2 === void 0 ? void 0 : _a2.bookmarkTimelineV2.timeline, e.errors).instructions;
                    },
                    key: "Bookmarks",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        return TweetApiUtils2;
      }()
    );
    exports2.TweetApiUtils = TweetApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/userApi.js
var require_userApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/userApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserApiUtils = void 0;
    var utils_1 = require_utils();
    var UserApiUtils = (
      /** @class */
      function() {
        function UserApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        UserApiUtils2.prototype.request = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var apiFn, args, response, result, _a, _b, user;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  apiFn = param.apiFn.bind(this.api);
                  args = (0, utils_1.getKwargs)(this.flag[param.key], param.param);
                  return [4, apiFn(args, this.initOverrides)];
                case 1:
                  response = _c.sent();
                  _b = (_a = param).convertFn;
                  return [4, response.value()];
                case 2:
                  result = _b.apply(_a, [_c.sent()]);
                  user = result.result && (0, utils_1.userOrNullConverter)(result.result);
                  return [2, {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers),
                    data: {
                      raw: result,
                      user
                    }
                  }];
              }
            });
          });
        };
        UserApiUtils2.prototype.getUserByScreenName = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              args = __assign({ screen_name: param.screenName }, param.extraParam);
              response = this.request({
                key: "UserByScreenName",
                apiFn: this.api.getUserByScreenNameRaw,
                convertFn: function(e) {
                  return (0, utils_1.errorCheck)(e.data.user, e.errors);
                },
                param: args
              });
              return [2, response];
            });
          });
        };
        UserApiUtils2.prototype.getUserByRestId = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              args = __assign({ userId: param.userId }, param.extraParam);
              response = this.request({
                key: "UserByRestId",
                apiFn: this.api.getUserByRestIdRaw,
                convertFn: function(e) {
                  return (0, utils_1.errorCheck)(e.data.user, e.errors);
                },
                param: args
              });
              return [2, response];
            });
          });
        };
        return UserApiUtils2;
      }()
    );
    exports2.UserApiUtils = UserApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/userListApi.js
var require_userListApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/userListApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UserListApiUtils = void 0;
    var utils_1 = require_utils();
    var UserListApiUtils = (
      /** @class */
      function() {
        function UserListApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        UserListApiUtils2.prototype.request = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var apiFn, args, response, instruction, _a, _b, entry, userList, data;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  apiFn = param.apiFn.bind(this.api);
                  args = (0, utils_1.getKwargs)(this.flag[param.key], param.param);
                  return [4, apiFn(args, this.initOverrides)];
                case 1:
                  response = _c.sent();
                  _b = (_a = param).convertFn;
                  return [4, response.value()];
                case 2:
                  instruction = _b.apply(_a, [_c.sent()]);
                  entry = (0, utils_1.instructionToEntry)(instruction);
                  userList = (0, utils_1.userEntriesConverter)(entry);
                  data = (0, utils_1.userResultConverter)(userList);
                  return [2, {
                    raw: {
                      response: response.raw
                    },
                    header: (0, utils_1.buildHeader)(response.raw.headers),
                    data: {
                      raw: {
                        instruction,
                        entry
                      },
                      data,
                      cursor: (0, utils_1.entriesCursor)(entry)
                    }
                  }];
              }
            });
          });
        };
        UserListApiUtils2.prototype.getFollowers = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ userId: param.userId }, param.cursor == void 0 ? {} : { cursor: param.cursor }), param.count == void 0 ? {} : { count: param.count }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getFollowersRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)(e.data.user, e.errors).result.timeline.timeline.instructions;
                    },
                    key: "Followers",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        UserListApiUtils2.prototype.getFollowing = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ userId: param.userId }, param.cursor == void 0 ? {} : { cursor: param.cursor }), param.count == void 0 ? {} : { count: param.count }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getFollowingRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)(e.data.user, e.errors).result.timeline.timeline.instructions;
                    },
                    key: "Following",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        UserListApiUtils2.prototype.getFollowersYouKnow = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ userId: param.userId }, param.cursor == void 0 ? {} : { cursor: param.cursor }), param.count == void 0 ? {} : { count: param.count }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getFollowersYouKnowRaw,
                    convertFn: function(e) {
                      return (0, utils_1.errorCheck)(e.data.user, e.errors).result.timeline.timeline.instructions;
                    },
                    key: "FollowersYouKnow",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        UserListApiUtils2.prototype.getFavoriters = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ tweetId: param.tweetId }, param.cursor == void 0 ? {} : { cursor: param.cursor }), param.count == void 0 ? {} : { count: param.count }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getFavoritersRaw,
                    convertFn: function(e) {
                      var _a2;
                      return (0, utils_1.errorCheck)((_a2 = e.data.favoritersTimeline) === null || _a2 === void 0 ? void 0 : _a2.timeline, e.errors).instructions;
                    },
                    key: "Favoriters",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        UserListApiUtils2.prototype.getRetweeters = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  args = __assign(__assign(__assign({ tweetId: param.tweetId }, param.cursor == void 0 ? {} : { cursor: param.cursor }), param.count == void 0 ? {} : { count: param.count }), param.extraParam);
                  return [4, this.request({
                    apiFn: this.api.getRetweetersRaw,
                    convertFn: function(e) {
                      var _a2;
                      return (0, utils_1.errorCheck)((_a2 = e.data.retweetersTimeline) === null || _a2 === void 0 ? void 0 : _a2.timeline, e.errors).instructions;
                    },
                    key: "Retweeters",
                    param: args
                  })];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        };
        return UserListApiUtils2;
      }()
    );
    exports2.UserListApiUtils = UserListApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/usersApi.js
var require_usersApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/usersApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.UsersApiUtils = void 0;
    var utils_1 = require_utils();
    var UsersApiUtils = (
      /** @class */
      function() {
        function UsersApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        UsersApiUtils2.prototype.request = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var apiFn, args, response, result, _a, _b, user;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  apiFn = param.apiFn.bind(this.api);
                  args = (0, utils_1.getKwargs)(this.flag[param.key], param.param);
                  return [4, apiFn(args, this.initOverrides)];
                case 1:
                  response = _c.sent();
                  _b = (_a = param).convertFn;
                  return [4, response.value()];
                case 2:
                  result = _b.apply(_a, [_c.sent()]);
                  user = (0, utils_1.userResultConverter)(result);
                  return [2, {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers),
                    data: user
                  }];
              }
            });
          });
        };
        UsersApiUtils2.prototype.getUsersByRestIds = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var args, response;
            return __generator(this, function(_a) {
              args = __assign({ userIds: param.userIds }, param.extraParam);
              response = this.request({
                key: "UsersByRestIds",
                apiFn: this.api.getUsersByRestIdsRaw,
                convertFn: function(e) {
                  return (0, utils_1.errorCheck)(e.data.users, e.errors);
                },
                param: args
              });
              return [2, response];
            });
          });
        };
        return UsersApiUtils2;
      }()
    );
    exports2.UsersApiUtils = UsersApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/v11GetApi.js
var require_v11GetApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/v11GetApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.V11GetApiUtils = void 0;
    var V11GetApiUtils = (
      /** @class */
      /* @__PURE__ */ function() {
        function V11GetApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        return V11GetApiUtils2;
      }()
    );
    exports2.V11GetApiUtils = V11GetApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/v11PostApi.js
var require_v11PostApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/v11PostApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.V11PostApiUtils = void 0;
    var utils_1 = require_utils();
    var V11PostApiUtils = (
      /** @class */
      function() {
        function V11PostApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        V11PostApiUtils2.prototype.postCreateFriendships = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.api.postCreateFriendshipsRaw(__assign({ includeBlockedBy: 1, includeBlocking: 1, includeCanDm: 1, includeCanMediaTag: 1, includeExtHasNftAvatar: 1, includeExtIsBlueVerified: 1, includeExtProfileImageShape: 1, includeExtVerifiedType: 1, includeFollowedBy: 1, includeMuteEdge: 1, includeProfileInterstitialType: 1, includeWantRetweets: 1, skipStatus: 1, userId: param.userId }, param.extraParam))];
                case 1:
                  response = _a.sent();
                  return [2, {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers),
                    data: void 0
                  }];
              }
            });
          });
        };
        V11PostApiUtils2.prototype.postDestroyFriendships = function(param) {
          return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, this.api.postDestroyFriendshipsRaw(__assign({ includeBlockedBy: 0, includeBlocking: 0, includeCanDm: 0, includeCanMediaTag: 0, includeExtHasNftAvatar: 0, includeExtIsBlueVerified: 0, includeExtProfileImageShape: 0, includeExtVerifiedType: 0, includeFollowedBy: 0, includeMuteEdge: 0, includeProfileInterstitialType: 0, includeWantRetweets: 0, skipStatus: 0, userId: param.userId }, param.extraParam))];
                case 1:
                  response = _a.sent();
                  return [2, {
                    raw: { response: response.raw },
                    header: (0, utils_1.buildHeader)(response.raw.headers),
                    data: void 0
                  }];
              }
            });
          });
        };
        return V11PostApiUtils2;
      }()
    );
    exports2.V11PostApiUtils = V11PostApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/v20GetApi.js
var require_v20GetApi = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/v20GetApi.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.V20GetApiUtils = void 0;
    var V20GetApiUtils = (
      /** @class */
      /* @__PURE__ */ function() {
        function V20GetApiUtils2(api, flag, initOverrides) {
          this.api = api;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        return V20GetApiUtils2;
      }()
    );
    exports2.V20GetApiUtils = V20GetApiUtils;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/index.js
var require_apis2 = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/apis/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.V20GetApiUtils = exports2.V11PostApiUtils = exports2.V11GetApiUtils = exports2.UsersApiUtils = exports2.UserListApiUtils = exports2.UserApiUtils = exports2.TweetApiUtils = exports2.PostApiUtils = exports2.InitialStateApiUtils = exports2.DefaultApiUtils = void 0;
    var defaultApi_1 = require_defaultApi();
    Object.defineProperty(exports2, "DefaultApiUtils", { enumerable: true, get: function() {
      return defaultApi_1.DefaultApiUtils;
    } });
    var initialStateApi_1 = require_initialStateApi();
    Object.defineProperty(exports2, "InitialStateApiUtils", { enumerable: true, get: function() {
      return initialStateApi_1.InitialStateApiUtils;
    } });
    var postApi_1 = require_postApi();
    Object.defineProperty(exports2, "PostApiUtils", { enumerable: true, get: function() {
      return postApi_1.PostApiUtils;
    } });
    var tweetApi_1 = require_tweetApi();
    Object.defineProperty(exports2, "TweetApiUtils", { enumerable: true, get: function() {
      return tweetApi_1.TweetApiUtils;
    } });
    var userApi_1 = require_userApi();
    Object.defineProperty(exports2, "UserApiUtils", { enumerable: true, get: function() {
      return userApi_1.UserApiUtils;
    } });
    var userListApi_1 = require_userListApi();
    Object.defineProperty(exports2, "UserListApiUtils", { enumerable: true, get: function() {
      return userListApi_1.UserListApiUtils;
    } });
    var usersApi_1 = require_usersApi();
    Object.defineProperty(exports2, "UsersApiUtils", { enumerable: true, get: function() {
      return usersApi_1.UsersApiUtils;
    } });
    var v11GetApi_1 = require_v11GetApi();
    Object.defineProperty(exports2, "V11GetApiUtils", { enumerable: true, get: function() {
      return v11GetApi_1.V11GetApiUtils;
    } });
    var v11PostApi_1 = require_v11PostApi();
    Object.defineProperty(exports2, "V11PostApiUtils", { enumerable: true, get: function() {
      return v11PostApi_1.V11PostApiUtils;
    } });
    var v20GetApi_1 = require_v20GetApi();
    Object.defineProperty(exports2, "V20GetApiUtils", { enumerable: true, get: function() {
      return v20GetApi_1.V20GetApiUtils;
    } });
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/api.js
var require_api2 = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/api.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __assign = exports2 && exports2.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i2 = 1, n = arguments.length; i2 < n; i2++) {
          s = arguments[i2];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports2 && exports2.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1) throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    var __read = exports2 && exports2.__read || function(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i2 = m.call(o), r, ar = [], e;
      try {
        while ((n === void 0 || n-- > 0) && !(r = i2.next()).done) ar.push(r.value);
      } catch (error) {
        e = { error };
      } finally {
        try {
          if (r && !r.done && (m = i2["return"])) m.call(i2);
        } finally {
          if (e) throw e.error;
        }
      }
      return ar;
    };
    var __spreadArray = exports2 && exports2.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2) for (var i2 = 0, l = from.length, ar; i2 < l; i2++) {
        if (ar || !(i2 in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i2);
          ar[i2] = from[i2];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.TwitterOpenApiClient = exports2.TwitterOpenApi = void 0;
    var apis_1 = require_apis2();
    var i = require_dist();
    var usersApi_1 = require_usersApi();
    var TwitterOpenApi2 = (
      /** @class */
      function() {
        function TwitterOpenApi3() {
          this.initOverrides = {};
          this.additionalBrowserHeaders = {};
          this.additionalApiHeaders = {};
        }
        TwitterOpenApi3.prototype.setInitOverrides = function(initOverrides) {
          this.initOverrides = initOverrides;
        };
        TwitterOpenApi3.prototype.setAdditionalBrowserHeaders = function(headers) {
          this.additionalBrowserHeaders = headers;
        };
        TwitterOpenApi3.prototype.setAdditionalApiHeaders = function(headers) {
          this.additionalApiHeaders = headers;
        };
        TwitterOpenApi3.prototype.getHeaders = function() {
          return __awaiter(this, void 0, void 0, function() {
            var raw, json, ignore, getHader;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  return [4, _a.fetchApi(_a.header, __assign({ method: "GET" }, this.initOverrides))];
                case 1:
                  raw = _b.sent();
                  return [4, raw.json()];
                case 2:
                  json = _b.sent();
                  ignore = ["host", "connection"];
                  getHader = function(name) {
                    return Object.entries(json[name]).reduce(function(a, _b2) {
                      var _c;
                      var _d = __read(_b2, 2), key = _d[0], value = _d[1];
                      if (ignore.includes(key))
                        return a;
                      return __assign(__assign({}, a), (_c = {}, _c[key] = value, _c));
                    }, {});
                  };
                  return [2, {
                    api: __assign(__assign(__assign({}, getHader("chrome-fetch")), {
                      "accept-encoding": "identity",
                      pragma: "no-cache",
                      referer: _a.twitter,
                      priority: "u=1, i",
                      "x-twitter-client-language": "en",
                      "x-twitter-active-user": "yes",
                      // 'x-twitter-auth-type': 'xxxx'
                      // 'x-csrf-token': 'xxxx',
                      // 'x-guest-token': 'xxxx',
                      authorization: "Bearer ".concat(_a.bearer)
                    }), this.additionalApiHeaders),
                    browser: __assign(__assign({}, getHader("chrome")), this.additionalBrowserHeaders)
                  }];
              }
            });
          });
        };
        TwitterOpenApi3.prototype.cookieNormalize = function(cookie) {
          return cookie.reduce(function(a, b) {
            var _b;
            var _c = __read(b.split("; ")[0].split("="), 2), key = _c[0], value = _c[1];
            return __assign(__assign({}, a), (_b = {}, _b[key] = value, _b));
          }, {});
        };
        TwitterOpenApi3.prototype.cookieEncode = function(cookie) {
          return Object.entries(cookie).map(function(_b) {
            var _c = __read(_b, 2), key = _c[0], value = _c[1];
            return "".concat(key, "=").concat(value);
          }).join("; ");
        };
        TwitterOpenApi3.prototype.setCookies = function(context, cookies) {
          if (context.init.headers) {
            var headers = context.init.headers;
            headers["cookie"] = this.cookieEncode(cookies);
          }
          return context;
        };
        TwitterOpenApi3.prototype.getGuestClient = function() {
          return __awaiter(this, void 0, void 0, function() {
            var cookies, response, html, re, find, activate_headers, _b, guest_token;
            var _c;
            return __generator(this, function(_d) {
              switch (_d.label) {
                case 0:
                  cookies = {};
                  return [4, _a.fetchApi(_a.twitter, __assign({ method: "GET", redirect: "manual", headers: { Cookie: this.cookieEncode(cookies) } }, this.initOverrides))];
                case 1:
                  response = _d.sent();
                  if (response.headers.getSetCookie) {
                    cookies = __assign(__assign({}, cookies), this.cookieNormalize(response.headers.getSetCookie()));
                  } else {
                    cookies = __assign(__assign({}, cookies), this.cookieNormalize(((_c = response.headers.get("set-cookie")) === null || _c === void 0 ? void 0 : _c.split(", ")) || []));
                  }
                  return [4, response.text()];
                case 2:
                  html = _d.sent();
                  re = new RegExp('document.cookie="(.*?)";', "g");
                  find = __spreadArray([], __read(html.matchAll(re)), false).map(function(e) {
                    return e[1];
                  });
                  cookies = __assign(__assign({}, cookies), this.cookieNormalize(find));
                  cookies = Object.entries(cookies).filter(function(_b2) {
                    var _c2 = __read(_b2, 2), key = _c2[0], value = _c2[1];
                    return key != "ct0";
                  }).reduce(function(a, _b2) {
                    var _c2;
                    var _d2 = __read(_b2, 2), key = _d2[0], value = _d2[1];
                    return __assign(__assign({}, a), (_c2 = {}, _c2[key] = value, _c2));
                  }, {});
                  if (!!cookies["gt"]) return [3, 5];
                  _b = [{}];
                  return [4, this.getHeaders()];
                case 3:
                  activate_headers = __assign.apply(void 0, [__assign.apply(void 0, _b.concat([_d.sent().api])), { cookie: this.cookieEncode(cookies) }]);
                  return [4, _a.fetchApi("https://api.x.com/1.1/guest/activate.json", __assign({ method: "POST", headers: activate_headers }, this.initOverrides)).then(function(response2) {
                    return response2.json();
                  })];
                case 4:
                  guest_token = _d.sent().guest_token;
                  cookies["gt"] = guest_token;
                  _d.label = 5;
                case 5:
                  return [2, this.getClientFromCookies(cookies)];
              }
            });
          });
        };
        TwitterOpenApi3.prototype.getClientFromCookies = function(cookies) {
          return __awaiter(this, void 0, void 0, function() {
            var api_key, config2;
            var _this = this;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  return [4, this.getHeaders()];
                case 1:
                  api_key = _b.sent().api;
                  if (cookies["ct0"]) {
                    api_key["x-twitter-auth-type"] = "OAuth2Session";
                    api_key["x-csrf-token"] = cookies["ct0"];
                  }
                  if (cookies["gt"]) {
                    api_key["x-guest-token"] = cookies["gt"];
                  }
                  config2 = {
                    fetchApi: _a.fetchApi,
                    middleware: [{ pre: function(context) {
                      return __awaiter(_this, void 0, void 0, function() {
                        return __generator(this, function(_b2) {
                          return [2, this.setCookies(context, cookies)];
                        });
                      });
                    } }],
                    apiKey: function(key) {
                      return api_key[key.toLowerCase()];
                    },
                    accessToken: _a.bearer
                  };
                  return [2, this.getClient(new i.Configuration(config2))];
              }
            });
          });
        };
        TwitterOpenApi3.prototype.getClient = function(api) {
          return __awaiter(this, void 0, void 0, function() {
            var flag;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  return [4, _a.fetchApi(_a.url, __assign({ method: "GET" }, this.initOverrides)).then(function(res) {
                    return res.json();
                  })];
                case 1:
                  flag = _b.sent();
                  return [2, new TwitterOpenApiClient(api, flag, this.initOverrides)];
              }
            });
          });
        };
        var _a;
        _a = TwitterOpenApi3;
        TwitterOpenApi3.hash = "4b27150977e1bdd807de8969dc0ddd7918ac9923";
        TwitterOpenApi3.url = "https://raw.githubusercontent.com/fa0311/twitter-openapi/".concat(_a.hash, "/src/config/placeholder.json");
        TwitterOpenApi3.header = "https://raw.githubusercontent.com/fa0311/latest-user-agent/refs/heads/main/header.json";
        TwitterOpenApi3.twitter = "https://x.com/home";
        TwitterOpenApi3.bearer = "AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA";
        TwitterOpenApi3.fetchApi = fetch.bind(globalThis);
        return TwitterOpenApi3;
      }()
    );
    exports2.TwitterOpenApi = TwitterOpenApi2;
    var TwitterOpenApiClient = (
      /** @class */
      function() {
        function TwitterOpenApiClient2(config2, flag, initOverrides) {
          this.config = config2;
          this.flag = flag;
          this.initOverrides = initOverrides;
        }
        TwitterOpenApiClient2.prototype.getDefaultApi = function() {
          return new apis_1.DefaultApiUtils(new i.DefaultApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getTweetApi = function() {
          return new apis_1.TweetApiUtils(new i.TweetApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getUserApi = function() {
          return new apis_1.UserApiUtils(new i.UserApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getUsersApi = function() {
          return new usersApi_1.UsersApiUtils(new i.UsersApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getUserListApi = function() {
          return new apis_1.UserListApiUtils(new i.UserListApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getPostApi = function() {
          return new apis_1.PostApiUtils(new i.PostApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getV11GetApi = function() {
          return new apis_1.V11GetApiUtils(new i.V11GetApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getV11PostApi = function() {
          return new apis_1.V11PostApiUtils(new i.V11PostApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getV20GetApi = function() {
          return new apis_1.V20GetApiUtils(new i.V20GetApi(this.config), this.flag, this.initOverrides);
        };
        TwitterOpenApiClient2.prototype.getInitialStateApi = function() {
          return new apis_1.InitialStateApiUtils();
        };
        return TwitterOpenApiClient2;
      }()
    );
    exports2.TwitterOpenApiClient = TwitterOpenApiClient;
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/flag.js
var require_flag = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/flag.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/header.js
var require_header = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/header.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/response.js
var require_response = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/response.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/timeline.js
var require_timeline = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/timeline.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/utils.js
var require_utils2 = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/utils.js"(exports2) {
    "use strict";
    init_cjs_shims();
    Object.defineProperty(exports2, "__esModule", { value: true });
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/index.js
var require_models2 = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/models/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p)) __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_flag(), exports2);
    __exportStar(require_header(), exports2);
    __exportStar(require_response(), exports2);
    __exportStar(require_timeline(), exports2);
    __exportStar(require_utils2(), exports2);
  }
});

// node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/index.js
var require_src = __commonJS({
  "node_modules/.pnpm/twitter-openapi-typescript@0.0.45/node_modules/twitter-openapi-typescript/dist/src/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p)) __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_api2(), exports2);
    __exportStar(require_apis2(), exports2);
    __exportStar(require_models2(), exports2);
    __exportStar(require_utils(), exports2);
  }
});

// node_modules/.pnpm/delayed-stream@1.0.0/node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS({
  "node_modules/.pnpm/delayed-stream@1.0.0/node_modules/delayed-stream/lib/delayed_stream.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var Stream = require("stream").Stream;
    var util3 = require("util");
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null;
      this.dataSize = 0;
      this.maxDataSize = 1024 * 1024;
      this.pauseStream = true;
      this._maxDataSizeExceeded = false;
      this._released = false;
      this._bufferedEvents = [];
    }
    util3.inherits(DelayedStream, Stream);
    DelayedStream.create = function(source, options) {
      var delayedStream = new this();
      options = options || {};
      for (var option in options) {
        delayedStream[option] = options[option];
      }
      delayedStream.source = source;
      var realEmit = source.emit;
      source.emit = function() {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
      };
      source.on("error", function() {
      });
      if (delayedStream.pauseStream) {
        source.pause();
      }
      return delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, "readable", {
      configurable: true,
      enumerable: true,
      get: function() {
        return this.source.readable;
      }
    });
    DelayedStream.prototype.setEncoding = function() {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function() {
      if (!this._released) {
        this.release();
      }
      this.source.resume();
    };
    DelayedStream.prototype.pause = function() {
      this.source.pause();
    };
    DelayedStream.prototype.release = function() {
      this._released = true;
      this._bufferedEvents.forEach(function(args) {
        this.emit.apply(this, args);
      }.bind(this));
      this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function() {
      var r = Stream.prototype.pipe.apply(this, arguments);
      this.resume();
      return r;
    };
    DelayedStream.prototype._handleEmit = function(args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      if (args[0] === "data") {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
      }
      this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
      if (this._maxDataSizeExceeded) {
        return;
      }
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      this._maxDataSizeExceeded = true;
      var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
      this.emit("error", new Error(message));
    };
  }
});

// node_modules/.pnpm/combined-stream@1.0.8/node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS({
  "node_modules/.pnpm/combined-stream@1.0.8/node_modules/combined-stream/lib/combined_stream.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var util3 = require("util");
    var Stream = require("stream").Stream;
    var DelayedStream = require_delayed_stream();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = false;
      this.readable = true;
      this.dataSize = 0;
      this.maxDataSize = 2 * 1024 * 1024;
      this.pauseStreams = true;
      this._released = false;
      this._streams = [];
      this._currentStream = null;
      this._insideLoop = false;
      this._pendingNext = false;
    }
    util3.inherits(CombinedStream, Stream);
    CombinedStream.create = function(options) {
      var combinedStream = new this();
      options = options || {};
      for (var option in options) {
        combinedStream[option] = options[option];
      }
      return combinedStream;
    };
    CombinedStream.isStreamLike = function(stream4) {
      return typeof stream4 !== "function" && typeof stream4 !== "string" && typeof stream4 !== "boolean" && typeof stream4 !== "number" && !Buffer.isBuffer(stream4);
    };
    CombinedStream.prototype.append = function(stream4) {
      var isStreamLike = CombinedStream.isStreamLike(stream4);
      if (isStreamLike) {
        if (!(stream4 instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream4, {
            maxDataSize: Infinity,
            pauseStream: this.pauseStreams
          });
          stream4.on("data", this._checkDataSize.bind(this));
          stream4 = newStream;
        }
        this._handleErrors(stream4);
        if (this.pauseStreams) {
          stream4.pause();
        }
      }
      this._streams.push(stream4);
      return this;
    };
    CombinedStream.prototype.pipe = function(dest, options) {
      Stream.prototype.pipe.call(this, dest, options);
      this.resume();
      return dest;
    };
    CombinedStream.prototype._getNext = function() {
      this._currentStream = null;
      if (this._insideLoop) {
        this._pendingNext = true;
        return;
      }
      this._insideLoop = true;
      try {
        do {
          this._pendingNext = false;
          this._realGetNext();
        } while (this._pendingNext);
      } finally {
        this._insideLoop = false;
      }
    };
    CombinedStream.prototype._realGetNext = function() {
      var stream4 = this._streams.shift();
      if (typeof stream4 == "undefined") {
        this.end();
        return;
      }
      if (typeof stream4 !== "function") {
        this._pipeNext(stream4);
        return;
      }
      var getStream = stream4;
      getStream(function(stream5) {
        var isStreamLike = CombinedStream.isStreamLike(stream5);
        if (isStreamLike) {
          stream5.on("data", this._checkDataSize.bind(this));
          this._handleErrors(stream5);
        }
        this._pipeNext(stream5);
      }.bind(this));
    };
    CombinedStream.prototype._pipeNext = function(stream4) {
      this._currentStream = stream4;
      var isStreamLike = CombinedStream.isStreamLike(stream4);
      if (isStreamLike) {
        stream4.on("end", this._getNext.bind(this));
        stream4.pipe(this, { end: false });
        return;
      }
      var value = stream4;
      this.write(value);
      this._getNext();
    };
    CombinedStream.prototype._handleErrors = function(stream4) {
      var self2 = this;
      stream4.on("error", function(err) {
        self2._emitError(err);
      });
    };
    CombinedStream.prototype.write = function(data) {
      this.emit("data", data);
    };
    CombinedStream.prototype.pause = function() {
      if (!this.pauseStreams) {
        return;
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == "function") this._currentStream.pause();
      this.emit("pause");
    };
    CombinedStream.prototype.resume = function() {
      if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == "function") this._currentStream.resume();
      this.emit("resume");
    };
    CombinedStream.prototype.end = function() {
      this._reset();
      this.emit("end");
    };
    CombinedStream.prototype.destroy = function() {
      this._reset();
      this.emit("close");
    };
    CombinedStream.prototype._reset = function() {
      this.writable = false;
      this._streams = [];
      this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function() {
      this._updateDataSize();
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
      this._emitError(new Error(message));
    };
    CombinedStream.prototype._updateDataSize = function() {
      this.dataSize = 0;
      var self2 = this;
      this._streams.forEach(function(stream4) {
        if (!stream4.dataSize) {
          return;
        }
        self2.dataSize += stream4.dataSize;
      });
      if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
      }
    };
    CombinedStream.prototype._emitError = function(err) {
      this._reset();
      this.emit("error", err);
    };
  }
});

// node_modules/.pnpm/mime-db@1.52.0/node_modules/mime-db/db.json
var require_db = __commonJS({
  "node_modules/.pnpm/mime-db@1.52.0/node_modules/mime-db/db.json"(exports2, module2) {
    module2.exports = {
      "application/1d-interleaved-parityfec": {
        source: "iana"
      },
      "application/3gpdash-qoe-report+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/3gpp-ims+xml": {
        source: "iana",
        compressible: true
      },
      "application/3gpphal+json": {
        source: "iana",
        compressible: true
      },
      "application/3gpphalforms+json": {
        source: "iana",
        compressible: true
      },
      "application/a2l": {
        source: "iana"
      },
      "application/ace+cbor": {
        source: "iana"
      },
      "application/activemessage": {
        source: "iana"
      },
      "application/activity+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-costmap+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-costmapfilter+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-directory+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointcost+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointcostparams+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointprop+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointpropparams+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-error+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-networkmap+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-networkmapfilter+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-updatestreamcontrol+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-updatestreamparams+json": {
        source: "iana",
        compressible: true
      },
      "application/aml": {
        source: "iana"
      },
      "application/andrew-inset": {
        source: "iana",
        extensions: ["ez"]
      },
      "application/applefile": {
        source: "iana"
      },
      "application/applixware": {
        source: "apache",
        extensions: ["aw"]
      },
      "application/at+jwt": {
        source: "iana"
      },
      "application/atf": {
        source: "iana"
      },
      "application/atfx": {
        source: "iana"
      },
      "application/atom+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atom"]
      },
      "application/atomcat+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomcat"]
      },
      "application/atomdeleted+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomdeleted"]
      },
      "application/atomicmail": {
        source: "iana"
      },
      "application/atomsvc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomsvc"]
      },
      "application/atsc-dwd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dwd"]
      },
      "application/atsc-dynamic-event-message": {
        source: "iana"
      },
      "application/atsc-held+xml": {
        source: "iana",
        compressible: true,
        extensions: ["held"]
      },
      "application/atsc-rdt+json": {
        source: "iana",
        compressible: true
      },
      "application/atsc-rsat+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rsat"]
      },
      "application/atxml": {
        source: "iana"
      },
      "application/auth-policy+xml": {
        source: "iana",
        compressible: true
      },
      "application/bacnet-xdd+zip": {
        source: "iana",
        compressible: false
      },
      "application/batch-smtp": {
        source: "iana"
      },
      "application/bdoc": {
        compressible: false,
        extensions: ["bdoc"]
      },
      "application/beep+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/calendar+json": {
        source: "iana",
        compressible: true
      },
      "application/calendar+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xcs"]
      },
      "application/call-completion": {
        source: "iana"
      },
      "application/cals-1840": {
        source: "iana"
      },
      "application/captive+json": {
        source: "iana",
        compressible: true
      },
      "application/cbor": {
        source: "iana"
      },
      "application/cbor-seq": {
        source: "iana"
      },
      "application/cccex": {
        source: "iana"
      },
      "application/ccmp+xml": {
        source: "iana",
        compressible: true
      },
      "application/ccxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ccxml"]
      },
      "application/cdfx+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cdfx"]
      },
      "application/cdmi-capability": {
        source: "iana",
        extensions: ["cdmia"]
      },
      "application/cdmi-container": {
        source: "iana",
        extensions: ["cdmic"]
      },
      "application/cdmi-domain": {
        source: "iana",
        extensions: ["cdmid"]
      },
      "application/cdmi-object": {
        source: "iana",
        extensions: ["cdmio"]
      },
      "application/cdmi-queue": {
        source: "iana",
        extensions: ["cdmiq"]
      },
      "application/cdni": {
        source: "iana"
      },
      "application/cea": {
        source: "iana"
      },
      "application/cea-2018+xml": {
        source: "iana",
        compressible: true
      },
      "application/cellml+xml": {
        source: "iana",
        compressible: true
      },
      "application/cfw": {
        source: "iana"
      },
      "application/city+json": {
        source: "iana",
        compressible: true
      },
      "application/clr": {
        source: "iana"
      },
      "application/clue+xml": {
        source: "iana",
        compressible: true
      },
      "application/clue_info+xml": {
        source: "iana",
        compressible: true
      },
      "application/cms": {
        source: "iana"
      },
      "application/cnrp+xml": {
        source: "iana",
        compressible: true
      },
      "application/coap-group+json": {
        source: "iana",
        compressible: true
      },
      "application/coap-payload": {
        source: "iana"
      },
      "application/commonground": {
        source: "iana"
      },
      "application/conference-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/cose": {
        source: "iana"
      },
      "application/cose-key": {
        source: "iana"
      },
      "application/cose-key-set": {
        source: "iana"
      },
      "application/cpl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cpl"]
      },
      "application/csrattrs": {
        source: "iana"
      },
      "application/csta+xml": {
        source: "iana",
        compressible: true
      },
      "application/cstadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/csvm+json": {
        source: "iana",
        compressible: true
      },
      "application/cu-seeme": {
        source: "apache",
        extensions: ["cu"]
      },
      "application/cwt": {
        source: "iana"
      },
      "application/cybercash": {
        source: "iana"
      },
      "application/dart": {
        compressible: true
      },
      "application/dash+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpd"]
      },
      "application/dash-patch+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpp"]
      },
      "application/dashdelta": {
        source: "iana"
      },
      "application/davmount+xml": {
        source: "iana",
        compressible: true,
        extensions: ["davmount"]
      },
      "application/dca-rft": {
        source: "iana"
      },
      "application/dcd": {
        source: "iana"
      },
      "application/dec-dx": {
        source: "iana"
      },
      "application/dialog-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/dicom": {
        source: "iana"
      },
      "application/dicom+json": {
        source: "iana",
        compressible: true
      },
      "application/dicom+xml": {
        source: "iana",
        compressible: true
      },
      "application/dii": {
        source: "iana"
      },
      "application/dit": {
        source: "iana"
      },
      "application/dns": {
        source: "iana"
      },
      "application/dns+json": {
        source: "iana",
        compressible: true
      },
      "application/dns-message": {
        source: "iana"
      },
      "application/docbook+xml": {
        source: "apache",
        compressible: true,
        extensions: ["dbk"]
      },
      "application/dots+cbor": {
        source: "iana"
      },
      "application/dskpp+xml": {
        source: "iana",
        compressible: true
      },
      "application/dssc+der": {
        source: "iana",
        extensions: ["dssc"]
      },
      "application/dssc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdssc"]
      },
      "application/dvcs": {
        source: "iana"
      },
      "application/ecmascript": {
        source: "iana",
        compressible: true,
        extensions: ["es", "ecma"]
      },
      "application/edi-consent": {
        source: "iana"
      },
      "application/edi-x12": {
        source: "iana",
        compressible: false
      },
      "application/edifact": {
        source: "iana",
        compressible: false
      },
      "application/efi": {
        source: "iana"
      },
      "application/elm+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/elm+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.cap+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/emergencycalldata.comment+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.control+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.deviceinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.ecall.msd": {
        source: "iana"
      },
      "application/emergencycalldata.providerinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.serviceinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.subscriberinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.veds+xml": {
        source: "iana",
        compressible: true
      },
      "application/emma+xml": {
        source: "iana",
        compressible: true,
        extensions: ["emma"]
      },
      "application/emotionml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["emotionml"]
      },
      "application/encaprtp": {
        source: "iana"
      },
      "application/epp+xml": {
        source: "iana",
        compressible: true
      },
      "application/epub+zip": {
        source: "iana",
        compressible: false,
        extensions: ["epub"]
      },
      "application/eshop": {
        source: "iana"
      },
      "application/exi": {
        source: "iana",
        extensions: ["exi"]
      },
      "application/expect-ct-report+json": {
        source: "iana",
        compressible: true
      },
      "application/express": {
        source: "iana",
        extensions: ["exp"]
      },
      "application/fastinfoset": {
        source: "iana"
      },
      "application/fastsoap": {
        source: "iana"
      },
      "application/fdt+xml": {
        source: "iana",
        compressible: true,
        extensions: ["fdt"]
      },
      "application/fhir+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/fhir+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/fido.trusted-apps+json": {
        compressible: true
      },
      "application/fits": {
        source: "iana"
      },
      "application/flexfec": {
        source: "iana"
      },
      "application/font-sfnt": {
        source: "iana"
      },
      "application/font-tdpfr": {
        source: "iana",
        extensions: ["pfr"]
      },
      "application/font-woff": {
        source: "iana",
        compressible: false
      },
      "application/framework-attributes+xml": {
        source: "iana",
        compressible: true
      },
      "application/geo+json": {
        source: "iana",
        compressible: true,
        extensions: ["geojson"]
      },
      "application/geo+json-seq": {
        source: "iana"
      },
      "application/geopackage+sqlite3": {
        source: "iana"
      },
      "application/geoxacml+xml": {
        source: "iana",
        compressible: true
      },
      "application/gltf-buffer": {
        source: "iana"
      },
      "application/gml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["gml"]
      },
      "application/gpx+xml": {
        source: "apache",
        compressible: true,
        extensions: ["gpx"]
      },
      "application/gxf": {
        source: "apache",
        extensions: ["gxf"]
      },
      "application/gzip": {
        source: "iana",
        compressible: false,
        extensions: ["gz"]
      },
      "application/h224": {
        source: "iana"
      },
      "application/held+xml": {
        source: "iana",
        compressible: true
      },
      "application/hjson": {
        extensions: ["hjson"]
      },
      "application/http": {
        source: "iana"
      },
      "application/hyperstudio": {
        source: "iana",
        extensions: ["stk"]
      },
      "application/ibe-key-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/ibe-pkg-reply+xml": {
        source: "iana",
        compressible: true
      },
      "application/ibe-pp-data": {
        source: "iana"
      },
      "application/iges": {
        source: "iana"
      },
      "application/im-iscomposing+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/index": {
        source: "iana"
      },
      "application/index.cmd": {
        source: "iana"
      },
      "application/index.obj": {
        source: "iana"
      },
      "application/index.response": {
        source: "iana"
      },
      "application/index.vnd": {
        source: "iana"
      },
      "application/inkml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ink", "inkml"]
      },
      "application/iotp": {
        source: "iana"
      },
      "application/ipfix": {
        source: "iana",
        extensions: ["ipfix"]
      },
      "application/ipp": {
        source: "iana"
      },
      "application/isup": {
        source: "iana"
      },
      "application/its+xml": {
        source: "iana",
        compressible: true,
        extensions: ["its"]
      },
      "application/java-archive": {
        source: "apache",
        compressible: false,
        extensions: ["jar", "war", "ear"]
      },
      "application/java-serialized-object": {
        source: "apache",
        compressible: false,
        extensions: ["ser"]
      },
      "application/java-vm": {
        source: "apache",
        compressible: false,
        extensions: ["class"]
      },
      "application/javascript": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["js", "mjs"]
      },
      "application/jf2feed+json": {
        source: "iana",
        compressible: true
      },
      "application/jose": {
        source: "iana"
      },
      "application/jose+json": {
        source: "iana",
        compressible: true
      },
      "application/jrd+json": {
        source: "iana",
        compressible: true
      },
      "application/jscalendar+json": {
        source: "iana",
        compressible: true
      },
      "application/json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["json", "map"]
      },
      "application/json-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/json-seq": {
        source: "iana"
      },
      "application/json5": {
        extensions: ["json5"]
      },
      "application/jsonml+json": {
        source: "apache",
        compressible: true,
        extensions: ["jsonml"]
      },
      "application/jwk+json": {
        source: "iana",
        compressible: true
      },
      "application/jwk-set+json": {
        source: "iana",
        compressible: true
      },
      "application/jwt": {
        source: "iana"
      },
      "application/kpml-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/kpml-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/ld+json": {
        source: "iana",
        compressible: true,
        extensions: ["jsonld"]
      },
      "application/lgr+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lgr"]
      },
      "application/link-format": {
        source: "iana"
      },
      "application/load-control+xml": {
        source: "iana",
        compressible: true
      },
      "application/lost+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lostxml"]
      },
      "application/lostsync+xml": {
        source: "iana",
        compressible: true
      },
      "application/lpf+zip": {
        source: "iana",
        compressible: false
      },
      "application/lxf": {
        source: "iana"
      },
      "application/mac-binhex40": {
        source: "iana",
        extensions: ["hqx"]
      },
      "application/mac-compactpro": {
        source: "apache",
        extensions: ["cpt"]
      },
      "application/macwriteii": {
        source: "iana"
      },
      "application/mads+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mads"]
      },
      "application/manifest+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["webmanifest"]
      },
      "application/marc": {
        source: "iana",
        extensions: ["mrc"]
      },
      "application/marcxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mrcx"]
      },
      "application/mathematica": {
        source: "iana",
        extensions: ["ma", "nb", "mb"]
      },
      "application/mathml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mathml"]
      },
      "application/mathml-content+xml": {
        source: "iana",
        compressible: true
      },
      "application/mathml-presentation+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-associated-procedure-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-deregister+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-envelope+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-msk+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-msk-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-protection-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-reception-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-register+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-register-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-schedule+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-user-service-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbox": {
        source: "iana",
        extensions: ["mbox"]
      },
      "application/media-policy-dataset+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpf"]
      },
      "application/media_control+xml": {
        source: "iana",
        compressible: true
      },
      "application/mediaservercontrol+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mscml"]
      },
      "application/merge-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/metalink+xml": {
        source: "apache",
        compressible: true,
        extensions: ["metalink"]
      },
      "application/metalink4+xml": {
        source: "iana",
        compressible: true,
        extensions: ["meta4"]
      },
      "application/mets+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mets"]
      },
      "application/mf4": {
        source: "iana"
      },
      "application/mikey": {
        source: "iana"
      },
      "application/mipc": {
        source: "iana"
      },
      "application/missing-blocks+cbor-seq": {
        source: "iana"
      },
      "application/mmt-aei+xml": {
        source: "iana",
        compressible: true,
        extensions: ["maei"]
      },
      "application/mmt-usd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["musd"]
      },
      "application/mods+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mods"]
      },
      "application/moss-keys": {
        source: "iana"
      },
      "application/moss-signature": {
        source: "iana"
      },
      "application/mosskey-data": {
        source: "iana"
      },
      "application/mosskey-request": {
        source: "iana"
      },
      "application/mp21": {
        source: "iana",
        extensions: ["m21", "mp21"]
      },
      "application/mp4": {
        source: "iana",
        extensions: ["mp4s", "m4p"]
      },
      "application/mpeg4-generic": {
        source: "iana"
      },
      "application/mpeg4-iod": {
        source: "iana"
      },
      "application/mpeg4-iod-xmt": {
        source: "iana"
      },
      "application/mrb-consumer+xml": {
        source: "iana",
        compressible: true
      },
      "application/mrb-publish+xml": {
        source: "iana",
        compressible: true
      },
      "application/msc-ivr+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/msc-mixer+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/msword": {
        source: "iana",
        compressible: false,
        extensions: ["doc", "dot"]
      },
      "application/mud+json": {
        source: "iana",
        compressible: true
      },
      "application/multipart-core": {
        source: "iana"
      },
      "application/mxf": {
        source: "iana",
        extensions: ["mxf"]
      },
      "application/n-quads": {
        source: "iana",
        extensions: ["nq"]
      },
      "application/n-triples": {
        source: "iana",
        extensions: ["nt"]
      },
      "application/nasdata": {
        source: "iana"
      },
      "application/news-checkgroups": {
        source: "iana",
        charset: "US-ASCII"
      },
      "application/news-groupinfo": {
        source: "iana",
        charset: "US-ASCII"
      },
      "application/news-transmission": {
        source: "iana"
      },
      "application/nlsml+xml": {
        source: "iana",
        compressible: true
      },
      "application/node": {
        source: "iana",
        extensions: ["cjs"]
      },
      "application/nss": {
        source: "iana"
      },
      "application/oauth-authz-req+jwt": {
        source: "iana"
      },
      "application/oblivious-dns-message": {
        source: "iana"
      },
      "application/ocsp-request": {
        source: "iana"
      },
      "application/ocsp-response": {
        source: "iana"
      },
      "application/octet-stream": {
        source: "iana",
        compressible: false,
        extensions: ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"]
      },
      "application/oda": {
        source: "iana",
        extensions: ["oda"]
      },
      "application/odm+xml": {
        source: "iana",
        compressible: true
      },
      "application/odx": {
        source: "iana"
      },
      "application/oebps-package+xml": {
        source: "iana",
        compressible: true,
        extensions: ["opf"]
      },
      "application/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["ogx"]
      },
      "application/omdoc+xml": {
        source: "apache",
        compressible: true,
        extensions: ["omdoc"]
      },
      "application/onenote": {
        source: "apache",
        extensions: ["onetoc", "onetoc2", "onetmp", "onepkg"]
      },
      "application/opc-nodeset+xml": {
        source: "iana",
        compressible: true
      },
      "application/oscore": {
        source: "iana"
      },
      "application/oxps": {
        source: "iana",
        extensions: ["oxps"]
      },
      "application/p21": {
        source: "iana"
      },
      "application/p21+zip": {
        source: "iana",
        compressible: false
      },
      "application/p2p-overlay+xml": {
        source: "iana",
        compressible: true,
        extensions: ["relo"]
      },
      "application/parityfec": {
        source: "iana"
      },
      "application/passport": {
        source: "iana"
      },
      "application/patch-ops-error+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xer"]
      },
      "application/pdf": {
        source: "iana",
        compressible: false,
        extensions: ["pdf"]
      },
      "application/pdx": {
        source: "iana"
      },
      "application/pem-certificate-chain": {
        source: "iana"
      },
      "application/pgp-encrypted": {
        source: "iana",
        compressible: false,
        extensions: ["pgp"]
      },
      "application/pgp-keys": {
        source: "iana",
        extensions: ["asc"]
      },
      "application/pgp-signature": {
        source: "iana",
        extensions: ["asc", "sig"]
      },
      "application/pics-rules": {
        source: "apache",
        extensions: ["prf"]
      },
      "application/pidf+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/pidf-diff+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/pkcs10": {
        source: "iana",
        extensions: ["p10"]
      },
      "application/pkcs12": {
        source: "iana"
      },
      "application/pkcs7-mime": {
        source: "iana",
        extensions: ["p7m", "p7c"]
      },
      "application/pkcs7-signature": {
        source: "iana",
        extensions: ["p7s"]
      },
      "application/pkcs8": {
        source: "iana",
        extensions: ["p8"]
      },
      "application/pkcs8-encrypted": {
        source: "iana"
      },
      "application/pkix-attr-cert": {
        source: "iana",
        extensions: ["ac"]
      },
      "application/pkix-cert": {
        source: "iana",
        extensions: ["cer"]
      },
      "application/pkix-crl": {
        source: "iana",
        extensions: ["crl"]
      },
      "application/pkix-pkipath": {
        source: "iana",
        extensions: ["pkipath"]
      },
      "application/pkixcmp": {
        source: "iana",
        extensions: ["pki"]
      },
      "application/pls+xml": {
        source: "iana",
        compressible: true,
        extensions: ["pls"]
      },
      "application/poc-settings+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/postscript": {
        source: "iana",
        compressible: true,
        extensions: ["ai", "eps", "ps"]
      },
      "application/ppsp-tracker+json": {
        source: "iana",
        compressible: true
      },
      "application/problem+json": {
        source: "iana",
        compressible: true
      },
      "application/problem+xml": {
        source: "iana",
        compressible: true
      },
      "application/provenance+xml": {
        source: "iana",
        compressible: true,
        extensions: ["provx"]
      },
      "application/prs.alvestrand.titrax-sheet": {
        source: "iana"
      },
      "application/prs.cww": {
        source: "iana",
        extensions: ["cww"]
      },
      "application/prs.cyn": {
        source: "iana",
        charset: "7-BIT"
      },
      "application/prs.hpub+zip": {
        source: "iana",
        compressible: false
      },
      "application/prs.nprend": {
        source: "iana"
      },
      "application/prs.plucker": {
        source: "iana"
      },
      "application/prs.rdf-xml-crypt": {
        source: "iana"
      },
      "application/prs.xsf+xml": {
        source: "iana",
        compressible: true
      },
      "application/pskc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["pskcxml"]
      },
      "application/pvd+json": {
        source: "iana",
        compressible: true
      },
      "application/qsig": {
        source: "iana"
      },
      "application/raml+yaml": {
        compressible: true,
        extensions: ["raml"]
      },
      "application/raptorfec": {
        source: "iana"
      },
      "application/rdap+json": {
        source: "iana",
        compressible: true
      },
      "application/rdf+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rdf", "owl"]
      },
      "application/reginfo+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rif"]
      },
      "application/relax-ng-compact-syntax": {
        source: "iana",
        extensions: ["rnc"]
      },
      "application/remote-printing": {
        source: "iana"
      },
      "application/reputon+json": {
        source: "iana",
        compressible: true
      },
      "application/resource-lists+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rl"]
      },
      "application/resource-lists-diff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rld"]
      },
      "application/rfc+xml": {
        source: "iana",
        compressible: true
      },
      "application/riscos": {
        source: "iana"
      },
      "application/rlmi+xml": {
        source: "iana",
        compressible: true
      },
      "application/rls-services+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rs"]
      },
      "application/route-apd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rapd"]
      },
      "application/route-s-tsid+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sls"]
      },
      "application/route-usd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rusd"]
      },
      "application/rpki-ghostbusters": {
        source: "iana",
        extensions: ["gbr"]
      },
      "application/rpki-manifest": {
        source: "iana",
        extensions: ["mft"]
      },
      "application/rpki-publication": {
        source: "iana"
      },
      "application/rpki-roa": {
        source: "iana",
        extensions: ["roa"]
      },
      "application/rpki-updown": {
        source: "iana"
      },
      "application/rsd+xml": {
        source: "apache",
        compressible: true,
        extensions: ["rsd"]
      },
      "application/rss+xml": {
        source: "apache",
        compressible: true,
        extensions: ["rss"]
      },
      "application/rtf": {
        source: "iana",
        compressible: true,
        extensions: ["rtf"]
      },
      "application/rtploopback": {
        source: "iana"
      },
      "application/rtx": {
        source: "iana"
      },
      "application/samlassertion+xml": {
        source: "iana",
        compressible: true
      },
      "application/samlmetadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/sarif+json": {
        source: "iana",
        compressible: true
      },
      "application/sarif-external-properties+json": {
        source: "iana",
        compressible: true
      },
      "application/sbe": {
        source: "iana"
      },
      "application/sbml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sbml"]
      },
      "application/scaip+xml": {
        source: "iana",
        compressible: true
      },
      "application/scim+json": {
        source: "iana",
        compressible: true
      },
      "application/scvp-cv-request": {
        source: "iana",
        extensions: ["scq"]
      },
      "application/scvp-cv-response": {
        source: "iana",
        extensions: ["scs"]
      },
      "application/scvp-vp-request": {
        source: "iana",
        extensions: ["spq"]
      },
      "application/scvp-vp-response": {
        source: "iana",
        extensions: ["spp"]
      },
      "application/sdp": {
        source: "iana",
        extensions: ["sdp"]
      },
      "application/secevent+jwt": {
        source: "iana"
      },
      "application/senml+cbor": {
        source: "iana"
      },
      "application/senml+json": {
        source: "iana",
        compressible: true
      },
      "application/senml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["senmlx"]
      },
      "application/senml-etch+cbor": {
        source: "iana"
      },
      "application/senml-etch+json": {
        source: "iana",
        compressible: true
      },
      "application/senml-exi": {
        source: "iana"
      },
      "application/sensml+cbor": {
        source: "iana"
      },
      "application/sensml+json": {
        source: "iana",
        compressible: true
      },
      "application/sensml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sensmlx"]
      },
      "application/sensml-exi": {
        source: "iana"
      },
      "application/sep+xml": {
        source: "iana",
        compressible: true
      },
      "application/sep-exi": {
        source: "iana"
      },
      "application/session-info": {
        source: "iana"
      },
      "application/set-payment": {
        source: "iana"
      },
      "application/set-payment-initiation": {
        source: "iana",
        extensions: ["setpay"]
      },
      "application/set-registration": {
        source: "iana"
      },
      "application/set-registration-initiation": {
        source: "iana",
        extensions: ["setreg"]
      },
      "application/sgml": {
        source: "iana"
      },
      "application/sgml-open-catalog": {
        source: "iana"
      },
      "application/shf+xml": {
        source: "iana",
        compressible: true,
        extensions: ["shf"]
      },
      "application/sieve": {
        source: "iana",
        extensions: ["siv", "sieve"]
      },
      "application/simple-filter+xml": {
        source: "iana",
        compressible: true
      },
      "application/simple-message-summary": {
        source: "iana"
      },
      "application/simplesymbolcontainer": {
        source: "iana"
      },
      "application/sipc": {
        source: "iana"
      },
      "application/slate": {
        source: "iana"
      },
      "application/smil": {
        source: "iana"
      },
      "application/smil+xml": {
        source: "iana",
        compressible: true,
        extensions: ["smi", "smil"]
      },
      "application/smpte336m": {
        source: "iana"
      },
      "application/soap+fastinfoset": {
        source: "iana"
      },
      "application/soap+xml": {
        source: "iana",
        compressible: true
      },
      "application/sparql-query": {
        source: "iana",
        extensions: ["rq"]
      },
      "application/sparql-results+xml": {
        source: "iana",
        compressible: true,
        extensions: ["srx"]
      },
      "application/spdx+json": {
        source: "iana",
        compressible: true
      },
      "application/spirits-event+xml": {
        source: "iana",
        compressible: true
      },
      "application/sql": {
        source: "iana"
      },
      "application/srgs": {
        source: "iana",
        extensions: ["gram"]
      },
      "application/srgs+xml": {
        source: "iana",
        compressible: true,
        extensions: ["grxml"]
      },
      "application/sru+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sru"]
      },
      "application/ssdl+xml": {
        source: "apache",
        compressible: true,
        extensions: ["ssdl"]
      },
      "application/ssml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ssml"]
      },
      "application/stix+json": {
        source: "iana",
        compressible: true
      },
      "application/swid+xml": {
        source: "iana",
        compressible: true,
        extensions: ["swidtag"]
      },
      "application/tamp-apex-update": {
        source: "iana"
      },
      "application/tamp-apex-update-confirm": {
        source: "iana"
      },
      "application/tamp-community-update": {
        source: "iana"
      },
      "application/tamp-community-update-confirm": {
        source: "iana"
      },
      "application/tamp-error": {
        source: "iana"
      },
      "application/tamp-sequence-adjust": {
        source: "iana"
      },
      "application/tamp-sequence-adjust-confirm": {
        source: "iana"
      },
      "application/tamp-status-query": {
        source: "iana"
      },
      "application/tamp-status-response": {
        source: "iana"
      },
      "application/tamp-update": {
        source: "iana"
      },
      "application/tamp-update-confirm": {
        source: "iana"
      },
      "application/tar": {
        compressible: true
      },
      "application/taxii+json": {
        source: "iana",
        compressible: true
      },
      "application/td+json": {
        source: "iana",
        compressible: true
      },
      "application/tei+xml": {
        source: "iana",
        compressible: true,
        extensions: ["tei", "teicorpus"]
      },
      "application/tetra_isi": {
        source: "iana"
      },
      "application/thraud+xml": {
        source: "iana",
        compressible: true,
        extensions: ["tfi"]
      },
      "application/timestamp-query": {
        source: "iana"
      },
      "application/timestamp-reply": {
        source: "iana"
      },
      "application/timestamped-data": {
        source: "iana",
        extensions: ["tsd"]
      },
      "application/tlsrpt+gzip": {
        source: "iana"
      },
      "application/tlsrpt+json": {
        source: "iana",
        compressible: true
      },
      "application/tnauthlist": {
        source: "iana"
      },
      "application/token-introspection+jwt": {
        source: "iana"
      },
      "application/toml": {
        compressible: true,
        extensions: ["toml"]
      },
      "application/trickle-ice-sdpfrag": {
        source: "iana"
      },
      "application/trig": {
        source: "iana",
        extensions: ["trig"]
      },
      "application/ttml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ttml"]
      },
      "application/tve-trigger": {
        source: "iana"
      },
      "application/tzif": {
        source: "iana"
      },
      "application/tzif-leap": {
        source: "iana"
      },
      "application/ubjson": {
        compressible: false,
        extensions: ["ubj"]
      },
      "application/ulpfec": {
        source: "iana"
      },
      "application/urc-grpsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/urc-ressheet+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rsheet"]
      },
      "application/urc-targetdesc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["td"]
      },
      "application/urc-uisocketdesc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vcard+json": {
        source: "iana",
        compressible: true
      },
      "application/vcard+xml": {
        source: "iana",
        compressible: true
      },
      "application/vemmi": {
        source: "iana"
      },
      "application/vividence.scriptfile": {
        source: "apache"
      },
      "application/vnd.1000minds.decision-model+xml": {
        source: "iana",
        compressible: true,
        extensions: ["1km"]
      },
      "application/vnd.3gpp-prose+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp-prose-pc3ch+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp-v2x-local-service-information": {
        source: "iana"
      },
      "application/vnd.3gpp.5gnas": {
        source: "iana"
      },
      "application/vnd.3gpp.access-transfer-events+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.bsf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.gmop+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.gtpc": {
        source: "iana"
      },
      "application/vnd.3gpp.interworking-data": {
        source: "iana"
      },
      "application/vnd.3gpp.lpp": {
        source: "iana"
      },
      "application/vnd.3gpp.mc-signalling-ear": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-payload": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-signalling": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-floor-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-location-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-mbms-usage-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-signed+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-ue-init-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-affiliation-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-location-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-transmission-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mid-call+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.ngap": {
        source: "iana"
      },
      "application/vnd.3gpp.pfcp": {
        source: "iana"
      },
      "application/vnd.3gpp.pic-bw-large": {
        source: "iana",
        extensions: ["plb"]
      },
      "application/vnd.3gpp.pic-bw-small": {
        source: "iana",
        extensions: ["psb"]
      },
      "application/vnd.3gpp.pic-bw-var": {
        source: "iana",
        extensions: ["pvb"]
      },
      "application/vnd.3gpp.s1ap": {
        source: "iana"
      },
      "application/vnd.3gpp.sms": {
        source: "iana"
      },
      "application/vnd.3gpp.sms+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.srvcc-ext+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.srvcc-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.state-and-event-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.ussd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp2.bcmcsinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp2.sms": {
        source: "iana"
      },
      "application/vnd.3gpp2.tcap": {
        source: "iana",
        extensions: ["tcap"]
      },
      "application/vnd.3lightssoftware.imagescal": {
        source: "iana"
      },
      "application/vnd.3m.post-it-notes": {
        source: "iana",
        extensions: ["pwn"]
      },
      "application/vnd.accpac.simply.aso": {
        source: "iana",
        extensions: ["aso"]
      },
      "application/vnd.accpac.simply.imp": {
        source: "iana",
        extensions: ["imp"]
      },
      "application/vnd.acucobol": {
        source: "iana",
        extensions: ["acu"]
      },
      "application/vnd.acucorp": {
        source: "iana",
        extensions: ["atc", "acutc"]
      },
      "application/vnd.adobe.air-application-installer-package+zip": {
        source: "apache",
        compressible: false,
        extensions: ["air"]
      },
      "application/vnd.adobe.flash.movie": {
        source: "iana"
      },
      "application/vnd.adobe.formscentral.fcdt": {
        source: "iana",
        extensions: ["fcdt"]
      },
      "application/vnd.adobe.fxp": {
        source: "iana",
        extensions: ["fxp", "fxpl"]
      },
      "application/vnd.adobe.partial-upload": {
        source: "iana"
      },
      "application/vnd.adobe.xdp+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdp"]
      },
      "application/vnd.adobe.xfdf": {
        source: "iana",
        extensions: ["xfdf"]
      },
      "application/vnd.aether.imp": {
        source: "iana"
      },
      "application/vnd.afpc.afplinedata": {
        source: "iana"
      },
      "application/vnd.afpc.afplinedata-pagedef": {
        source: "iana"
      },
      "application/vnd.afpc.cmoca-cmresource": {
        source: "iana"
      },
      "application/vnd.afpc.foca-charset": {
        source: "iana"
      },
      "application/vnd.afpc.foca-codedfont": {
        source: "iana"
      },
      "application/vnd.afpc.foca-codepage": {
        source: "iana"
      },
      "application/vnd.afpc.modca": {
        source: "iana"
      },
      "application/vnd.afpc.modca-cmtable": {
        source: "iana"
      },
      "application/vnd.afpc.modca-formdef": {
        source: "iana"
      },
      "application/vnd.afpc.modca-mediummap": {
        source: "iana"
      },
      "application/vnd.afpc.modca-objectcontainer": {
        source: "iana"
      },
      "application/vnd.afpc.modca-overlay": {
        source: "iana"
      },
      "application/vnd.afpc.modca-pagesegment": {
        source: "iana"
      },
      "application/vnd.age": {
        source: "iana",
        extensions: ["age"]
      },
      "application/vnd.ah-barcode": {
        source: "iana"
      },
      "application/vnd.ahead.space": {
        source: "iana",
        extensions: ["ahead"]
      },
      "application/vnd.airzip.filesecure.azf": {
        source: "iana",
        extensions: ["azf"]
      },
      "application/vnd.airzip.filesecure.azs": {
        source: "iana",
        extensions: ["azs"]
      },
      "application/vnd.amadeus+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.amazon.ebook": {
        source: "apache",
        extensions: ["azw"]
      },
      "application/vnd.amazon.mobi8-ebook": {
        source: "iana"
      },
      "application/vnd.americandynamics.acc": {
        source: "iana",
        extensions: ["acc"]
      },
      "application/vnd.amiga.ami": {
        source: "iana",
        extensions: ["ami"]
      },
      "application/vnd.amundsen.maze+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.android.ota": {
        source: "iana"
      },
      "application/vnd.android.package-archive": {
        source: "apache",
        compressible: false,
        extensions: ["apk"]
      },
      "application/vnd.anki": {
        source: "iana"
      },
      "application/vnd.anser-web-certificate-issue-initiation": {
        source: "iana",
        extensions: ["cii"]
      },
      "application/vnd.anser-web-funds-transfer-initiation": {
        source: "apache",
        extensions: ["fti"]
      },
      "application/vnd.antix.game-component": {
        source: "iana",
        extensions: ["atx"]
      },
      "application/vnd.apache.arrow.file": {
        source: "iana"
      },
      "application/vnd.apache.arrow.stream": {
        source: "iana"
      },
      "application/vnd.apache.thrift.binary": {
        source: "iana"
      },
      "application/vnd.apache.thrift.compact": {
        source: "iana"
      },
      "application/vnd.apache.thrift.json": {
        source: "iana"
      },
      "application/vnd.api+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.aplextor.warrp+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.apothekende.reservation+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.apple.installer+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpkg"]
      },
      "application/vnd.apple.keynote": {
        source: "iana",
        extensions: ["key"]
      },
      "application/vnd.apple.mpegurl": {
        source: "iana",
        extensions: ["m3u8"]
      },
      "application/vnd.apple.numbers": {
        source: "iana",
        extensions: ["numbers"]
      },
      "application/vnd.apple.pages": {
        source: "iana",
        extensions: ["pages"]
      },
      "application/vnd.apple.pkpass": {
        compressible: false,
        extensions: ["pkpass"]
      },
      "application/vnd.arastra.swi": {
        source: "iana"
      },
      "application/vnd.aristanetworks.swi": {
        source: "iana",
        extensions: ["swi"]
      },
      "application/vnd.artisan+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.artsquare": {
        source: "iana"
      },
      "application/vnd.astraea-software.iota": {
        source: "iana",
        extensions: ["iota"]
      },
      "application/vnd.audiograph": {
        source: "iana",
        extensions: ["aep"]
      },
      "application/vnd.autopackage": {
        source: "iana"
      },
      "application/vnd.avalon+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.avistar+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.balsamiq.bmml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["bmml"]
      },
      "application/vnd.balsamiq.bmpr": {
        source: "iana"
      },
      "application/vnd.banana-accounting": {
        source: "iana"
      },
      "application/vnd.bbf.usp.error": {
        source: "iana"
      },
      "application/vnd.bbf.usp.msg": {
        source: "iana"
      },
      "application/vnd.bbf.usp.msg+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.bekitzur-stech+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.bint.med-content": {
        source: "iana"
      },
      "application/vnd.biopax.rdf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.blink-idb-value-wrapper": {
        source: "iana"
      },
      "application/vnd.blueice.multipass": {
        source: "iana",
        extensions: ["mpm"]
      },
      "application/vnd.bluetooth.ep.oob": {
        source: "iana"
      },
      "application/vnd.bluetooth.le.oob": {
        source: "iana"
      },
      "application/vnd.bmi": {
        source: "iana",
        extensions: ["bmi"]
      },
      "application/vnd.bpf": {
        source: "iana"
      },
      "application/vnd.bpf3": {
        source: "iana"
      },
      "application/vnd.businessobjects": {
        source: "iana",
        extensions: ["rep"]
      },
      "application/vnd.byu.uapi+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cab-jscript": {
        source: "iana"
      },
      "application/vnd.canon-cpdl": {
        source: "iana"
      },
      "application/vnd.canon-lips": {
        source: "iana"
      },
      "application/vnd.capasystems-pg+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cendio.thinlinc.clientconf": {
        source: "iana"
      },
      "application/vnd.century-systems.tcp_stream": {
        source: "iana"
      },
      "application/vnd.chemdraw+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cdxml"]
      },
      "application/vnd.chess-pgn": {
        source: "iana"
      },
      "application/vnd.chipnuts.karaoke-mmd": {
        source: "iana",
        extensions: ["mmd"]
      },
      "application/vnd.ciedi": {
        source: "iana"
      },
      "application/vnd.cinderella": {
        source: "iana",
        extensions: ["cdy"]
      },
      "application/vnd.cirpack.isdn-ext": {
        source: "iana"
      },
      "application/vnd.citationstyles.style+xml": {
        source: "iana",
        compressible: true,
        extensions: ["csl"]
      },
      "application/vnd.claymore": {
        source: "iana",
        extensions: ["cla"]
      },
      "application/vnd.cloanto.rp9": {
        source: "iana",
        extensions: ["rp9"]
      },
      "application/vnd.clonk.c4group": {
        source: "iana",
        extensions: ["c4g", "c4d", "c4f", "c4p", "c4u"]
      },
      "application/vnd.cluetrust.cartomobile-config": {
        source: "iana",
        extensions: ["c11amc"]
      },
      "application/vnd.cluetrust.cartomobile-config-pkg": {
        source: "iana",
        extensions: ["c11amz"]
      },
      "application/vnd.coffeescript": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.document": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.document-template": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.presentation": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.presentation-template": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.spreadsheet": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.spreadsheet-template": {
        source: "iana"
      },
      "application/vnd.collection+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.collection.doc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.collection.next+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.comicbook+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.comicbook-rar": {
        source: "iana"
      },
      "application/vnd.commerce-battelle": {
        source: "iana"
      },
      "application/vnd.commonspace": {
        source: "iana",
        extensions: ["csp"]
      },
      "application/vnd.contact.cmsg": {
        source: "iana",
        extensions: ["cdbcmsg"]
      },
      "application/vnd.coreos.ignition+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cosmocaller": {
        source: "iana",
        extensions: ["cmc"]
      },
      "application/vnd.crick.clicker": {
        source: "iana",
        extensions: ["clkx"]
      },
      "application/vnd.crick.clicker.keyboard": {
        source: "iana",
        extensions: ["clkk"]
      },
      "application/vnd.crick.clicker.palette": {
        source: "iana",
        extensions: ["clkp"]
      },
      "application/vnd.crick.clicker.template": {
        source: "iana",
        extensions: ["clkt"]
      },
      "application/vnd.crick.clicker.wordbank": {
        source: "iana",
        extensions: ["clkw"]
      },
      "application/vnd.criticaltools.wbs+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wbs"]
      },
      "application/vnd.cryptii.pipe+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.crypto-shade-file": {
        source: "iana"
      },
      "application/vnd.cryptomator.encrypted": {
        source: "iana"
      },
      "application/vnd.cryptomator.vault": {
        source: "iana"
      },
      "application/vnd.ctc-posml": {
        source: "iana",
        extensions: ["pml"]
      },
      "application/vnd.ctct.ws+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cups-pdf": {
        source: "iana"
      },
      "application/vnd.cups-postscript": {
        source: "iana"
      },
      "application/vnd.cups-ppd": {
        source: "iana",
        extensions: ["ppd"]
      },
      "application/vnd.cups-raster": {
        source: "iana"
      },
      "application/vnd.cups-raw": {
        source: "iana"
      },
      "application/vnd.curl": {
        source: "iana"
      },
      "application/vnd.curl.car": {
        source: "apache",
        extensions: ["car"]
      },
      "application/vnd.curl.pcurl": {
        source: "apache",
        extensions: ["pcurl"]
      },
      "application/vnd.cyan.dean.root+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cybank": {
        source: "iana"
      },
      "application/vnd.cyclonedx+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cyclonedx+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.d2l.coursepackage1p0+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.d3m-dataset": {
        source: "iana"
      },
      "application/vnd.d3m-problem": {
        source: "iana"
      },
      "application/vnd.dart": {
        source: "iana",
        compressible: true,
        extensions: ["dart"]
      },
      "application/vnd.data-vision.rdz": {
        source: "iana",
        extensions: ["rdz"]
      },
      "application/vnd.datapackage+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dataresource+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dbf": {
        source: "iana",
        extensions: ["dbf"]
      },
      "application/vnd.debian.binary-package": {
        source: "iana"
      },
      "application/vnd.dece.data": {
        source: "iana",
        extensions: ["uvf", "uvvf", "uvd", "uvvd"]
      },
      "application/vnd.dece.ttml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["uvt", "uvvt"]
      },
      "application/vnd.dece.unspecified": {
        source: "iana",
        extensions: ["uvx", "uvvx"]
      },
      "application/vnd.dece.zip": {
        source: "iana",
        extensions: ["uvz", "uvvz"]
      },
      "application/vnd.denovo.fcselayout-link": {
        source: "iana",
        extensions: ["fe_launch"]
      },
      "application/vnd.desmume.movie": {
        source: "iana"
      },
      "application/vnd.dir-bi.plate-dl-nosuffix": {
        source: "iana"
      },
      "application/vnd.dm.delegation+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dna": {
        source: "iana",
        extensions: ["dna"]
      },
      "application/vnd.document+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dolby.mlp": {
        source: "apache",
        extensions: ["mlp"]
      },
      "application/vnd.dolby.mobile.1": {
        source: "iana"
      },
      "application/vnd.dolby.mobile.2": {
        source: "iana"
      },
      "application/vnd.doremir.scorecloud-binary-document": {
        source: "iana"
      },
      "application/vnd.dpgraph": {
        source: "iana",
        extensions: ["dpg"]
      },
      "application/vnd.dreamfactory": {
        source: "iana",
        extensions: ["dfac"]
      },
      "application/vnd.drive+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ds-keypoint": {
        source: "apache",
        extensions: ["kpxx"]
      },
      "application/vnd.dtg.local": {
        source: "iana"
      },
      "application/vnd.dtg.local.flash": {
        source: "iana"
      },
      "application/vnd.dtg.local.html": {
        source: "iana"
      },
      "application/vnd.dvb.ait": {
        source: "iana",
        extensions: ["ait"]
      },
      "application/vnd.dvb.dvbisl+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.dvbj": {
        source: "iana"
      },
      "application/vnd.dvb.esgcontainer": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcdftnotifaccess": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgaccess": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgaccess2": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgpdd": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcroaming": {
        source: "iana"
      },
      "application/vnd.dvb.iptv.alfec-base": {
        source: "iana"
      },
      "application/vnd.dvb.iptv.alfec-enhancement": {
        source: "iana"
      },
      "application/vnd.dvb.notif-aggregate-root+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-container+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-generic+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-msglist+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-registration-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-registration-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-init+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.pfr": {
        source: "iana"
      },
      "application/vnd.dvb.service": {
        source: "iana",
        extensions: ["svc"]
      },
      "application/vnd.dxr": {
        source: "iana"
      },
      "application/vnd.dynageo": {
        source: "iana",
        extensions: ["geo"]
      },
      "application/vnd.dzr": {
        source: "iana"
      },
      "application/vnd.easykaraoke.cdgdownload": {
        source: "iana"
      },
      "application/vnd.ecdis-update": {
        source: "iana"
      },
      "application/vnd.ecip.rlp": {
        source: "iana"
      },
      "application/vnd.eclipse.ditto+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ecowin.chart": {
        source: "iana",
        extensions: ["mag"]
      },
      "application/vnd.ecowin.filerequest": {
        source: "iana"
      },
      "application/vnd.ecowin.fileupdate": {
        source: "iana"
      },
      "application/vnd.ecowin.series": {
        source: "iana"
      },
      "application/vnd.ecowin.seriesrequest": {
        source: "iana"
      },
      "application/vnd.ecowin.seriesupdate": {
        source: "iana"
      },
      "application/vnd.efi.img": {
        source: "iana"
      },
      "application/vnd.efi.iso": {
        source: "iana"
      },
      "application/vnd.emclient.accessrequest+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.enliven": {
        source: "iana",
        extensions: ["nml"]
      },
      "application/vnd.enphase.envoy": {
        source: "iana"
      },
      "application/vnd.eprints.data+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.epson.esf": {
        source: "iana",
        extensions: ["esf"]
      },
      "application/vnd.epson.msf": {
        source: "iana",
        extensions: ["msf"]
      },
      "application/vnd.epson.quickanime": {
        source: "iana",
        extensions: ["qam"]
      },
      "application/vnd.epson.salt": {
        source: "iana",
        extensions: ["slt"]
      },
      "application/vnd.epson.ssf": {
        source: "iana",
        extensions: ["ssf"]
      },
      "application/vnd.ericsson.quickcall": {
        source: "iana"
      },
      "application/vnd.espass-espass+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.eszigno3+xml": {
        source: "iana",
        compressible: true,
        extensions: ["es3", "et3"]
      },
      "application/vnd.etsi.aoc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.asic-e+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.etsi.asic-s+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.etsi.cug+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvcommand+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvdiscovery+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-bc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-cod+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-npvr+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvservice+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsync+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvueprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.mcid+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.mheg5": {
        source: "iana"
      },
      "application/vnd.etsi.overload-control-policy-dataset+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.pstn+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.sci+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.simservs+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.timestamp-token": {
        source: "iana"
      },
      "application/vnd.etsi.tsl+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.tsl.der": {
        source: "iana"
      },
      "application/vnd.eu.kasparian.car+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.eudora.data": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.profile": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.settings": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.theme": {
        source: "iana"
      },
      "application/vnd.exstream-empower+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.exstream-package": {
        source: "iana"
      },
      "application/vnd.ezpix-album": {
        source: "iana",
        extensions: ["ez2"]
      },
      "application/vnd.ezpix-package": {
        source: "iana",
        extensions: ["ez3"]
      },
      "application/vnd.f-secure.mobile": {
        source: "iana"
      },
      "application/vnd.familysearch.gedcom+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.fastcopy-disk-image": {
        source: "iana"
      },
      "application/vnd.fdf": {
        source: "iana",
        extensions: ["fdf"]
      },
      "application/vnd.fdsn.mseed": {
        source: "iana",
        extensions: ["mseed"]
      },
      "application/vnd.fdsn.seed": {
        source: "iana",
        extensions: ["seed", "dataless"]
      },
      "application/vnd.ffsns": {
        source: "iana"
      },
      "application/vnd.ficlab.flb+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.filmit.zfc": {
        source: "iana"
      },
      "application/vnd.fints": {
        source: "iana"
      },
      "application/vnd.firemonkeys.cloudcell": {
        source: "iana"
      },
      "application/vnd.flographit": {
        source: "iana",
        extensions: ["gph"]
      },
      "application/vnd.fluxtime.clip": {
        source: "iana",
        extensions: ["ftc"]
      },
      "application/vnd.font-fontforge-sfd": {
        source: "iana"
      },
      "application/vnd.framemaker": {
        source: "iana",
        extensions: ["fm", "frame", "maker", "book"]
      },
      "application/vnd.frogans.fnc": {
        source: "iana",
        extensions: ["fnc"]
      },
      "application/vnd.frogans.ltf": {
        source: "iana",
        extensions: ["ltf"]
      },
      "application/vnd.fsc.weblaunch": {
        source: "iana",
        extensions: ["fsc"]
      },
      "application/vnd.fujifilm.fb.docuworks": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.docuworks.binder": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.docuworks.container": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.jfi+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.fujitsu.oasys": {
        source: "iana",
        extensions: ["oas"]
      },
      "application/vnd.fujitsu.oasys2": {
        source: "iana",
        extensions: ["oa2"]
      },
      "application/vnd.fujitsu.oasys3": {
        source: "iana",
        extensions: ["oa3"]
      },
      "application/vnd.fujitsu.oasysgp": {
        source: "iana",
        extensions: ["fg5"]
      },
      "application/vnd.fujitsu.oasysprs": {
        source: "iana",
        extensions: ["bh2"]
      },
      "application/vnd.fujixerox.art-ex": {
        source: "iana"
      },
      "application/vnd.fujixerox.art4": {
        source: "iana"
      },
      "application/vnd.fujixerox.ddd": {
        source: "iana",
        extensions: ["ddd"]
      },
      "application/vnd.fujixerox.docuworks": {
        source: "iana",
        extensions: ["xdw"]
      },
      "application/vnd.fujixerox.docuworks.binder": {
        source: "iana",
        extensions: ["xbd"]
      },
      "application/vnd.fujixerox.docuworks.container": {
        source: "iana"
      },
      "application/vnd.fujixerox.hbpl": {
        source: "iana"
      },
      "application/vnd.fut-misnet": {
        source: "iana"
      },
      "application/vnd.futoin+cbor": {
        source: "iana"
      },
      "application/vnd.futoin+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.fuzzysheet": {
        source: "iana",
        extensions: ["fzs"]
      },
      "application/vnd.genomatix.tuxedo": {
        source: "iana",
        extensions: ["txd"]
      },
      "application/vnd.gentics.grd+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geo+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geocube+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geogebra.file": {
        source: "iana",
        extensions: ["ggb"]
      },
      "application/vnd.geogebra.slides": {
        source: "iana"
      },
      "application/vnd.geogebra.tool": {
        source: "iana",
        extensions: ["ggt"]
      },
      "application/vnd.geometry-explorer": {
        source: "iana",
        extensions: ["gex", "gre"]
      },
      "application/vnd.geonext": {
        source: "iana",
        extensions: ["gxt"]
      },
      "application/vnd.geoplan": {
        source: "iana",
        extensions: ["g2w"]
      },
      "application/vnd.geospace": {
        source: "iana",
        extensions: ["g3w"]
      },
      "application/vnd.gerber": {
        source: "iana"
      },
      "application/vnd.globalplatform.card-content-mgt": {
        source: "iana"
      },
      "application/vnd.globalplatform.card-content-mgt-response": {
        source: "iana"
      },
      "application/vnd.gmx": {
        source: "iana",
        extensions: ["gmx"]
      },
      "application/vnd.google-apps.document": {
        compressible: false,
        extensions: ["gdoc"]
      },
      "application/vnd.google-apps.presentation": {
        compressible: false,
        extensions: ["gslides"]
      },
      "application/vnd.google-apps.spreadsheet": {
        compressible: false,
        extensions: ["gsheet"]
      },
      "application/vnd.google-earth.kml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["kml"]
      },
      "application/vnd.google-earth.kmz": {
        source: "iana",
        compressible: false,
        extensions: ["kmz"]
      },
      "application/vnd.gov.sk.e-form+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.gov.sk.e-form+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.gov.sk.xmldatacontainer+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.grafeq": {
        source: "iana",
        extensions: ["gqf", "gqs"]
      },
      "application/vnd.gridmp": {
        source: "iana"
      },
      "application/vnd.groove-account": {
        source: "iana",
        extensions: ["gac"]
      },
      "application/vnd.groove-help": {
        source: "iana",
        extensions: ["ghf"]
      },
      "application/vnd.groove-identity-message": {
        source: "iana",
        extensions: ["gim"]
      },
      "application/vnd.groove-injector": {
        source: "iana",
        extensions: ["grv"]
      },
      "application/vnd.groove-tool-message": {
        source: "iana",
        extensions: ["gtm"]
      },
      "application/vnd.groove-tool-template": {
        source: "iana",
        extensions: ["tpl"]
      },
      "application/vnd.groove-vcard": {
        source: "iana",
        extensions: ["vcg"]
      },
      "application/vnd.hal+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hal+xml": {
        source: "iana",
        compressible: true,
        extensions: ["hal"]
      },
      "application/vnd.handheld-entertainment+xml": {
        source: "iana",
        compressible: true,
        extensions: ["zmm"]
      },
      "application/vnd.hbci": {
        source: "iana",
        extensions: ["hbci"]
      },
      "application/vnd.hc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hcl-bireports": {
        source: "iana"
      },
      "application/vnd.hdt": {
        source: "iana"
      },
      "application/vnd.heroku+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hhe.lesson-player": {
        source: "iana",
        extensions: ["les"]
      },
      "application/vnd.hl7cda+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.hl7v2+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.hp-hpgl": {
        source: "iana",
        extensions: ["hpgl"]
      },
      "application/vnd.hp-hpid": {
        source: "iana",
        extensions: ["hpid"]
      },
      "application/vnd.hp-hps": {
        source: "iana",
        extensions: ["hps"]
      },
      "application/vnd.hp-jlyt": {
        source: "iana",
        extensions: ["jlt"]
      },
      "application/vnd.hp-pcl": {
        source: "iana",
        extensions: ["pcl"]
      },
      "application/vnd.hp-pclxl": {
        source: "iana",
        extensions: ["pclxl"]
      },
      "application/vnd.httphone": {
        source: "iana"
      },
      "application/vnd.hydrostatix.sof-data": {
        source: "iana",
        extensions: ["sfd-hdstx"]
      },
      "application/vnd.hyper+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hyper-item+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hyperdrive+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hzn-3d-crossword": {
        source: "iana"
      },
      "application/vnd.ibm.afplinedata": {
        source: "iana"
      },
      "application/vnd.ibm.electronic-media": {
        source: "iana"
      },
      "application/vnd.ibm.minipay": {
        source: "iana",
        extensions: ["mpy"]
      },
      "application/vnd.ibm.modcap": {
        source: "iana",
        extensions: ["afp", "listafp", "list3820"]
      },
      "application/vnd.ibm.rights-management": {
        source: "iana",
        extensions: ["irm"]
      },
      "application/vnd.ibm.secure-container": {
        source: "iana",
        extensions: ["sc"]
      },
      "application/vnd.iccprofile": {
        source: "iana",
        extensions: ["icc", "icm"]
      },
      "application/vnd.ieee.1905": {
        source: "iana"
      },
      "application/vnd.igloader": {
        source: "iana",
        extensions: ["igl"]
      },
      "application/vnd.imagemeter.folder+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.imagemeter.image+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.immervision-ivp": {
        source: "iana",
        extensions: ["ivp"]
      },
      "application/vnd.immervision-ivu": {
        source: "iana",
        extensions: ["ivu"]
      },
      "application/vnd.ims.imsccv1p1": {
        source: "iana"
      },
      "application/vnd.ims.imsccv1p2": {
        source: "iana"
      },
      "application/vnd.ims.imsccv1p3": {
        source: "iana"
      },
      "application/vnd.ims.lis.v2.result+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolproxy+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolproxy.id+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolsettings+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolsettings.simple+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.informedcontrol.rms+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.informix-visionary": {
        source: "iana"
      },
      "application/vnd.infotech.project": {
        source: "iana"
      },
      "application/vnd.infotech.project+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.innopath.wamp.notification": {
        source: "iana"
      },
      "application/vnd.insors.igm": {
        source: "iana",
        extensions: ["igm"]
      },
      "application/vnd.intercon.formnet": {
        source: "iana",
        extensions: ["xpw", "xpx"]
      },
      "application/vnd.intergeo": {
        source: "iana",
        extensions: ["i2g"]
      },
      "application/vnd.intertrust.digibox": {
        source: "iana"
      },
      "application/vnd.intertrust.nncp": {
        source: "iana"
      },
      "application/vnd.intu.qbo": {
        source: "iana",
        extensions: ["qbo"]
      },
      "application/vnd.intu.qfx": {
        source: "iana",
        extensions: ["qfx"]
      },
      "application/vnd.iptc.g2.catalogitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.conceptitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.knowledgeitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.newsitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.newsmessage+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.packageitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.planningitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ipunplugged.rcprofile": {
        source: "iana",
        extensions: ["rcprofile"]
      },
      "application/vnd.irepository.package+xml": {
        source: "iana",
        compressible: true,
        extensions: ["irp"]
      },
      "application/vnd.is-xpr": {
        source: "iana",
        extensions: ["xpr"]
      },
      "application/vnd.isac.fcs": {
        source: "iana",
        extensions: ["fcs"]
      },
      "application/vnd.iso11783-10+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.jam": {
        source: "iana",
        extensions: ["jam"]
      },
      "application/vnd.japannet-directory-service": {
        source: "iana"
      },
      "application/vnd.japannet-jpnstore-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-payment-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-registration": {
        source: "iana"
      },
      "application/vnd.japannet-registration-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-setstore-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-verification": {
        source: "iana"
      },
      "application/vnd.japannet-verification-wakeup": {
        source: "iana"
      },
      "application/vnd.jcp.javame.midlet-rms": {
        source: "iana",
        extensions: ["rms"]
      },
      "application/vnd.jisp": {
        source: "iana",
        extensions: ["jisp"]
      },
      "application/vnd.joost.joda-archive": {
        source: "iana",
        extensions: ["joda"]
      },
      "application/vnd.jsk.isdn-ngn": {
        source: "iana"
      },
      "application/vnd.kahootz": {
        source: "iana",
        extensions: ["ktz", "ktr"]
      },
      "application/vnd.kde.karbon": {
        source: "iana",
        extensions: ["karbon"]
      },
      "application/vnd.kde.kchart": {
        source: "iana",
        extensions: ["chrt"]
      },
      "application/vnd.kde.kformula": {
        source: "iana",
        extensions: ["kfo"]
      },
      "application/vnd.kde.kivio": {
        source: "iana",
        extensions: ["flw"]
      },
      "application/vnd.kde.kontour": {
        source: "iana",
        extensions: ["kon"]
      },
      "application/vnd.kde.kpresenter": {
        source: "iana",
        extensions: ["kpr", "kpt"]
      },
      "application/vnd.kde.kspread": {
        source: "iana",
        extensions: ["ksp"]
      },
      "application/vnd.kde.kword": {
        source: "iana",
        extensions: ["kwd", "kwt"]
      },
      "application/vnd.kenameaapp": {
        source: "iana",
        extensions: ["htke"]
      },
      "application/vnd.kidspiration": {
        source: "iana",
        extensions: ["kia"]
      },
      "application/vnd.kinar": {
        source: "iana",
        extensions: ["kne", "knp"]
      },
      "application/vnd.koan": {
        source: "iana",
        extensions: ["skp", "skd", "skt", "skm"]
      },
      "application/vnd.kodak-descriptor": {
        source: "iana",
        extensions: ["sse"]
      },
      "application/vnd.las": {
        source: "iana"
      },
      "application/vnd.las.las+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.las.las+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lasxml"]
      },
      "application/vnd.laszip": {
        source: "iana"
      },
      "application/vnd.leap+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.liberty-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.llamagraphics.life-balance.desktop": {
        source: "iana",
        extensions: ["lbd"]
      },
      "application/vnd.llamagraphics.life-balance.exchange+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lbe"]
      },
      "application/vnd.logipipe.circuit+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.loom": {
        source: "iana"
      },
      "application/vnd.lotus-1-2-3": {
        source: "iana",
        extensions: ["123"]
      },
      "application/vnd.lotus-approach": {
        source: "iana",
        extensions: ["apr"]
      },
      "application/vnd.lotus-freelance": {
        source: "iana",
        extensions: ["pre"]
      },
      "application/vnd.lotus-notes": {
        source: "iana",
        extensions: ["nsf"]
      },
      "application/vnd.lotus-organizer": {
        source: "iana",
        extensions: ["org"]
      },
      "application/vnd.lotus-screencam": {
        source: "iana",
        extensions: ["scm"]
      },
      "application/vnd.lotus-wordpro": {
        source: "iana",
        extensions: ["lwp"]
      },
      "application/vnd.macports.portpkg": {
        source: "iana",
        extensions: ["portpkg"]
      },
      "application/vnd.mapbox-vector-tile": {
        source: "iana",
        extensions: ["mvt"]
      },
      "application/vnd.marlin.drm.actiontoken+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.conftoken+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.license+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.mdcf": {
        source: "iana"
      },
      "application/vnd.mason+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.maxar.archive.3tz+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.maxmind.maxmind-db": {
        source: "iana"
      },
      "application/vnd.mcd": {
        source: "iana",
        extensions: ["mcd"]
      },
      "application/vnd.medcalcdata": {
        source: "iana",
        extensions: ["mc1"]
      },
      "application/vnd.mediastation.cdkey": {
        source: "iana",
        extensions: ["cdkey"]
      },
      "application/vnd.meridian-slingshot": {
        source: "iana"
      },
      "application/vnd.mfer": {
        source: "iana",
        extensions: ["mwf"]
      },
      "application/vnd.mfmp": {
        source: "iana",
        extensions: ["mfm"]
      },
      "application/vnd.micro+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.micrografx.flo": {
        source: "iana",
        extensions: ["flo"]
      },
      "application/vnd.micrografx.igx": {
        source: "iana",
        extensions: ["igx"]
      },
      "application/vnd.microsoft.portable-executable": {
        source: "iana"
      },
      "application/vnd.microsoft.windows.thumbnail-cache": {
        source: "iana"
      },
      "application/vnd.miele+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.mif": {
        source: "iana",
        extensions: ["mif"]
      },
      "application/vnd.minisoft-hp3000-save": {
        source: "iana"
      },
      "application/vnd.mitsubishi.misty-guard.trustweb": {
        source: "iana"
      },
      "application/vnd.mobius.daf": {
        source: "iana",
        extensions: ["daf"]
      },
      "application/vnd.mobius.dis": {
        source: "iana",
        extensions: ["dis"]
      },
      "application/vnd.mobius.mbk": {
        source: "iana",
        extensions: ["mbk"]
      },
      "application/vnd.mobius.mqy": {
        source: "iana",
        extensions: ["mqy"]
      },
      "application/vnd.mobius.msl": {
        source: "iana",
        extensions: ["msl"]
      },
      "application/vnd.mobius.plc": {
        source: "iana",
        extensions: ["plc"]
      },
      "application/vnd.mobius.txf": {
        source: "iana",
        extensions: ["txf"]
      },
      "application/vnd.mophun.application": {
        source: "iana",
        extensions: ["mpn"]
      },
      "application/vnd.mophun.certificate": {
        source: "iana",
        extensions: ["mpc"]
      },
      "application/vnd.motorola.flexsuite": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.adsi": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.fis": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.gotap": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.kmr": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.ttc": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.wem": {
        source: "iana"
      },
      "application/vnd.motorola.iprm": {
        source: "iana"
      },
      "application/vnd.mozilla.xul+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xul"]
      },
      "application/vnd.ms-3mfdocument": {
        source: "iana"
      },
      "application/vnd.ms-artgalry": {
        source: "iana",
        extensions: ["cil"]
      },
      "application/vnd.ms-asf": {
        source: "iana"
      },
      "application/vnd.ms-cab-compressed": {
        source: "iana",
        extensions: ["cab"]
      },
      "application/vnd.ms-color.iccprofile": {
        source: "apache"
      },
      "application/vnd.ms-excel": {
        source: "iana",
        compressible: false,
        extensions: ["xls", "xlm", "xla", "xlc", "xlt", "xlw"]
      },
      "application/vnd.ms-excel.addin.macroenabled.12": {
        source: "iana",
        extensions: ["xlam"]
      },
      "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
        source: "iana",
        extensions: ["xlsb"]
      },
      "application/vnd.ms-excel.sheet.macroenabled.12": {
        source: "iana",
        extensions: ["xlsm"]
      },
      "application/vnd.ms-excel.template.macroenabled.12": {
        source: "iana",
        extensions: ["xltm"]
      },
      "application/vnd.ms-fontobject": {
        source: "iana",
        compressible: true,
        extensions: ["eot"]
      },
      "application/vnd.ms-htmlhelp": {
        source: "iana",
        extensions: ["chm"]
      },
      "application/vnd.ms-ims": {
        source: "iana",
        extensions: ["ims"]
      },
      "application/vnd.ms-lrm": {
        source: "iana",
        extensions: ["lrm"]
      },
      "application/vnd.ms-office.activex+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-officetheme": {
        source: "iana",
        extensions: ["thmx"]
      },
      "application/vnd.ms-opentype": {
        source: "apache",
        compressible: true
      },
      "application/vnd.ms-outlook": {
        compressible: false,
        extensions: ["msg"]
      },
      "application/vnd.ms-package.obfuscated-opentype": {
        source: "apache"
      },
      "application/vnd.ms-pki.seccat": {
        source: "apache",
        extensions: ["cat"]
      },
      "application/vnd.ms-pki.stl": {
        source: "apache",
        extensions: ["stl"]
      },
      "application/vnd.ms-playready.initiator+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-powerpoint": {
        source: "iana",
        compressible: false,
        extensions: ["ppt", "pps", "pot"]
      },
      "application/vnd.ms-powerpoint.addin.macroenabled.12": {
        source: "iana",
        extensions: ["ppam"]
      },
      "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
        source: "iana",
        extensions: ["pptm"]
      },
      "application/vnd.ms-powerpoint.slide.macroenabled.12": {
        source: "iana",
        extensions: ["sldm"]
      },
      "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
        source: "iana",
        extensions: ["ppsm"]
      },
      "application/vnd.ms-powerpoint.template.macroenabled.12": {
        source: "iana",
        extensions: ["potm"]
      },
      "application/vnd.ms-printdevicecapabilities+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-printing.printticket+xml": {
        source: "apache",
        compressible: true
      },
      "application/vnd.ms-printschematicket+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-project": {
        source: "iana",
        extensions: ["mpp", "mpt"]
      },
      "application/vnd.ms-tnef": {
        source: "iana"
      },
      "application/vnd.ms-windows.devicepairing": {
        source: "iana"
      },
      "application/vnd.ms-windows.nwprinting.oob": {
        source: "iana"
      },
      "application/vnd.ms-windows.printerpairing": {
        source: "iana"
      },
      "application/vnd.ms-windows.wsd.oob": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.lic-chlg-req": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.lic-resp": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.meter-chlg-req": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.meter-resp": {
        source: "iana"
      },
      "application/vnd.ms-word.document.macroenabled.12": {
        source: "iana",
        extensions: ["docm"]
      },
      "application/vnd.ms-word.template.macroenabled.12": {
        source: "iana",
        extensions: ["dotm"]
      },
      "application/vnd.ms-works": {
        source: "iana",
        extensions: ["wps", "wks", "wcm", "wdb"]
      },
      "application/vnd.ms-wpl": {
        source: "iana",
        extensions: ["wpl"]
      },
      "application/vnd.ms-xpsdocument": {
        source: "iana",
        compressible: false,
        extensions: ["xps"]
      },
      "application/vnd.msa-disk-image": {
        source: "iana"
      },
      "application/vnd.mseq": {
        source: "iana",
        extensions: ["mseq"]
      },
      "application/vnd.msign": {
        source: "iana"
      },
      "application/vnd.multiad.creator": {
        source: "iana"
      },
      "application/vnd.multiad.creator.cif": {
        source: "iana"
      },
      "application/vnd.music-niff": {
        source: "iana"
      },
      "application/vnd.musician": {
        source: "iana",
        extensions: ["mus"]
      },
      "application/vnd.muvee.style": {
        source: "iana",
        extensions: ["msty"]
      },
      "application/vnd.mynfc": {
        source: "iana",
        extensions: ["taglet"]
      },
      "application/vnd.nacamar.ybrid+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ncd.control": {
        source: "iana"
      },
      "application/vnd.ncd.reference": {
        source: "iana"
      },
      "application/vnd.nearst.inv+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nebumind.line": {
        source: "iana"
      },
      "application/vnd.nervana": {
        source: "iana"
      },
      "application/vnd.netfpx": {
        source: "iana"
      },
      "application/vnd.neurolanguage.nlu": {
        source: "iana",
        extensions: ["nlu"]
      },
      "application/vnd.nimn": {
        source: "iana"
      },
      "application/vnd.nintendo.nitro.rom": {
        source: "iana"
      },
      "application/vnd.nintendo.snes.rom": {
        source: "iana"
      },
      "application/vnd.nitf": {
        source: "iana",
        extensions: ["ntf", "nitf"]
      },
      "application/vnd.noblenet-directory": {
        source: "iana",
        extensions: ["nnd"]
      },
      "application/vnd.noblenet-sealer": {
        source: "iana",
        extensions: ["nns"]
      },
      "application/vnd.noblenet-web": {
        source: "iana",
        extensions: ["nnw"]
      },
      "application/vnd.nokia.catalogs": {
        source: "iana"
      },
      "application/vnd.nokia.conml+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.conml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.iptv.config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.isds-radio-presets": {
        source: "iana"
      },
      "application/vnd.nokia.landmark+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.landmark+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.landmarkcollection+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.n-gage.ac+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ac"]
      },
      "application/vnd.nokia.n-gage.data": {
        source: "iana",
        extensions: ["ngdat"]
      },
      "application/vnd.nokia.n-gage.symbian.install": {
        source: "iana",
        extensions: ["n-gage"]
      },
      "application/vnd.nokia.ncd": {
        source: "iana"
      },
      "application/vnd.nokia.pcd+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.pcd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.radio-preset": {
        source: "iana",
        extensions: ["rpst"]
      },
      "application/vnd.nokia.radio-presets": {
        source: "iana",
        extensions: ["rpss"]
      },
      "application/vnd.novadigm.edm": {
        source: "iana",
        extensions: ["edm"]
      },
      "application/vnd.novadigm.edx": {
        source: "iana",
        extensions: ["edx"]
      },
      "application/vnd.novadigm.ext": {
        source: "iana",
        extensions: ["ext"]
      },
      "application/vnd.ntt-local.content-share": {
        source: "iana"
      },
      "application/vnd.ntt-local.file-transfer": {
        source: "iana"
      },
      "application/vnd.ntt-local.ogw_remote-access": {
        source: "iana"
      },
      "application/vnd.ntt-local.sip-ta_remote": {
        source: "iana"
      },
      "application/vnd.ntt-local.sip-ta_tcp_stream": {
        source: "iana"
      },
      "application/vnd.oasis.opendocument.chart": {
        source: "iana",
        extensions: ["odc"]
      },
      "application/vnd.oasis.opendocument.chart-template": {
        source: "iana",
        extensions: ["otc"]
      },
      "application/vnd.oasis.opendocument.database": {
        source: "iana",
        extensions: ["odb"]
      },
      "application/vnd.oasis.opendocument.formula": {
        source: "iana",
        extensions: ["odf"]
      },
      "application/vnd.oasis.opendocument.formula-template": {
        source: "iana",
        extensions: ["odft"]
      },
      "application/vnd.oasis.opendocument.graphics": {
        source: "iana",
        compressible: false,
        extensions: ["odg"]
      },
      "application/vnd.oasis.opendocument.graphics-template": {
        source: "iana",
        extensions: ["otg"]
      },
      "application/vnd.oasis.opendocument.image": {
        source: "iana",
        extensions: ["odi"]
      },
      "application/vnd.oasis.opendocument.image-template": {
        source: "iana",
        extensions: ["oti"]
      },
      "application/vnd.oasis.opendocument.presentation": {
        source: "iana",
        compressible: false,
        extensions: ["odp"]
      },
      "application/vnd.oasis.opendocument.presentation-template": {
        source: "iana",
        extensions: ["otp"]
      },
      "application/vnd.oasis.opendocument.spreadsheet": {
        source: "iana",
        compressible: false,
        extensions: ["ods"]
      },
      "application/vnd.oasis.opendocument.spreadsheet-template": {
        source: "iana",
        extensions: ["ots"]
      },
      "application/vnd.oasis.opendocument.text": {
        source: "iana",
        compressible: false,
        extensions: ["odt"]
      },
      "application/vnd.oasis.opendocument.text-master": {
        source: "iana",
        extensions: ["odm"]
      },
      "application/vnd.oasis.opendocument.text-template": {
        source: "iana",
        extensions: ["ott"]
      },
      "application/vnd.oasis.opendocument.text-web": {
        source: "iana",
        extensions: ["oth"]
      },
      "application/vnd.obn": {
        source: "iana"
      },
      "application/vnd.ocf+cbor": {
        source: "iana"
      },
      "application/vnd.oci.image.manifest.v1+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oftn.l10n+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.contentaccessdownload+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.contentaccessstreaming+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.cspg-hexbinary": {
        source: "iana"
      },
      "application/vnd.oipf.dae.svg+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.dae.xhtml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.mippvcontrolmessage+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.pae.gem": {
        source: "iana"
      },
      "application/vnd.oipf.spdiscovery+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.spdlist+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.ueprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.userprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.olpc-sugar": {
        source: "iana",
        extensions: ["xo"]
      },
      "application/vnd.oma-scws-config": {
        source: "iana"
      },
      "application/vnd.oma-scws-http-request": {
        source: "iana"
      },
      "application/vnd.oma-scws-http-response": {
        source: "iana"
      },
      "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.drm-trigger+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.imd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.ltkm": {
        source: "iana"
      },
      "application/vnd.oma.bcast.notification+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.provisioningtrigger": {
        source: "iana"
      },
      "application/vnd.oma.bcast.sgboot": {
        source: "iana"
      },
      "application/vnd.oma.bcast.sgdd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.sgdu": {
        source: "iana"
      },
      "application/vnd.oma.bcast.simple-symbol-container": {
        source: "iana"
      },
      "application/vnd.oma.bcast.smartcard-trigger+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.sprov+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.stkm": {
        source: "iana"
      },
      "application/vnd.oma.cab-address-book+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-feature-handler+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-pcc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-subs-invite+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-user-prefs+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.dcd": {
        source: "iana"
      },
      "application/vnd.oma.dcdc": {
        source: "iana"
      },
      "application/vnd.oma.dd2+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dd2"]
      },
      "application/vnd.oma.drm.risd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.group-usage-list+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.lwm2m+cbor": {
        source: "iana"
      },
      "application/vnd.oma.lwm2m+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.lwm2m+tlv": {
        source: "iana"
      },
      "application/vnd.oma.pal+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.detailed-progress-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.final-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.groups+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.invocation-descriptor+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.optimized-progress-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.push": {
        source: "iana"
      },
      "application/vnd.oma.scidm.messages+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.xcap-directory+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.omads-email+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omads-file+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omads-folder+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omaloc-supl-init": {
        source: "iana"
      },
      "application/vnd.onepager": {
        source: "iana"
      },
      "application/vnd.onepagertamp": {
        source: "iana"
      },
      "application/vnd.onepagertamx": {
        source: "iana"
      },
      "application/vnd.onepagertat": {
        source: "iana"
      },
      "application/vnd.onepagertatp": {
        source: "iana"
      },
      "application/vnd.onepagertatx": {
        source: "iana"
      },
      "application/vnd.openblox.game+xml": {
        source: "iana",
        compressible: true,
        extensions: ["obgx"]
      },
      "application/vnd.openblox.game-binary": {
        source: "iana"
      },
      "application/vnd.openeye.oeb": {
        source: "iana"
      },
      "application/vnd.openofficeorg.extension": {
        source: "apache",
        extensions: ["oxt"]
      },
      "application/vnd.openstreetmap.data+xml": {
        source: "iana",
        compressible: true,
        extensions: ["osm"]
      },
      "application/vnd.opentimestamps.ots": {
        source: "iana"
      },
      "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawing+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
        source: "iana",
        compressible: false,
        extensions: ["pptx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slide": {
        source: "iana",
        extensions: ["sldx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
        source: "iana",
        extensions: ["ppsx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.template": {
        source: "iana",
        extensions: ["potx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
        source: "iana",
        compressible: false,
        extensions: ["xlsx"]
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
        source: "iana",
        extensions: ["xltx"]
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.theme+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.vmldrawing": {
        source: "iana"
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
        source: "iana",
        compressible: false,
        extensions: ["docx"]
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
        source: "iana",
        extensions: ["dotx"]
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.core-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.relationships+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oracle.resource+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.orange.indata": {
        source: "iana"
      },
      "application/vnd.osa.netdeploy": {
        source: "iana"
      },
      "application/vnd.osgeo.mapguide.package": {
        source: "iana",
        extensions: ["mgp"]
      },
      "application/vnd.osgi.bundle": {
        source: "iana"
      },
      "application/vnd.osgi.dp": {
        source: "iana",
        extensions: ["dp"]
      },
      "application/vnd.osgi.subsystem": {
        source: "iana",
        extensions: ["esa"]
      },
      "application/vnd.otps.ct-kip+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oxli.countgraph": {
        source: "iana"
      },
      "application/vnd.pagerduty+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.palm": {
        source: "iana",
        extensions: ["pdb", "pqa", "oprc"]
      },
      "application/vnd.panoply": {
        source: "iana"
      },
      "application/vnd.paos.xml": {
        source: "iana"
      },
      "application/vnd.patentdive": {
        source: "iana"
      },
      "application/vnd.patientecommsdoc": {
        source: "iana"
      },
      "application/vnd.pawaafile": {
        source: "iana",
        extensions: ["paw"]
      },
      "application/vnd.pcos": {
        source: "iana"
      },
      "application/vnd.pg.format": {
        source: "iana",
        extensions: ["str"]
      },
      "application/vnd.pg.osasli": {
        source: "iana",
        extensions: ["ei6"]
      },
      "application/vnd.piaccess.application-licence": {
        source: "iana"
      },
      "application/vnd.picsel": {
        source: "iana",
        extensions: ["efif"]
      },
      "application/vnd.pmi.widget": {
        source: "iana",
        extensions: ["wg"]
      },
      "application/vnd.poc.group-advertisement+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.pocketlearn": {
        source: "iana",
        extensions: ["plf"]
      },
      "application/vnd.powerbuilder6": {
        source: "iana",
        extensions: ["pbd"]
      },
      "application/vnd.powerbuilder6-s": {
        source: "iana"
      },
      "application/vnd.powerbuilder7": {
        source: "iana"
      },
      "application/vnd.powerbuilder7-s": {
        source: "iana"
      },
      "application/vnd.powerbuilder75": {
        source: "iana"
      },
      "application/vnd.powerbuilder75-s": {
        source: "iana"
      },
      "application/vnd.preminet": {
        source: "iana"
      },
      "application/vnd.previewsystems.box": {
        source: "iana",
        extensions: ["box"]
      },
      "application/vnd.proteus.magazine": {
        source: "iana",
        extensions: ["mgz"]
      },
      "application/vnd.psfs": {
        source: "iana"
      },
      "application/vnd.publishare-delta-tree": {
        source: "iana",
        extensions: ["qps"]
      },
      "application/vnd.pvi.ptid1": {
        source: "iana",
        extensions: ["ptid"]
      },
      "application/vnd.pwg-multiplexed": {
        source: "iana"
      },
      "application/vnd.pwg-xhtml-print+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.qualcomm.brew-app-res": {
        source: "iana"
      },
      "application/vnd.quarantainenet": {
        source: "iana"
      },
      "application/vnd.quark.quarkxpress": {
        source: "iana",
        extensions: ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"]
      },
      "application/vnd.quobject-quoxdocument": {
        source: "iana"
      },
      "application/vnd.radisys.moml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-conf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-conn+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-dialog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-stream+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-conf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-base+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-fax-detect+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-group+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-speech+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-transform+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.rainstor.data": {
        source: "iana"
      },
      "application/vnd.rapid": {
        source: "iana"
      },
      "application/vnd.rar": {
        source: "iana",
        extensions: ["rar"]
      },
      "application/vnd.realvnc.bed": {
        source: "iana",
        extensions: ["bed"]
      },
      "application/vnd.recordare.musicxml": {
        source: "iana",
        extensions: ["mxl"]
      },
      "application/vnd.recordare.musicxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["musicxml"]
      },
      "application/vnd.renlearn.rlprint": {
        source: "iana"
      },
      "application/vnd.resilient.logic": {
        source: "iana"
      },
      "application/vnd.restful+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.rig.cryptonote": {
        source: "iana",
        extensions: ["cryptonote"]
      },
      "application/vnd.rim.cod": {
        source: "apache",
        extensions: ["cod"]
      },
      "application/vnd.rn-realmedia": {
        source: "apache",
        extensions: ["rm"]
      },
      "application/vnd.rn-realmedia-vbr": {
        source: "apache",
        extensions: ["rmvb"]
      },
      "application/vnd.route66.link66+xml": {
        source: "iana",
        compressible: true,
        extensions: ["link66"]
      },
      "application/vnd.rs-274x": {
        source: "iana"
      },
      "application/vnd.ruckus.download": {
        source: "iana"
      },
      "application/vnd.s3sms": {
        source: "iana"
      },
      "application/vnd.sailingtracker.track": {
        source: "iana",
        extensions: ["st"]
      },
      "application/vnd.sar": {
        source: "iana"
      },
      "application/vnd.sbm.cid": {
        source: "iana"
      },
      "application/vnd.sbm.mid2": {
        source: "iana"
      },
      "application/vnd.scribus": {
        source: "iana"
      },
      "application/vnd.sealed.3df": {
        source: "iana"
      },
      "application/vnd.sealed.csf": {
        source: "iana"
      },
      "application/vnd.sealed.doc": {
        source: "iana"
      },
      "application/vnd.sealed.eml": {
        source: "iana"
      },
      "application/vnd.sealed.mht": {
        source: "iana"
      },
      "application/vnd.sealed.net": {
        source: "iana"
      },
      "application/vnd.sealed.ppt": {
        source: "iana"
      },
      "application/vnd.sealed.tiff": {
        source: "iana"
      },
      "application/vnd.sealed.xls": {
        source: "iana"
      },
      "application/vnd.sealedmedia.softseal.html": {
        source: "iana"
      },
      "application/vnd.sealedmedia.softseal.pdf": {
        source: "iana"
      },
      "application/vnd.seemail": {
        source: "iana",
        extensions: ["see"]
      },
      "application/vnd.seis+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.sema": {
        source: "iana",
        extensions: ["sema"]
      },
      "application/vnd.semd": {
        source: "iana",
        extensions: ["semd"]
      },
      "application/vnd.semf": {
        source: "iana",
        extensions: ["semf"]
      },
      "application/vnd.shade-save-file": {
        source: "iana"
      },
      "application/vnd.shana.informed.formdata": {
        source: "iana",
        extensions: ["ifm"]
      },
      "application/vnd.shana.informed.formtemplate": {
        source: "iana",
        extensions: ["itp"]
      },
      "application/vnd.shana.informed.interchange": {
        source: "iana",
        extensions: ["iif"]
      },
      "application/vnd.shana.informed.package": {
        source: "iana",
        extensions: ["ipk"]
      },
      "application/vnd.shootproof+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.shopkick+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.shp": {
        source: "iana"
      },
      "application/vnd.shx": {
        source: "iana"
      },
      "application/vnd.sigrok.session": {
        source: "iana"
      },
      "application/vnd.simtech-mindmapper": {
        source: "iana",
        extensions: ["twd", "twds"]
      },
      "application/vnd.siren+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.smaf": {
        source: "iana",
        extensions: ["mmf"]
      },
      "application/vnd.smart.notebook": {
        source: "iana"
      },
      "application/vnd.smart.teacher": {
        source: "iana",
        extensions: ["teacher"]
      },
      "application/vnd.snesdev-page-table": {
        source: "iana"
      },
      "application/vnd.software602.filler.form+xml": {
        source: "iana",
        compressible: true,
        extensions: ["fo"]
      },
      "application/vnd.software602.filler.form-xml-zip": {
        source: "iana"
      },
      "application/vnd.solent.sdkm+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sdkm", "sdkd"]
      },
      "application/vnd.spotfire.dxp": {
        source: "iana",
        extensions: ["dxp"]
      },
      "application/vnd.spotfire.sfs": {
        source: "iana",
        extensions: ["sfs"]
      },
      "application/vnd.sqlite3": {
        source: "iana"
      },
      "application/vnd.sss-cod": {
        source: "iana"
      },
      "application/vnd.sss-dtf": {
        source: "iana"
      },
      "application/vnd.sss-ntf": {
        source: "iana"
      },
      "application/vnd.stardivision.calc": {
        source: "apache",
        extensions: ["sdc"]
      },
      "application/vnd.stardivision.draw": {
        source: "apache",
        extensions: ["sda"]
      },
      "application/vnd.stardivision.impress": {
        source: "apache",
        extensions: ["sdd"]
      },
      "application/vnd.stardivision.math": {
        source: "apache",
        extensions: ["smf"]
      },
      "application/vnd.stardivision.writer": {
        source: "apache",
        extensions: ["sdw", "vor"]
      },
      "application/vnd.stardivision.writer-global": {
        source: "apache",
        extensions: ["sgl"]
      },
      "application/vnd.stepmania.package": {
        source: "iana",
        extensions: ["smzip"]
      },
      "application/vnd.stepmania.stepchart": {
        source: "iana",
        extensions: ["sm"]
      },
      "application/vnd.street-stream": {
        source: "iana"
      },
      "application/vnd.sun.wadl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wadl"]
      },
      "application/vnd.sun.xml.calc": {
        source: "apache",
        extensions: ["sxc"]
      },
      "application/vnd.sun.xml.calc.template": {
        source: "apache",
        extensions: ["stc"]
      },
      "application/vnd.sun.xml.draw": {
        source: "apache",
        extensions: ["sxd"]
      },
      "application/vnd.sun.xml.draw.template": {
        source: "apache",
        extensions: ["std"]
      },
      "application/vnd.sun.xml.impress": {
        source: "apache",
        extensions: ["sxi"]
      },
      "application/vnd.sun.xml.impress.template": {
        source: "apache",
        extensions: ["sti"]
      },
      "application/vnd.sun.xml.math": {
        source: "apache",
        extensions: ["sxm"]
      },
      "application/vnd.sun.xml.writer": {
        source: "apache",
        extensions: ["sxw"]
      },
      "application/vnd.sun.xml.writer.global": {
        source: "apache",
        extensions: ["sxg"]
      },
      "application/vnd.sun.xml.writer.template": {
        source: "apache",
        extensions: ["stw"]
      },
      "application/vnd.sus-calendar": {
        source: "iana",
        extensions: ["sus", "susp"]
      },
      "application/vnd.svd": {
        source: "iana",
        extensions: ["svd"]
      },
      "application/vnd.swiftview-ics": {
        source: "iana"
      },
      "application/vnd.sycle+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.syft+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.symbian.install": {
        source: "apache",
        extensions: ["sis", "sisx"]
      },
      "application/vnd.syncml+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["xsm"]
      },
      "application/vnd.syncml.dm+wbxml": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["bdm"]
      },
      "application/vnd.syncml.dm+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["xdm"]
      },
      "application/vnd.syncml.dm.notification": {
        source: "iana"
      },
      "application/vnd.syncml.dmddf+wbxml": {
        source: "iana"
      },
      "application/vnd.syncml.dmddf+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["ddf"]
      },
      "application/vnd.syncml.dmtnds+wbxml": {
        source: "iana"
      },
      "application/vnd.syncml.dmtnds+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.syncml.ds.notification": {
        source: "iana"
      },
      "application/vnd.tableschema+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tao.intent-module-archive": {
        source: "iana",
        extensions: ["tao"]
      },
      "application/vnd.tcpdump.pcap": {
        source: "iana",
        extensions: ["pcap", "cap", "dmp"]
      },
      "application/vnd.think-cell.ppttc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tmd.mediaflex.api+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tml": {
        source: "iana"
      },
      "application/vnd.tmobile-livetv": {
        source: "iana",
        extensions: ["tmo"]
      },
      "application/vnd.tri.onesource": {
        source: "iana"
      },
      "application/vnd.trid.tpt": {
        source: "iana",
        extensions: ["tpt"]
      },
      "application/vnd.triscape.mxs": {
        source: "iana",
        extensions: ["mxs"]
      },
      "application/vnd.trueapp": {
        source: "iana",
        extensions: ["tra"]
      },
      "application/vnd.truedoc": {
        source: "iana"
      },
      "application/vnd.ubisoft.webplayer": {
        source: "iana"
      },
      "application/vnd.ufdl": {
        source: "iana",
        extensions: ["ufd", "ufdl"]
      },
      "application/vnd.uiq.theme": {
        source: "iana",
        extensions: ["utz"]
      },
      "application/vnd.umajin": {
        source: "iana",
        extensions: ["umj"]
      },
      "application/vnd.unity": {
        source: "iana",
        extensions: ["unityweb"]
      },
      "application/vnd.uoml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["uoml"]
      },
      "application/vnd.uplanet.alert": {
        source: "iana"
      },
      "application/vnd.uplanet.alert-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.bearer-choice": {
        source: "iana"
      },
      "application/vnd.uplanet.bearer-choice-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.cacheop": {
        source: "iana"
      },
      "application/vnd.uplanet.cacheop-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.channel": {
        source: "iana"
      },
      "application/vnd.uplanet.channel-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.list": {
        source: "iana"
      },
      "application/vnd.uplanet.list-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.listcmd": {
        source: "iana"
      },
      "application/vnd.uplanet.listcmd-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.signal": {
        source: "iana"
      },
      "application/vnd.uri-map": {
        source: "iana"
      },
      "application/vnd.valve.source.material": {
        source: "iana"
      },
      "application/vnd.vcx": {
        source: "iana",
        extensions: ["vcx"]
      },
      "application/vnd.vd-study": {
        source: "iana"
      },
      "application/vnd.vectorworks": {
        source: "iana"
      },
      "application/vnd.vel+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.verimatrix.vcas": {
        source: "iana"
      },
      "application/vnd.veritone.aion+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.veryant.thin": {
        source: "iana"
      },
      "application/vnd.ves.encrypted": {
        source: "iana"
      },
      "application/vnd.vidsoft.vidconference": {
        source: "iana"
      },
      "application/vnd.visio": {
        source: "iana",
        extensions: ["vsd", "vst", "vss", "vsw"]
      },
      "application/vnd.visionary": {
        source: "iana",
        extensions: ["vis"]
      },
      "application/vnd.vividence.scriptfile": {
        source: "iana"
      },
      "application/vnd.vsf": {
        source: "iana",
        extensions: ["vsf"]
      },
      "application/vnd.wap.sic": {
        source: "iana"
      },
      "application/vnd.wap.slc": {
        source: "iana"
      },
      "application/vnd.wap.wbxml": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["wbxml"]
      },
      "application/vnd.wap.wmlc": {
        source: "iana",
        extensions: ["wmlc"]
      },
      "application/vnd.wap.wmlscriptc": {
        source: "iana",
        extensions: ["wmlsc"]
      },
      "application/vnd.webturbo": {
        source: "iana",
        extensions: ["wtb"]
      },
      "application/vnd.wfa.dpp": {
        source: "iana"
      },
      "application/vnd.wfa.p2p": {
        source: "iana"
      },
      "application/vnd.wfa.wsc": {
        source: "iana"
      },
      "application/vnd.windows.devicepairing": {
        source: "iana"
      },
      "application/vnd.wmc": {
        source: "iana"
      },
      "application/vnd.wmf.bootstrap": {
        source: "iana"
      },
      "application/vnd.wolfram.mathematica": {
        source: "iana"
      },
      "application/vnd.wolfram.mathematica.package": {
        source: "iana"
      },
      "application/vnd.wolfram.player": {
        source: "iana",
        extensions: ["nbp"]
      },
      "application/vnd.wordperfect": {
        source: "iana",
        extensions: ["wpd"]
      },
      "application/vnd.wqd": {
        source: "iana",
        extensions: ["wqd"]
      },
      "application/vnd.wrq-hp3000-labelled": {
        source: "iana"
      },
      "application/vnd.wt.stf": {
        source: "iana",
        extensions: ["stf"]
      },
      "application/vnd.wv.csp+wbxml": {
        source: "iana"
      },
      "application/vnd.wv.csp+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.wv.ssp+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xacml+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xara": {
        source: "iana",
        extensions: ["xar"]
      },
      "application/vnd.xfdl": {
        source: "iana",
        extensions: ["xfdl"]
      },
      "application/vnd.xfdl.webform": {
        source: "iana"
      },
      "application/vnd.xmi+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xmpie.cpkg": {
        source: "iana"
      },
      "application/vnd.xmpie.dpkg": {
        source: "iana"
      },
      "application/vnd.xmpie.plan": {
        source: "iana"
      },
      "application/vnd.xmpie.ppkg": {
        source: "iana"
      },
      "application/vnd.xmpie.xlim": {
        source: "iana"
      },
      "application/vnd.yamaha.hv-dic": {
        source: "iana",
        extensions: ["hvd"]
      },
      "application/vnd.yamaha.hv-script": {
        source: "iana",
        extensions: ["hvs"]
      },
      "application/vnd.yamaha.hv-voice": {
        source: "iana",
        extensions: ["hvp"]
      },
      "application/vnd.yamaha.openscoreformat": {
        source: "iana",
        extensions: ["osf"]
      },
      "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
        source: "iana",
        compressible: true,
        extensions: ["osfpvg"]
      },
      "application/vnd.yamaha.remote-setup": {
        source: "iana"
      },
      "application/vnd.yamaha.smaf-audio": {
        source: "iana",
        extensions: ["saf"]
      },
      "application/vnd.yamaha.smaf-phrase": {
        source: "iana",
        extensions: ["spf"]
      },
      "application/vnd.yamaha.through-ngn": {
        source: "iana"
      },
      "application/vnd.yamaha.tunnel-udpencap": {
        source: "iana"
      },
      "application/vnd.yaoweme": {
        source: "iana"
      },
      "application/vnd.yellowriver-custom-menu": {
        source: "iana",
        extensions: ["cmp"]
      },
      "application/vnd.youtube.yt": {
        source: "iana"
      },
      "application/vnd.zul": {
        source: "iana",
        extensions: ["zir", "zirz"]
      },
      "application/vnd.zzazz.deck+xml": {
        source: "iana",
        compressible: true,
        extensions: ["zaz"]
      },
      "application/voicexml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["vxml"]
      },
      "application/voucher-cms+json": {
        source: "iana",
        compressible: true
      },
      "application/vq-rtcpxr": {
        source: "iana"
      },
      "application/wasm": {
        source: "iana",
        compressible: true,
        extensions: ["wasm"]
      },
      "application/watcherinfo+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wif"]
      },
      "application/webpush-options+json": {
        source: "iana",
        compressible: true
      },
      "application/whoispp-query": {
        source: "iana"
      },
      "application/whoispp-response": {
        source: "iana"
      },
      "application/widget": {
        source: "iana",
        extensions: ["wgt"]
      },
      "application/winhlp": {
        source: "apache",
        extensions: ["hlp"]
      },
      "application/wita": {
        source: "iana"
      },
      "application/wordperfect5.1": {
        source: "iana"
      },
      "application/wsdl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wsdl"]
      },
      "application/wspolicy+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wspolicy"]
      },
      "application/x-7z-compressed": {
        source: "apache",
        compressible: false,
        extensions: ["7z"]
      },
      "application/x-abiword": {
        source: "apache",
        extensions: ["abw"]
      },
      "application/x-ace-compressed": {
        source: "apache",
        extensions: ["ace"]
      },
      "application/x-amf": {
        source: "apache"
      },
      "application/x-apple-diskimage": {
        source: "apache",
        extensions: ["dmg"]
      },
      "application/x-arj": {
        compressible: false,
        extensions: ["arj"]
      },
      "application/x-authorware-bin": {
        source: "apache",
        extensions: ["aab", "x32", "u32", "vox"]
      },
      "application/x-authorware-map": {
        source: "apache",
        extensions: ["aam"]
      },
      "application/x-authorware-seg": {
        source: "apache",
        extensions: ["aas"]
      },
      "application/x-bcpio": {
        source: "apache",
        extensions: ["bcpio"]
      },
      "application/x-bdoc": {
        compressible: false,
        extensions: ["bdoc"]
      },
      "application/x-bittorrent": {
        source: "apache",
        extensions: ["torrent"]
      },
      "application/x-blorb": {
        source: "apache",
        extensions: ["blb", "blorb"]
      },
      "application/x-bzip": {
        source: "apache",
        compressible: false,
        extensions: ["bz"]
      },
      "application/x-bzip2": {
        source: "apache",
        compressible: false,
        extensions: ["bz2", "boz"]
      },
      "application/x-cbr": {
        source: "apache",
        extensions: ["cbr", "cba", "cbt", "cbz", "cb7"]
      },
      "application/x-cdlink": {
        source: "apache",
        extensions: ["vcd"]
      },
      "application/x-cfs-compressed": {
        source: "apache",
        extensions: ["cfs"]
      },
      "application/x-chat": {
        source: "apache",
        extensions: ["chat"]
      },
      "application/x-chess-pgn": {
        source: "apache",
        extensions: ["pgn"]
      },
      "application/x-chrome-extension": {
        extensions: ["crx"]
      },
      "application/x-cocoa": {
        source: "nginx",
        extensions: ["cco"]
      },
      "application/x-compress": {
        source: "apache"
      },
      "application/x-conference": {
        source: "apache",
        extensions: ["nsc"]
      },
      "application/x-cpio": {
        source: "apache",
        extensions: ["cpio"]
      },
      "application/x-csh": {
        source: "apache",
        extensions: ["csh"]
      },
      "application/x-deb": {
        compressible: false
      },
      "application/x-debian-package": {
        source: "apache",
        extensions: ["deb", "udeb"]
      },
      "application/x-dgc-compressed": {
        source: "apache",
        extensions: ["dgc"]
      },
      "application/x-director": {
        source: "apache",
        extensions: ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"]
      },
      "application/x-doom": {
        source: "apache",
        extensions: ["wad"]
      },
      "application/x-dtbncx+xml": {
        source: "apache",
        compressible: true,
        extensions: ["ncx"]
      },
      "application/x-dtbook+xml": {
        source: "apache",
        compressible: true,
        extensions: ["dtb"]
      },
      "application/x-dtbresource+xml": {
        source: "apache",
        compressible: true,
        extensions: ["res"]
      },
      "application/x-dvi": {
        source: "apache",
        compressible: false,
        extensions: ["dvi"]
      },
      "application/x-envoy": {
        source: "apache",
        extensions: ["evy"]
      },
      "application/x-eva": {
        source: "apache",
        extensions: ["eva"]
      },
      "application/x-font-bdf": {
        source: "apache",
        extensions: ["bdf"]
      },
      "application/x-font-dos": {
        source: "apache"
      },
      "application/x-font-framemaker": {
        source: "apache"
      },
      "application/x-font-ghostscript": {
        source: "apache",
        extensions: ["gsf"]
      },
      "application/x-font-libgrx": {
        source: "apache"
      },
      "application/x-font-linux-psf": {
        source: "apache",
        extensions: ["psf"]
      },
      "application/x-font-pcf": {
        source: "apache",
        extensions: ["pcf"]
      },
      "application/x-font-snf": {
        source: "apache",
        extensions: ["snf"]
      },
      "application/x-font-speedo": {
        source: "apache"
      },
      "application/x-font-sunos-news": {
        source: "apache"
      },
      "application/x-font-type1": {
        source: "apache",
        extensions: ["pfa", "pfb", "pfm", "afm"]
      },
      "application/x-font-vfont": {
        source: "apache"
      },
      "application/x-freearc": {
        source: "apache",
        extensions: ["arc"]
      },
      "application/x-futuresplash": {
        source: "apache",
        extensions: ["spl"]
      },
      "application/x-gca-compressed": {
        source: "apache",
        extensions: ["gca"]
      },
      "application/x-glulx": {
        source: "apache",
        extensions: ["ulx"]
      },
      "application/x-gnumeric": {
        source: "apache",
        extensions: ["gnumeric"]
      },
      "application/x-gramps-xml": {
        source: "apache",
        extensions: ["gramps"]
      },
      "application/x-gtar": {
        source: "apache",
        extensions: ["gtar"]
      },
      "application/x-gzip": {
        source: "apache"
      },
      "application/x-hdf": {
        source: "apache",
        extensions: ["hdf"]
      },
      "application/x-httpd-php": {
        compressible: true,
        extensions: ["php"]
      },
      "application/x-install-instructions": {
        source: "apache",
        extensions: ["install"]
      },
      "application/x-iso9660-image": {
        source: "apache",
        extensions: ["iso"]
      },
      "application/x-iwork-keynote-sffkey": {
        extensions: ["key"]
      },
      "application/x-iwork-numbers-sffnumbers": {
        extensions: ["numbers"]
      },
      "application/x-iwork-pages-sffpages": {
        extensions: ["pages"]
      },
      "application/x-java-archive-diff": {
        source: "nginx",
        extensions: ["jardiff"]
      },
      "application/x-java-jnlp-file": {
        source: "apache",
        compressible: false,
        extensions: ["jnlp"]
      },
      "application/x-javascript": {
        compressible: true
      },
      "application/x-keepass2": {
        extensions: ["kdbx"]
      },
      "application/x-latex": {
        source: "apache",
        compressible: false,
        extensions: ["latex"]
      },
      "application/x-lua-bytecode": {
        extensions: ["luac"]
      },
      "application/x-lzh-compressed": {
        source: "apache",
        extensions: ["lzh", "lha"]
      },
      "application/x-makeself": {
        source: "nginx",
        extensions: ["run"]
      },
      "application/x-mie": {
        source: "apache",
        extensions: ["mie"]
      },
      "application/x-mobipocket-ebook": {
        source: "apache",
        extensions: ["prc", "mobi"]
      },
      "application/x-mpegurl": {
        compressible: false
      },
      "application/x-ms-application": {
        source: "apache",
        extensions: ["application"]
      },
      "application/x-ms-shortcut": {
        source: "apache",
        extensions: ["lnk"]
      },
      "application/x-ms-wmd": {
        source: "apache",
        extensions: ["wmd"]
      },
      "application/x-ms-wmz": {
        source: "apache",
        extensions: ["wmz"]
      },
      "application/x-ms-xbap": {
        source: "apache",
        extensions: ["xbap"]
      },
      "application/x-msaccess": {
        source: "apache",
        extensions: ["mdb"]
      },
      "application/x-msbinder": {
        source: "apache",
        extensions: ["obd"]
      },
      "application/x-mscardfile": {
        source: "apache",
        extensions: ["crd"]
      },
      "application/x-msclip": {
        source: "apache",
        extensions: ["clp"]
      },
      "application/x-msdos-program": {
        extensions: ["exe"]
      },
      "application/x-msdownload": {
        source: "apache",
        extensions: ["exe", "dll", "com", "bat", "msi"]
      },
      "application/x-msmediaview": {
        source: "apache",
        extensions: ["mvb", "m13", "m14"]
      },
      "application/x-msmetafile": {
        source: "apache",
        extensions: ["wmf", "wmz", "emf", "emz"]
      },
      "application/x-msmoney": {
        source: "apache",
        extensions: ["mny"]
      },
      "application/x-mspublisher": {
        source: "apache",
        extensions: ["pub"]
      },
      "application/x-msschedule": {
        source: "apache",
        extensions: ["scd"]
      },
      "application/x-msterminal": {
        source: "apache",
        extensions: ["trm"]
      },
      "application/x-mswrite": {
        source: "apache",
        extensions: ["wri"]
      },
      "application/x-netcdf": {
        source: "apache",
        extensions: ["nc", "cdf"]
      },
      "application/x-ns-proxy-autoconfig": {
        compressible: true,
        extensions: ["pac"]
      },
      "application/x-nzb": {
        source: "apache",
        extensions: ["nzb"]
      },
      "application/x-perl": {
        source: "nginx",
        extensions: ["pl", "pm"]
      },
      "application/x-pilot": {
        source: "nginx",
        extensions: ["prc", "pdb"]
      },
      "application/x-pkcs12": {
        source: "apache",
        compressible: false,
        extensions: ["p12", "pfx"]
      },
      "application/x-pkcs7-certificates": {
        source: "apache",
        extensions: ["p7b", "spc"]
      },
      "application/x-pkcs7-certreqresp": {
        source: "apache",
        extensions: ["p7r"]
      },
      "application/x-pki-message": {
        source: "iana"
      },
      "application/x-rar-compressed": {
        source: "apache",
        compressible: false,
        extensions: ["rar"]
      },
      "application/x-redhat-package-manager": {
        source: "nginx",
        extensions: ["rpm"]
      },
      "application/x-research-info-systems": {
        source: "apache",
        extensions: ["ris"]
      },
      "application/x-sea": {
        source: "nginx",
        extensions: ["sea"]
      },
      "application/x-sh": {
        source: "apache",
        compressible: true,
        extensions: ["sh"]
      },
      "application/x-shar": {
        source: "apache",
        extensions: ["shar"]
      },
      "application/x-shockwave-flash": {
        source: "apache",
        compressible: false,
        extensions: ["swf"]
      },
      "application/x-silverlight-app": {
        source: "apache",
        extensions: ["xap"]
      },
      "application/x-sql": {
        source: "apache",
        extensions: ["sql"]
      },
      "application/x-stuffit": {
        source: "apache",
        compressible: false,
        extensions: ["sit"]
      },
      "application/x-stuffitx": {
        source: "apache",
        extensions: ["sitx"]
      },
      "application/x-subrip": {
        source: "apache",
        extensions: ["srt"]
      },
      "application/x-sv4cpio": {
        source: "apache",
        extensions: ["sv4cpio"]
      },
      "application/x-sv4crc": {
        source: "apache",
        extensions: ["sv4crc"]
      },
      "application/x-t3vm-image": {
        source: "apache",
        extensions: ["t3"]
      },
      "application/x-tads": {
        source: "apache",
        extensions: ["gam"]
      },
      "application/x-tar": {
        source: "apache",
        compressible: true,
        extensions: ["tar"]
      },
      "application/x-tcl": {
        source: "apache",
        extensions: ["tcl", "tk"]
      },
      "application/x-tex": {
        source: "apache",
        extensions: ["tex"]
      },
      "application/x-tex-tfm": {
        source: "apache",
        extensions: ["tfm"]
      },
      "application/x-texinfo": {
        source: "apache",
        extensions: ["texinfo", "texi"]
      },
      "application/x-tgif": {
        source: "apache",
        extensions: ["obj"]
      },
      "application/x-ustar": {
        source: "apache",
        extensions: ["ustar"]
      },
      "application/x-virtualbox-hdd": {
        compressible: true,
        extensions: ["hdd"]
      },
      "application/x-virtualbox-ova": {
        compressible: true,
        extensions: ["ova"]
      },
      "application/x-virtualbox-ovf": {
        compressible: true,
        extensions: ["ovf"]
      },
      "application/x-virtualbox-vbox": {
        compressible: true,
        extensions: ["vbox"]
      },
      "application/x-virtualbox-vbox-extpack": {
        compressible: false,
        extensions: ["vbox-extpack"]
      },
      "application/x-virtualbox-vdi": {
        compressible: true,
        extensions: ["vdi"]
      },
      "application/x-virtualbox-vhd": {
        compressible: true,
        extensions: ["vhd"]
      },
      "application/x-virtualbox-vmdk": {
        compressible: true,
        extensions: ["vmdk"]
      },
      "application/x-wais-source": {
        source: "apache",
        extensions: ["src"]
      },
      "application/x-web-app-manifest+json": {
        compressible: true,
        extensions: ["webapp"]
      },
      "application/x-www-form-urlencoded": {
        source: "iana",
        compressible: true
      },
      "application/x-x509-ca-cert": {
        source: "iana",
        extensions: ["der", "crt", "pem"]
      },
      "application/x-x509-ca-ra-cert": {
        source: "iana"
      },
      "application/x-x509-next-ca-cert": {
        source: "iana"
      },
      "application/x-xfig": {
        source: "apache",
        extensions: ["fig"]
      },
      "application/x-xliff+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xlf"]
      },
      "application/x-xpinstall": {
        source: "apache",
        compressible: false,
        extensions: ["xpi"]
      },
      "application/x-xz": {
        source: "apache",
        extensions: ["xz"]
      },
      "application/x-zmachine": {
        source: "apache",
        extensions: ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"]
      },
      "application/x400-bp": {
        source: "iana"
      },
      "application/xacml+xml": {
        source: "iana",
        compressible: true
      },
      "application/xaml+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xaml"]
      },
      "application/xcap-att+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xav"]
      },
      "application/xcap-caps+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xca"]
      },
      "application/xcap-diff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdf"]
      },
      "application/xcap-el+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xel"]
      },
      "application/xcap-error+xml": {
        source: "iana",
        compressible: true
      },
      "application/xcap-ns+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xns"]
      },
      "application/xcon-conference-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/xcon-conference-info-diff+xml": {
        source: "iana",
        compressible: true
      },
      "application/xenc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xenc"]
      },
      "application/xhtml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xhtml", "xht"]
      },
      "application/xhtml-voice+xml": {
        source: "apache",
        compressible: true
      },
      "application/xliff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xlf"]
      },
      "application/xml": {
        source: "iana",
        compressible: true,
        extensions: ["xml", "xsl", "xsd", "rng"]
      },
      "application/xml-dtd": {
        source: "iana",
        compressible: true,
        extensions: ["dtd"]
      },
      "application/xml-external-parsed-entity": {
        source: "iana"
      },
      "application/xml-patch+xml": {
        source: "iana",
        compressible: true
      },
      "application/xmpp+xml": {
        source: "iana",
        compressible: true
      },
      "application/xop+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xop"]
      },
      "application/xproc+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xpl"]
      },
      "application/xslt+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xsl", "xslt"]
      },
      "application/xspf+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xspf"]
      },
      "application/xv+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mxml", "xhvml", "xvml", "xvm"]
      },
      "application/yang": {
        source: "iana",
        extensions: ["yang"]
      },
      "application/yang-data+json": {
        source: "iana",
        compressible: true
      },
      "application/yang-data+xml": {
        source: "iana",
        compressible: true
      },
      "application/yang-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/yang-patch+xml": {
        source: "iana",
        compressible: true
      },
      "application/yin+xml": {
        source: "iana",
        compressible: true,
        extensions: ["yin"]
      },
      "application/zip": {
        source: "iana",
        compressible: false,
        extensions: ["zip"]
      },
      "application/zlib": {
        source: "iana"
      },
      "application/zstd": {
        source: "iana"
      },
      "audio/1d-interleaved-parityfec": {
        source: "iana"
      },
      "audio/32kadpcm": {
        source: "iana"
      },
      "audio/3gpp": {
        source: "iana",
        compressible: false,
        extensions: ["3gpp"]
      },
      "audio/3gpp2": {
        source: "iana"
      },
      "audio/aac": {
        source: "iana"
      },
      "audio/ac3": {
        source: "iana"
      },
      "audio/adpcm": {
        source: "apache",
        extensions: ["adp"]
      },
      "audio/amr": {
        source: "iana",
        extensions: ["amr"]
      },
      "audio/amr-wb": {
        source: "iana"
      },
      "audio/amr-wb+": {
        source: "iana"
      },
      "audio/aptx": {
        source: "iana"
      },
      "audio/asc": {
        source: "iana"
      },
      "audio/atrac-advanced-lossless": {
        source: "iana"
      },
      "audio/atrac-x": {
        source: "iana"
      },
      "audio/atrac3": {
        source: "iana"
      },
      "audio/basic": {
        source: "iana",
        compressible: false,
        extensions: ["au", "snd"]
      },
      "audio/bv16": {
        source: "iana"
      },
      "audio/bv32": {
        source: "iana"
      },
      "audio/clearmode": {
        source: "iana"
      },
      "audio/cn": {
        source: "iana"
      },
      "audio/dat12": {
        source: "iana"
      },
      "audio/dls": {
        source: "iana"
      },
      "audio/dsr-es201108": {
        source: "iana"
      },
      "audio/dsr-es202050": {
        source: "iana"
      },
      "audio/dsr-es202211": {
        source: "iana"
      },
      "audio/dsr-es202212": {
        source: "iana"
      },
      "audio/dv": {
        source: "iana"
      },
      "audio/dvi4": {
        source: "iana"
      },
      "audio/eac3": {
        source: "iana"
      },
      "audio/encaprtp": {
        source: "iana"
      },
      "audio/evrc": {
        source: "iana"
      },
      "audio/evrc-qcp": {
        source: "iana"
      },
      "audio/evrc0": {
        source: "iana"
      },
      "audio/evrc1": {
        source: "iana"
      },
      "audio/evrcb": {
        source: "iana"
      },
      "audio/evrcb0": {
        source: "iana"
      },
      "audio/evrcb1": {
        source: "iana"
      },
      "audio/evrcnw": {
        source: "iana"
      },
      "audio/evrcnw0": {
        source: "iana"
      },
      "audio/evrcnw1": {
        source: "iana"
      },
      "audio/evrcwb": {
        source: "iana"
      },
      "audio/evrcwb0": {
        source: "iana"
      },
      "audio/evrcwb1": {
        source: "iana"
      },
      "audio/evs": {
        source: "iana"
      },
      "audio/flexfec": {
        source: "iana"
      },
      "audio/fwdred": {
        source: "iana"
      },
      "audio/g711-0": {
        source: "iana"
      },
      "audio/g719": {
        source: "iana"
      },
      "audio/g722": {
        source: "iana"
      },
      "audio/g7221": {
        source: "iana"
      },
      "audio/g723": {
        source: "iana"
      },
      "audio/g726-16": {
        source: "iana"
      },
      "audio/g726-24": {
        source: "iana"
      },
      "audio/g726-32": {
        source: "iana"
      },
      "audio/g726-40": {
        source: "iana"
      },
      "audio/g728": {
        source: "iana"
      },
      "audio/g729": {
        source: "iana"
      },
      "audio/g7291": {
        source: "iana"
      },
      "audio/g729d": {
        source: "iana"
      },
      "audio/g729e": {
        source: "iana"
      },
      "audio/gsm": {
        source: "iana"
      },
      "audio/gsm-efr": {
        source: "iana"
      },
      "audio/gsm-hr-08": {
        source: "iana"
      },
      "audio/ilbc": {
        source: "iana"
      },
      "audio/ip-mr_v2.5": {
        source: "iana"
      },
      "audio/isac": {
        source: "apache"
      },
      "audio/l16": {
        source: "iana"
      },
      "audio/l20": {
        source: "iana"
      },
      "audio/l24": {
        source: "iana",
        compressible: false
      },
      "audio/l8": {
        source: "iana"
      },
      "audio/lpc": {
        source: "iana"
      },
      "audio/melp": {
        source: "iana"
      },
      "audio/melp1200": {
        source: "iana"
      },
      "audio/melp2400": {
        source: "iana"
      },
      "audio/melp600": {
        source: "iana"
      },
      "audio/mhas": {
        source: "iana"
      },
      "audio/midi": {
        source: "apache",
        extensions: ["mid", "midi", "kar", "rmi"]
      },
      "audio/mobile-xmf": {
        source: "iana",
        extensions: ["mxmf"]
      },
      "audio/mp3": {
        compressible: false,
        extensions: ["mp3"]
      },
      "audio/mp4": {
        source: "iana",
        compressible: false,
        extensions: ["m4a", "mp4a"]
      },
      "audio/mp4a-latm": {
        source: "iana"
      },
      "audio/mpa": {
        source: "iana"
      },
      "audio/mpa-robust": {
        source: "iana"
      },
      "audio/mpeg": {
        source: "iana",
        compressible: false,
        extensions: ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"]
      },
      "audio/mpeg4-generic": {
        source: "iana"
      },
      "audio/musepack": {
        source: "apache"
      },
      "audio/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["oga", "ogg", "spx", "opus"]
      },
      "audio/opus": {
        source: "iana"
      },
      "audio/parityfec": {
        source: "iana"
      },
      "audio/pcma": {
        source: "iana"
      },
      "audio/pcma-wb": {
        source: "iana"
      },
      "audio/pcmu": {
        source: "iana"
      },
      "audio/pcmu-wb": {
        source: "iana"
      },
      "audio/prs.sid": {
        source: "iana"
      },
      "audio/qcelp": {
        source: "iana"
      },
      "audio/raptorfec": {
        source: "iana"
      },
      "audio/red": {
        source: "iana"
      },
      "audio/rtp-enc-aescm128": {
        source: "iana"
      },
      "audio/rtp-midi": {
        source: "iana"
      },
      "audio/rtploopback": {
        source: "iana"
      },
      "audio/rtx": {
        source: "iana"
      },
      "audio/s3m": {
        source: "apache",
        extensions: ["s3m"]
      },
      "audio/scip": {
        source: "iana"
      },
      "audio/silk": {
        source: "apache",
        extensions: ["sil"]
      },
      "audio/smv": {
        source: "iana"
      },
      "audio/smv-qcp": {
        source: "iana"
      },
      "audio/smv0": {
        source: "iana"
      },
      "audio/sofa": {
        source: "iana"
      },
      "audio/sp-midi": {
        source: "iana"
      },
      "audio/speex": {
        source: "iana"
      },
      "audio/t140c": {
        source: "iana"
      },
      "audio/t38": {
        source: "iana"
      },
      "audio/telephone-event": {
        source: "iana"
      },
      "audio/tetra_acelp": {
        source: "iana"
      },
      "audio/tetra_acelp_bb": {
        source: "iana"
      },
      "audio/tone": {
        source: "iana"
      },
      "audio/tsvcis": {
        source: "iana"
      },
      "audio/uemclip": {
        source: "iana"
      },
      "audio/ulpfec": {
        source: "iana"
      },
      "audio/usac": {
        source: "iana"
      },
      "audio/vdvi": {
        source: "iana"
      },
      "audio/vmr-wb": {
        source: "iana"
      },
      "audio/vnd.3gpp.iufp": {
        source: "iana"
      },
      "audio/vnd.4sb": {
        source: "iana"
      },
      "audio/vnd.audiokoz": {
        source: "iana"
      },
      "audio/vnd.celp": {
        source: "iana"
      },
      "audio/vnd.cisco.nse": {
        source: "iana"
      },
      "audio/vnd.cmles.radio-events": {
        source: "iana"
      },
      "audio/vnd.cns.anp1": {
        source: "iana"
      },
      "audio/vnd.cns.inf1": {
        source: "iana"
      },
      "audio/vnd.dece.audio": {
        source: "iana",
        extensions: ["uva", "uvva"]
      },
      "audio/vnd.digital-winds": {
        source: "iana",
        extensions: ["eol"]
      },
      "audio/vnd.dlna.adts": {
        source: "iana"
      },
      "audio/vnd.dolby.heaac.1": {
        source: "iana"
      },
      "audio/vnd.dolby.heaac.2": {
        source: "iana"
      },
      "audio/vnd.dolby.mlp": {
        source: "iana"
      },
      "audio/vnd.dolby.mps": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2x": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2z": {
        source: "iana"
      },
      "audio/vnd.dolby.pulse.1": {
        source: "iana"
      },
      "audio/vnd.dra": {
        source: "iana",
        extensions: ["dra"]
      },
      "audio/vnd.dts": {
        source: "iana",
        extensions: ["dts"]
      },
      "audio/vnd.dts.hd": {
        source: "iana",
        extensions: ["dtshd"]
      },
      "audio/vnd.dts.uhd": {
        source: "iana"
      },
      "audio/vnd.dvb.file": {
        source: "iana"
      },
      "audio/vnd.everad.plj": {
        source: "iana"
      },
      "audio/vnd.hns.audio": {
        source: "iana"
      },
      "audio/vnd.lucent.voice": {
        source: "iana",
        extensions: ["lvp"]
      },
      "audio/vnd.ms-playready.media.pya": {
        source: "iana",
        extensions: ["pya"]
      },
      "audio/vnd.nokia.mobile-xmf": {
        source: "iana"
      },
      "audio/vnd.nortel.vbk": {
        source: "iana"
      },
      "audio/vnd.nuera.ecelp4800": {
        source: "iana",
        extensions: ["ecelp4800"]
      },
      "audio/vnd.nuera.ecelp7470": {
        source: "iana",
        extensions: ["ecelp7470"]
      },
      "audio/vnd.nuera.ecelp9600": {
        source: "iana",
        extensions: ["ecelp9600"]
      },
      "audio/vnd.octel.sbc": {
        source: "iana"
      },
      "audio/vnd.presonus.multitrack": {
        source: "iana"
      },
      "audio/vnd.qcelp": {
        source: "iana"
      },
      "audio/vnd.rhetorex.32kadpcm": {
        source: "iana"
      },
      "audio/vnd.rip": {
        source: "iana",
        extensions: ["rip"]
      },
      "audio/vnd.rn-realaudio": {
        compressible: false
      },
      "audio/vnd.sealedmedia.softseal.mpeg": {
        source: "iana"
      },
      "audio/vnd.vmx.cvsd": {
        source: "iana"
      },
      "audio/vnd.wave": {
        compressible: false
      },
      "audio/vorbis": {
        source: "iana",
        compressible: false
      },
      "audio/vorbis-config": {
        source: "iana"
      },
      "audio/wav": {
        compressible: false,
        extensions: ["wav"]
      },
      "audio/wave": {
        compressible: false,
        extensions: ["wav"]
      },
      "audio/webm": {
        source: "apache",
        compressible: false,
        extensions: ["weba"]
      },
      "audio/x-aac": {
        source: "apache",
        compressible: false,
        extensions: ["aac"]
      },
      "audio/x-aiff": {
        source: "apache",
        extensions: ["aif", "aiff", "aifc"]
      },
      "audio/x-caf": {
        source: "apache",
        compressible: false,
        extensions: ["caf"]
      },
      "audio/x-flac": {
        source: "apache",
        extensions: ["flac"]
      },
      "audio/x-m4a": {
        source: "nginx",
        extensions: ["m4a"]
      },
      "audio/x-matroska": {
        source: "apache",
        extensions: ["mka"]
      },
      "audio/x-mpegurl": {
        source: "apache",
        extensions: ["m3u"]
      },
      "audio/x-ms-wax": {
        source: "apache",
        extensions: ["wax"]
      },
      "audio/x-ms-wma": {
        source: "apache",
        extensions: ["wma"]
      },
      "audio/x-pn-realaudio": {
        source: "apache",
        extensions: ["ram", "ra"]
      },
      "audio/x-pn-realaudio-plugin": {
        source: "apache",
        extensions: ["rmp"]
      },
      "audio/x-realaudio": {
        source: "nginx",
        extensions: ["ra"]
      },
      "audio/x-tta": {
        source: "apache"
      },
      "audio/x-wav": {
        source: "apache",
        extensions: ["wav"]
      },
      "audio/xm": {
        source: "apache",
        extensions: ["xm"]
      },
      "chemical/x-cdx": {
        source: "apache",
        extensions: ["cdx"]
      },
      "chemical/x-cif": {
        source: "apache",
        extensions: ["cif"]
      },
      "chemical/x-cmdf": {
        source: "apache",
        extensions: ["cmdf"]
      },
      "chemical/x-cml": {
        source: "apache",
        extensions: ["cml"]
      },
      "chemical/x-csml": {
        source: "apache",
        extensions: ["csml"]
      },
      "chemical/x-pdb": {
        source: "apache"
      },
      "chemical/x-xyz": {
        source: "apache",
        extensions: ["xyz"]
      },
      "font/collection": {
        source: "iana",
        extensions: ["ttc"]
      },
      "font/otf": {
        source: "iana",
        compressible: true,
        extensions: ["otf"]
      },
      "font/sfnt": {
        source: "iana"
      },
      "font/ttf": {
        source: "iana",
        compressible: true,
        extensions: ["ttf"]
      },
      "font/woff": {
        source: "iana",
        extensions: ["woff"]
      },
      "font/woff2": {
        source: "iana",
        extensions: ["woff2"]
      },
      "image/aces": {
        source: "iana",
        extensions: ["exr"]
      },
      "image/apng": {
        compressible: false,
        extensions: ["apng"]
      },
      "image/avci": {
        source: "iana",
        extensions: ["avci"]
      },
      "image/avcs": {
        source: "iana",
        extensions: ["avcs"]
      },
      "image/avif": {
        source: "iana",
        compressible: false,
        extensions: ["avif"]
      },
      "image/bmp": {
        source: "iana",
        compressible: true,
        extensions: ["bmp"]
      },
      "image/cgm": {
        source: "iana",
        extensions: ["cgm"]
      },
      "image/dicom-rle": {
        source: "iana",
        extensions: ["drle"]
      },
      "image/emf": {
        source: "iana",
        extensions: ["emf"]
      },
      "image/fits": {
        source: "iana",
        extensions: ["fits"]
      },
      "image/g3fax": {
        source: "iana",
        extensions: ["g3"]
      },
      "image/gif": {
        source: "iana",
        compressible: false,
        extensions: ["gif"]
      },
      "image/heic": {
        source: "iana",
        extensions: ["heic"]
      },
      "image/heic-sequence": {
        source: "iana",
        extensions: ["heics"]
      },
      "image/heif": {
        source: "iana",
        extensions: ["heif"]
      },
      "image/heif-sequence": {
        source: "iana",
        extensions: ["heifs"]
      },
      "image/hej2k": {
        source: "iana",
        extensions: ["hej2"]
      },
      "image/hsj2": {
        source: "iana",
        extensions: ["hsj2"]
      },
      "image/ief": {
        source: "iana",
        extensions: ["ief"]
      },
      "image/jls": {
        source: "iana",
        extensions: ["jls"]
      },
      "image/jp2": {
        source: "iana",
        compressible: false,
        extensions: ["jp2", "jpg2"]
      },
      "image/jpeg": {
        source: "iana",
        compressible: false,
        extensions: ["jpeg", "jpg", "jpe"]
      },
      "image/jph": {
        source: "iana",
        extensions: ["jph"]
      },
      "image/jphc": {
        source: "iana",
        extensions: ["jhc"]
      },
      "image/jpm": {
        source: "iana",
        compressible: false,
        extensions: ["jpm"]
      },
      "image/jpx": {
        source: "iana",
        compressible: false,
        extensions: ["jpx", "jpf"]
      },
      "image/jxr": {
        source: "iana",
        extensions: ["jxr"]
      },
      "image/jxra": {
        source: "iana",
        extensions: ["jxra"]
      },
      "image/jxrs": {
        source: "iana",
        extensions: ["jxrs"]
      },
      "image/jxs": {
        source: "iana",
        extensions: ["jxs"]
      },
      "image/jxsc": {
        source: "iana",
        extensions: ["jxsc"]
      },
      "image/jxsi": {
        source: "iana",
        extensions: ["jxsi"]
      },
      "image/jxss": {
        source: "iana",
        extensions: ["jxss"]
      },
      "image/ktx": {
        source: "iana",
        extensions: ["ktx"]
      },
      "image/ktx2": {
        source: "iana",
        extensions: ["ktx2"]
      },
      "image/naplps": {
        source: "iana"
      },
      "image/pjpeg": {
        compressible: false
      },
      "image/png": {
        source: "iana",
        compressible: false,
        extensions: ["png"]
      },
      "image/prs.btif": {
        source: "iana",
        extensions: ["btif"]
      },
      "image/prs.pti": {
        source: "iana",
        extensions: ["pti"]
      },
      "image/pwg-raster": {
        source: "iana"
      },
      "image/sgi": {
        source: "apache",
        extensions: ["sgi"]
      },
      "image/svg+xml": {
        source: "iana",
        compressible: true,
        extensions: ["svg", "svgz"]
      },
      "image/t38": {
        source: "iana",
        extensions: ["t38"]
      },
      "image/tiff": {
        source: "iana",
        compressible: false,
        extensions: ["tif", "tiff"]
      },
      "image/tiff-fx": {
        source: "iana",
        extensions: ["tfx"]
      },
      "image/vnd.adobe.photoshop": {
        source: "iana",
        compressible: true,
        extensions: ["psd"]
      },
      "image/vnd.airzip.accelerator.azv": {
        source: "iana",
        extensions: ["azv"]
      },
      "image/vnd.cns.inf2": {
        source: "iana"
      },
      "image/vnd.dece.graphic": {
        source: "iana",
        extensions: ["uvi", "uvvi", "uvg", "uvvg"]
      },
      "image/vnd.djvu": {
        source: "iana",
        extensions: ["djvu", "djv"]
      },
      "image/vnd.dvb.subtitle": {
        source: "iana",
        extensions: ["sub"]
      },
      "image/vnd.dwg": {
        source: "iana",
        extensions: ["dwg"]
      },
      "image/vnd.dxf": {
        source: "iana",
        extensions: ["dxf"]
      },
      "image/vnd.fastbidsheet": {
        source: "iana",
        extensions: ["fbs"]
      },
      "image/vnd.fpx": {
        source: "iana",
        extensions: ["fpx"]
      },
      "image/vnd.fst": {
        source: "iana",
        extensions: ["fst"]
      },
      "image/vnd.fujixerox.edmics-mmr": {
        source: "iana",
        extensions: ["mmr"]
      },
      "image/vnd.fujixerox.edmics-rlc": {
        source: "iana",
        extensions: ["rlc"]
      },
      "image/vnd.globalgraphics.pgb": {
        source: "iana"
      },
      "image/vnd.microsoft.icon": {
        source: "iana",
        compressible: true,
        extensions: ["ico"]
      },
      "image/vnd.mix": {
        source: "iana"
      },
      "image/vnd.mozilla.apng": {
        source: "iana"
      },
      "image/vnd.ms-dds": {
        compressible: true,
        extensions: ["dds"]
      },
      "image/vnd.ms-modi": {
        source: "iana",
        extensions: ["mdi"]
      },
      "image/vnd.ms-photo": {
        source: "apache",
        extensions: ["wdp"]
      },
      "image/vnd.net-fpx": {
        source: "iana",
        extensions: ["npx"]
      },
      "image/vnd.pco.b16": {
        source: "iana",
        extensions: ["b16"]
      },
      "image/vnd.radiance": {
        source: "iana"
      },
      "image/vnd.sealed.png": {
        source: "iana"
      },
      "image/vnd.sealedmedia.softseal.gif": {
        source: "iana"
      },
      "image/vnd.sealedmedia.softseal.jpg": {
        source: "iana"
      },
      "image/vnd.svf": {
        source: "iana"
      },
      "image/vnd.tencent.tap": {
        source: "iana",
        extensions: ["tap"]
      },
      "image/vnd.valve.source.texture": {
        source: "iana",
        extensions: ["vtf"]
      },
      "image/vnd.wap.wbmp": {
        source: "iana",
        extensions: ["wbmp"]
      },
      "image/vnd.xiff": {
        source: "iana",
        extensions: ["xif"]
      },
      "image/vnd.zbrush.pcx": {
        source: "iana",
        extensions: ["pcx"]
      },
      "image/webp": {
        source: "apache",
        extensions: ["webp"]
      },
      "image/wmf": {
        source: "iana",
        extensions: ["wmf"]
      },
      "image/x-3ds": {
        source: "apache",
        extensions: ["3ds"]
      },
      "image/x-cmu-raster": {
        source: "apache",
        extensions: ["ras"]
      },
      "image/x-cmx": {
        source: "apache",
        extensions: ["cmx"]
      },
      "image/x-freehand": {
        source: "apache",
        extensions: ["fh", "fhc", "fh4", "fh5", "fh7"]
      },
      "image/x-icon": {
        source: "apache",
        compressible: true,
        extensions: ["ico"]
      },
      "image/x-jng": {
        source: "nginx",
        extensions: ["jng"]
      },
      "image/x-mrsid-image": {
        source: "apache",
        extensions: ["sid"]
      },
      "image/x-ms-bmp": {
        source: "nginx",
        compressible: true,
        extensions: ["bmp"]
      },
      "image/x-pcx": {
        source: "apache",
        extensions: ["pcx"]
      },
      "image/x-pict": {
        source: "apache",
        extensions: ["pic", "pct"]
      },
      "image/x-portable-anymap": {
        source: "apache",
        extensions: ["pnm"]
      },
      "image/x-portable-bitmap": {
        source: "apache",
        extensions: ["pbm"]
      },
      "image/x-portable-graymap": {
        source: "apache",
        extensions: ["pgm"]
      },
      "image/x-portable-pixmap": {
        source: "apache",
        extensions: ["ppm"]
      },
      "image/x-rgb": {
        source: "apache",
        extensions: ["rgb"]
      },
      "image/x-tga": {
        source: "apache",
        extensions: ["tga"]
      },
      "image/x-xbitmap": {
        source: "apache",
        extensions: ["xbm"]
      },
      "image/x-xcf": {
        compressible: false
      },
      "image/x-xpixmap": {
        source: "apache",
        extensions: ["xpm"]
      },
      "image/x-xwindowdump": {
        source: "apache",
        extensions: ["xwd"]
      },
      "message/cpim": {
        source: "iana"
      },
      "message/delivery-status": {
        source: "iana"
      },
      "message/disposition-notification": {
        source: "iana",
        extensions: [
          "disposition-notification"
        ]
      },
      "message/external-body": {
        source: "iana"
      },
      "message/feedback-report": {
        source: "iana"
      },
      "message/global": {
        source: "iana",
        extensions: ["u8msg"]
      },
      "message/global-delivery-status": {
        source: "iana",
        extensions: ["u8dsn"]
      },
      "message/global-disposition-notification": {
        source: "iana",
        extensions: ["u8mdn"]
      },
      "message/global-headers": {
        source: "iana",
        extensions: ["u8hdr"]
      },
      "message/http": {
        source: "iana",
        compressible: false
      },
      "message/imdn+xml": {
        source: "iana",
        compressible: true
      },
      "message/news": {
        source: "iana"
      },
      "message/partial": {
        source: "iana",
        compressible: false
      },
      "message/rfc822": {
        source: "iana",
        compressible: true,
        extensions: ["eml", "mime"]
      },
      "message/s-http": {
        source: "iana"
      },
      "message/sip": {
        source: "iana"
      },
      "message/sipfrag": {
        source: "iana"
      },
      "message/tracking-status": {
        source: "iana"
      },
      "message/vnd.si.simp": {
        source: "iana"
      },
      "message/vnd.wfa.wsc": {
        source: "iana",
        extensions: ["wsc"]
      },
      "model/3mf": {
        source: "iana",
        extensions: ["3mf"]
      },
      "model/e57": {
        source: "iana"
      },
      "model/gltf+json": {
        source: "iana",
        compressible: true,
        extensions: ["gltf"]
      },
      "model/gltf-binary": {
        source: "iana",
        compressible: true,
        extensions: ["glb"]
      },
      "model/iges": {
        source: "iana",
        compressible: false,
        extensions: ["igs", "iges"]
      },
      "model/mesh": {
        source: "iana",
        compressible: false,
        extensions: ["msh", "mesh", "silo"]
      },
      "model/mtl": {
        source: "iana",
        extensions: ["mtl"]
      },
      "model/obj": {
        source: "iana",
        extensions: ["obj"]
      },
      "model/step": {
        source: "iana"
      },
      "model/step+xml": {
        source: "iana",
        compressible: true,
        extensions: ["stpx"]
      },
      "model/step+zip": {
        source: "iana",
        compressible: false,
        extensions: ["stpz"]
      },
      "model/step-xml+zip": {
        source: "iana",
        compressible: false,
        extensions: ["stpxz"]
      },
      "model/stl": {
        source: "iana",
        extensions: ["stl"]
      },
      "model/vnd.collada+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dae"]
      },
      "model/vnd.dwf": {
        source: "iana",
        extensions: ["dwf"]
      },
      "model/vnd.flatland.3dml": {
        source: "iana"
      },
      "model/vnd.gdl": {
        source: "iana",
        extensions: ["gdl"]
      },
      "model/vnd.gs-gdl": {
        source: "apache"
      },
      "model/vnd.gs.gdl": {
        source: "iana"
      },
      "model/vnd.gtw": {
        source: "iana",
        extensions: ["gtw"]
      },
      "model/vnd.moml+xml": {
        source: "iana",
        compressible: true
      },
      "model/vnd.mts": {
        source: "iana",
        extensions: ["mts"]
      },
      "model/vnd.opengex": {
        source: "iana",
        extensions: ["ogex"]
      },
      "model/vnd.parasolid.transmit.binary": {
        source: "iana",
        extensions: ["x_b"]
      },
      "model/vnd.parasolid.transmit.text": {
        source: "iana",
        extensions: ["x_t"]
      },
      "model/vnd.pytha.pyox": {
        source: "iana"
      },
      "model/vnd.rosette.annotated-data-model": {
        source: "iana"
      },
      "model/vnd.sap.vds": {
        source: "iana",
        extensions: ["vds"]
      },
      "model/vnd.usdz+zip": {
        source: "iana",
        compressible: false,
        extensions: ["usdz"]
      },
      "model/vnd.valve.source.compiled-map": {
        source: "iana",
        extensions: ["bsp"]
      },
      "model/vnd.vtu": {
        source: "iana",
        extensions: ["vtu"]
      },
      "model/vrml": {
        source: "iana",
        compressible: false,
        extensions: ["wrl", "vrml"]
      },
      "model/x3d+binary": {
        source: "apache",
        compressible: false,
        extensions: ["x3db", "x3dbz"]
      },
      "model/x3d+fastinfoset": {
        source: "iana",
        extensions: ["x3db"]
      },
      "model/x3d+vrml": {
        source: "apache",
        compressible: false,
        extensions: ["x3dv", "x3dvz"]
      },
      "model/x3d+xml": {
        source: "iana",
        compressible: true,
        extensions: ["x3d", "x3dz"]
      },
      "model/x3d-vrml": {
        source: "iana",
        extensions: ["x3dv"]
      },
      "multipart/alternative": {
        source: "iana",
        compressible: false
      },
      "multipart/appledouble": {
        source: "iana"
      },
      "multipart/byteranges": {
        source: "iana"
      },
      "multipart/digest": {
        source: "iana"
      },
      "multipart/encrypted": {
        source: "iana",
        compressible: false
      },
      "multipart/form-data": {
        source: "iana",
        compressible: false
      },
      "multipart/header-set": {
        source: "iana"
      },
      "multipart/mixed": {
        source: "iana"
      },
      "multipart/multilingual": {
        source: "iana"
      },
      "multipart/parallel": {
        source: "iana"
      },
      "multipart/related": {
        source: "iana",
        compressible: false
      },
      "multipart/report": {
        source: "iana"
      },
      "multipart/signed": {
        source: "iana",
        compressible: false
      },
      "multipart/vnd.bint.med-plus": {
        source: "iana"
      },
      "multipart/voice-message": {
        source: "iana"
      },
      "multipart/x-mixed-replace": {
        source: "iana"
      },
      "text/1d-interleaved-parityfec": {
        source: "iana"
      },
      "text/cache-manifest": {
        source: "iana",
        compressible: true,
        extensions: ["appcache", "manifest"]
      },
      "text/calendar": {
        source: "iana",
        extensions: ["ics", "ifb"]
      },
      "text/calender": {
        compressible: true
      },
      "text/cmd": {
        compressible: true
      },
      "text/coffeescript": {
        extensions: ["coffee", "litcoffee"]
      },
      "text/cql": {
        source: "iana"
      },
      "text/cql-expression": {
        source: "iana"
      },
      "text/cql-identifier": {
        source: "iana"
      },
      "text/css": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["css"]
      },
      "text/csv": {
        source: "iana",
        compressible: true,
        extensions: ["csv"]
      },
      "text/csv-schema": {
        source: "iana"
      },
      "text/directory": {
        source: "iana"
      },
      "text/dns": {
        source: "iana"
      },
      "text/ecmascript": {
        source: "iana"
      },
      "text/encaprtp": {
        source: "iana"
      },
      "text/enriched": {
        source: "iana"
      },
      "text/fhirpath": {
        source: "iana"
      },
      "text/flexfec": {
        source: "iana"
      },
      "text/fwdred": {
        source: "iana"
      },
      "text/gff3": {
        source: "iana"
      },
      "text/grammar-ref-list": {
        source: "iana"
      },
      "text/html": {
        source: "iana",
        compressible: true,
        extensions: ["html", "htm", "shtml"]
      },
      "text/jade": {
        extensions: ["jade"]
      },
      "text/javascript": {
        source: "iana",
        compressible: true
      },
      "text/jcr-cnd": {
        source: "iana"
      },
      "text/jsx": {
        compressible: true,
        extensions: ["jsx"]
      },
      "text/less": {
        compressible: true,
        extensions: ["less"]
      },
      "text/markdown": {
        source: "iana",
        compressible: true,
        extensions: ["markdown", "md"]
      },
      "text/mathml": {
        source: "nginx",
        extensions: ["mml"]
      },
      "text/mdx": {
        compressible: true,
        extensions: ["mdx"]
      },
      "text/mizar": {
        source: "iana"
      },
      "text/n3": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["n3"]
      },
      "text/parameters": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/parityfec": {
        source: "iana"
      },
      "text/plain": {
        source: "iana",
        compressible: true,
        extensions: ["txt", "text", "conf", "def", "list", "log", "in", "ini"]
      },
      "text/provenance-notation": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/prs.fallenstein.rst": {
        source: "iana"
      },
      "text/prs.lines.tag": {
        source: "iana",
        extensions: ["dsc"]
      },
      "text/prs.prop.logic": {
        source: "iana"
      },
      "text/raptorfec": {
        source: "iana"
      },
      "text/red": {
        source: "iana"
      },
      "text/rfc822-headers": {
        source: "iana"
      },
      "text/richtext": {
        source: "iana",
        compressible: true,
        extensions: ["rtx"]
      },
      "text/rtf": {
        source: "iana",
        compressible: true,
        extensions: ["rtf"]
      },
      "text/rtp-enc-aescm128": {
        source: "iana"
      },
      "text/rtploopback": {
        source: "iana"
      },
      "text/rtx": {
        source: "iana"
      },
      "text/sgml": {
        source: "iana",
        extensions: ["sgml", "sgm"]
      },
      "text/shaclc": {
        source: "iana"
      },
      "text/shex": {
        source: "iana",
        extensions: ["shex"]
      },
      "text/slim": {
        extensions: ["slim", "slm"]
      },
      "text/spdx": {
        source: "iana",
        extensions: ["spdx"]
      },
      "text/strings": {
        source: "iana"
      },
      "text/stylus": {
        extensions: ["stylus", "styl"]
      },
      "text/t140": {
        source: "iana"
      },
      "text/tab-separated-values": {
        source: "iana",
        compressible: true,
        extensions: ["tsv"]
      },
      "text/troff": {
        source: "iana",
        extensions: ["t", "tr", "roff", "man", "me", "ms"]
      },
      "text/turtle": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["ttl"]
      },
      "text/ulpfec": {
        source: "iana"
      },
      "text/uri-list": {
        source: "iana",
        compressible: true,
        extensions: ["uri", "uris", "urls"]
      },
      "text/vcard": {
        source: "iana",
        compressible: true,
        extensions: ["vcard"]
      },
      "text/vnd.a": {
        source: "iana"
      },
      "text/vnd.abc": {
        source: "iana"
      },
      "text/vnd.ascii-art": {
        source: "iana"
      },
      "text/vnd.curl": {
        source: "iana",
        extensions: ["curl"]
      },
      "text/vnd.curl.dcurl": {
        source: "apache",
        extensions: ["dcurl"]
      },
      "text/vnd.curl.mcurl": {
        source: "apache",
        extensions: ["mcurl"]
      },
      "text/vnd.curl.scurl": {
        source: "apache",
        extensions: ["scurl"]
      },
      "text/vnd.debian.copyright": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.dmclientscript": {
        source: "iana"
      },
      "text/vnd.dvb.subtitle": {
        source: "iana",
        extensions: ["sub"]
      },
      "text/vnd.esmertec.theme-descriptor": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.familysearch.gedcom": {
        source: "iana",
        extensions: ["ged"]
      },
      "text/vnd.ficlab.flt": {
        source: "iana"
      },
      "text/vnd.fly": {
        source: "iana",
        extensions: ["fly"]
      },
      "text/vnd.fmi.flexstor": {
        source: "iana",
        extensions: ["flx"]
      },
      "text/vnd.gml": {
        source: "iana"
      },
      "text/vnd.graphviz": {
        source: "iana",
        extensions: ["gv"]
      },
      "text/vnd.hans": {
        source: "iana"
      },
      "text/vnd.hgl": {
        source: "iana"
      },
      "text/vnd.in3d.3dml": {
        source: "iana",
        extensions: ["3dml"]
      },
      "text/vnd.in3d.spot": {
        source: "iana",
        extensions: ["spot"]
      },
      "text/vnd.iptc.newsml": {
        source: "iana"
      },
      "text/vnd.iptc.nitf": {
        source: "iana"
      },
      "text/vnd.latex-z": {
        source: "iana"
      },
      "text/vnd.motorola.reflex": {
        source: "iana"
      },
      "text/vnd.ms-mediapackage": {
        source: "iana"
      },
      "text/vnd.net2phone.commcenter.command": {
        source: "iana"
      },
      "text/vnd.radisys.msml-basic-layout": {
        source: "iana"
      },
      "text/vnd.senx.warpscript": {
        source: "iana"
      },
      "text/vnd.si.uricatalogue": {
        source: "iana"
      },
      "text/vnd.sosi": {
        source: "iana"
      },
      "text/vnd.sun.j2me.app-descriptor": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["jad"]
      },
      "text/vnd.trolltech.linguist": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.wap.si": {
        source: "iana"
      },
      "text/vnd.wap.sl": {
        source: "iana"
      },
      "text/vnd.wap.wml": {
        source: "iana",
        extensions: ["wml"]
      },
      "text/vnd.wap.wmlscript": {
        source: "iana",
        extensions: ["wmls"]
      },
      "text/vtt": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["vtt"]
      },
      "text/x-asm": {
        source: "apache",
        extensions: ["s", "asm"]
      },
      "text/x-c": {
        source: "apache",
        extensions: ["c", "cc", "cxx", "cpp", "h", "hh", "dic"]
      },
      "text/x-component": {
        source: "nginx",
        extensions: ["htc"]
      },
      "text/x-fortran": {
        source: "apache",
        extensions: ["f", "for", "f77", "f90"]
      },
      "text/x-gwt-rpc": {
        compressible: true
      },
      "text/x-handlebars-template": {
        extensions: ["hbs"]
      },
      "text/x-java-source": {
        source: "apache",
        extensions: ["java"]
      },
      "text/x-jquery-tmpl": {
        compressible: true
      },
      "text/x-lua": {
        extensions: ["lua"]
      },
      "text/x-markdown": {
        compressible: true,
        extensions: ["mkd"]
      },
      "text/x-nfo": {
        source: "apache",
        extensions: ["nfo"]
      },
      "text/x-opml": {
        source: "apache",
        extensions: ["opml"]
      },
      "text/x-org": {
        compressible: true,
        extensions: ["org"]
      },
      "text/x-pascal": {
        source: "apache",
        extensions: ["p", "pas"]
      },
      "text/x-processing": {
        compressible: true,
        extensions: ["pde"]
      },
      "text/x-sass": {
        extensions: ["sass"]
      },
      "text/x-scss": {
        extensions: ["scss"]
      },
      "text/x-setext": {
        source: "apache",
        extensions: ["etx"]
      },
      "text/x-sfv": {
        source: "apache",
        extensions: ["sfv"]
      },
      "text/x-suse-ymp": {
        compressible: true,
        extensions: ["ymp"]
      },
      "text/x-uuencode": {
        source: "apache",
        extensions: ["uu"]
      },
      "text/x-vcalendar": {
        source: "apache",
        extensions: ["vcs"]
      },
      "text/x-vcard": {
        source: "apache",
        extensions: ["vcf"]
      },
      "text/xml": {
        source: "iana",
        compressible: true,
        extensions: ["xml"]
      },
      "text/xml-external-parsed-entity": {
        source: "iana"
      },
      "text/yaml": {
        compressible: true,
        extensions: ["yaml", "yml"]
      },
      "video/1d-interleaved-parityfec": {
        source: "iana"
      },
      "video/3gpp": {
        source: "iana",
        extensions: ["3gp", "3gpp"]
      },
      "video/3gpp-tt": {
        source: "iana"
      },
      "video/3gpp2": {
        source: "iana",
        extensions: ["3g2"]
      },
      "video/av1": {
        source: "iana"
      },
      "video/bmpeg": {
        source: "iana"
      },
      "video/bt656": {
        source: "iana"
      },
      "video/celb": {
        source: "iana"
      },
      "video/dv": {
        source: "iana"
      },
      "video/encaprtp": {
        source: "iana"
      },
      "video/ffv1": {
        source: "iana"
      },
      "video/flexfec": {
        source: "iana"
      },
      "video/h261": {
        source: "iana",
        extensions: ["h261"]
      },
      "video/h263": {
        source: "iana",
        extensions: ["h263"]
      },
      "video/h263-1998": {
        source: "iana"
      },
      "video/h263-2000": {
        source: "iana"
      },
      "video/h264": {
        source: "iana",
        extensions: ["h264"]
      },
      "video/h264-rcdo": {
        source: "iana"
      },
      "video/h264-svc": {
        source: "iana"
      },
      "video/h265": {
        source: "iana"
      },
      "video/iso.segment": {
        source: "iana",
        extensions: ["m4s"]
      },
      "video/jpeg": {
        source: "iana",
        extensions: ["jpgv"]
      },
      "video/jpeg2000": {
        source: "iana"
      },
      "video/jpm": {
        source: "apache",
        extensions: ["jpm", "jpgm"]
      },
      "video/jxsv": {
        source: "iana"
      },
      "video/mj2": {
        source: "iana",
        extensions: ["mj2", "mjp2"]
      },
      "video/mp1s": {
        source: "iana"
      },
      "video/mp2p": {
        source: "iana"
      },
      "video/mp2t": {
        source: "iana",
        extensions: ["ts"]
      },
      "video/mp4": {
        source: "iana",
        compressible: false,
        extensions: ["mp4", "mp4v", "mpg4"]
      },
      "video/mp4v-es": {
        source: "iana"
      },
      "video/mpeg": {
        source: "iana",
        compressible: false,
        extensions: ["mpeg", "mpg", "mpe", "m1v", "m2v"]
      },
      "video/mpeg4-generic": {
        source: "iana"
      },
      "video/mpv": {
        source: "iana"
      },
      "video/nv": {
        source: "iana"
      },
      "video/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["ogv"]
      },
      "video/parityfec": {
        source: "iana"
      },
      "video/pointer": {
        source: "iana"
      },
      "video/quicktime": {
        source: "iana",
        compressible: false,
        extensions: ["qt", "mov"]
      },
      "video/raptorfec": {
        source: "iana"
      },
      "video/raw": {
        source: "iana"
      },
      "video/rtp-enc-aescm128": {
        source: "iana"
      },
      "video/rtploopback": {
        source: "iana"
      },
      "video/rtx": {
        source: "iana"
      },
      "video/scip": {
        source: "iana"
      },
      "video/smpte291": {
        source: "iana"
      },
      "video/smpte292m": {
        source: "iana"
      },
      "video/ulpfec": {
        source: "iana"
      },
      "video/vc1": {
        source: "iana"
      },
      "video/vc2": {
        source: "iana"
      },
      "video/vnd.cctv": {
        source: "iana"
      },
      "video/vnd.dece.hd": {
        source: "iana",
        extensions: ["uvh", "uvvh"]
      },
      "video/vnd.dece.mobile": {
        source: "iana",
        extensions: ["uvm", "uvvm"]
      },
      "video/vnd.dece.mp4": {
        source: "iana"
      },
      "video/vnd.dece.pd": {
        source: "iana",
        extensions: ["uvp", "uvvp"]
      },
      "video/vnd.dece.sd": {
        source: "iana",
        extensions: ["uvs", "uvvs"]
      },
      "video/vnd.dece.video": {
        source: "iana",
        extensions: ["uvv", "uvvv"]
      },
      "video/vnd.directv.mpeg": {
        source: "iana"
      },
      "video/vnd.directv.mpeg-tts": {
        source: "iana"
      },
      "video/vnd.dlna.mpeg-tts": {
        source: "iana"
      },
      "video/vnd.dvb.file": {
        source: "iana",
        extensions: ["dvb"]
      },
      "video/vnd.fvt": {
        source: "iana",
        extensions: ["fvt"]
      },
      "video/vnd.hns.video": {
        source: "iana"
      },
      "video/vnd.iptvforum.1dparityfec-1010": {
        source: "iana"
      },
      "video/vnd.iptvforum.1dparityfec-2005": {
        source: "iana"
      },
      "video/vnd.iptvforum.2dparityfec-1010": {
        source: "iana"
      },
      "video/vnd.iptvforum.2dparityfec-2005": {
        source: "iana"
      },
      "video/vnd.iptvforum.ttsavc": {
        source: "iana"
      },
      "video/vnd.iptvforum.ttsmpeg2": {
        source: "iana"
      },
      "video/vnd.motorola.video": {
        source: "iana"
      },
      "video/vnd.motorola.videop": {
        source: "iana"
      },
      "video/vnd.mpegurl": {
        source: "iana",
        extensions: ["mxu", "m4u"]
      },
      "video/vnd.ms-playready.media.pyv": {
        source: "iana",
        extensions: ["pyv"]
      },
      "video/vnd.nokia.interleaved-multimedia": {
        source: "iana"
      },
      "video/vnd.nokia.mp4vr": {
        source: "iana"
      },
      "video/vnd.nokia.videovoip": {
        source: "iana"
      },
      "video/vnd.objectvideo": {
        source: "iana"
      },
      "video/vnd.radgamettools.bink": {
        source: "iana"
      },
      "video/vnd.radgamettools.smacker": {
        source: "iana"
      },
      "video/vnd.sealed.mpeg1": {
        source: "iana"
      },
      "video/vnd.sealed.mpeg4": {
        source: "iana"
      },
      "video/vnd.sealed.swf": {
        source: "iana"
      },
      "video/vnd.sealedmedia.softseal.mov": {
        source: "iana"
      },
      "video/vnd.uvvu.mp4": {
        source: "iana",
        extensions: ["uvu", "uvvu"]
      },
      "video/vnd.vivo": {
        source: "iana",
        extensions: ["viv"]
      },
      "video/vnd.youtube.yt": {
        source: "iana"
      },
      "video/vp8": {
        source: "iana"
      },
      "video/vp9": {
        source: "iana"
      },
      "video/webm": {
        source: "apache",
        compressible: false,
        extensions: ["webm"]
      },
      "video/x-f4v": {
        source: "apache",
        extensions: ["f4v"]
      },
      "video/x-fli": {
        source: "apache",
        extensions: ["fli"]
      },
      "video/x-flv": {
        source: "apache",
        compressible: false,
        extensions: ["flv"]
      },
      "video/x-m4v": {
        source: "apache",
        extensions: ["m4v"]
      },
      "video/x-matroska": {
        source: "apache",
        compressible: false,
        extensions: ["mkv", "mk3d", "mks"]
      },
      "video/x-mng": {
        source: "apache",
        extensions: ["mng"]
      },
      "video/x-ms-asf": {
        source: "apache",
        extensions: ["asf", "asx"]
      },
      "video/x-ms-vob": {
        source: "apache",
        extensions: ["vob"]
      },
      "video/x-ms-wm": {
        source: "apache",
        extensions: ["wm"]
      },
      "video/x-ms-wmv": {
        source: "apache",
        compressible: false,
        extensions: ["wmv"]
      },
      "video/x-ms-wmx": {
        source: "apache",
        extensions: ["wmx"]
      },
      "video/x-ms-wvx": {
        source: "apache",
        extensions: ["wvx"]
      },
      "video/x-msvideo": {
        source: "apache",
        extensions: ["avi"]
      },
      "video/x-sgi-movie": {
        source: "apache",
        extensions: ["movie"]
      },
      "video/x-smv": {
        source: "apache",
        extensions: ["smv"]
      },
      "x-conference/x-cooltalk": {
        source: "apache",
        extensions: ["ice"]
      },
      "x-shader/x-fragment": {
        compressible: true
      },
      "x-shader/x-vertex": {
        compressible: true
      }
    };
  }
});

// node_modules/.pnpm/mime-db@1.52.0/node_modules/mime-db/index.js
var require_mime_db = __commonJS({
  "node_modules/.pnpm/mime-db@1.52.0/node_modules/mime-db/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = require_db();
  }
});

// node_modules/.pnpm/mime-types@2.1.35/node_modules/mime-types/index.js
var require_mime_types = __commonJS({
  "node_modules/.pnpm/mime-types@2.1.35/node_modules/mime-types/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var db = require_mime_db();
    var extname = require("path").extname;
    var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
    var TEXT_TYPE_REGEXP = /^text\//i;
    exports2.charset = charset;
    exports2.charsets = { lookup: charset };
    exports2.contentType = contentType;
    exports2.extension = extension;
    exports2.extensions = /* @__PURE__ */ Object.create(null);
    exports2.lookup = lookup;
    exports2.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports2.extensions, exports2.types);
    function charset(type) {
      if (!type || typeof type !== "string") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var mime = match && db[match[1].toLowerCase()];
      if (mime && mime.charset) {
        return mime.charset;
      }
      if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return "UTF-8";
      }
      return false;
    }
    function contentType(str) {
      if (!str || typeof str !== "string") {
        return false;
      }
      var mime = str.indexOf("/") === -1 ? exports2.lookup(str) : str;
      if (!mime) {
        return false;
      }
      if (mime.indexOf("charset") === -1) {
        var charset2 = exports2.charset(mime);
        if (charset2) mime += "; charset=" + charset2.toLowerCase();
      }
      return mime;
    }
    function extension(type) {
      if (!type || typeof type !== "string") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var exts = match && exports2.extensions[match[1].toLowerCase()];
      if (!exts || !exts.length) {
        return false;
      }
      return exts[0];
    }
    function lookup(path2) {
      if (!path2 || typeof path2 !== "string") {
        return false;
      }
      var extension2 = extname("x." + path2).toLowerCase().substr(1);
      if (!extension2) {
        return false;
      }
      return exports2.types[extension2] || false;
    }
    function populateMaps(extensions, types) {
      var preference = ["nginx", "apache", void 0, "iana"];
      Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
          return;
        }
        extensions[type] = exts;
        for (var i = 0; i < exts.length; i++) {
          var extension2 = exts[i];
          if (types[extension2]) {
            var from = preference.indexOf(db[types[extension2]].source);
            var to = preference.indexOf(mime.source);
            if (types[extension2] !== "application/octet-stream" && (from > to || from === to && types[extension2].substr(0, 12) === "application/")) {
              continue;
            }
          }
          types[extension2] = type;
        }
      });
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/defer.js
var require_defer = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/defer.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = defer;
    function defer(fn) {
      var nextTick = typeof setImmediate == "function" ? setImmediate : typeof process == "object" && typeof process.nextTick == "function" ? process.nextTick : null;
      if (nextTick) {
        nextTick(fn);
      } else {
        setTimeout(fn, 0);
      }
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/async.js
var require_async = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/async.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var defer = require_defer();
    module2.exports = async;
    function async(callback) {
      var isAsync = false;
      defer(function() {
        isAsync = true;
      });
      return function async_callback(err, result) {
        if (isAsync) {
          callback(err, result);
        } else {
          defer(function nextTick_callback() {
            callback(err, result);
          });
        }
      };
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/abort.js
var require_abort = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/abort.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = abort;
    function abort(state) {
      Object.keys(state.jobs).forEach(clean.bind(state));
      state.jobs = {};
    }
    function clean(key) {
      if (typeof this.jobs[key] == "function") {
        this.jobs[key]();
      }
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/iterate.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var async = require_async();
    var abort = require_abort();
    module2.exports = iterate;
    function iterate(list, iterator, state, callback) {
      var key = state["keyedList"] ? state["keyedList"][state.index] : state.index;
      state.jobs[key] = runJob(iterator, key, list[key], function(error, output) {
        if (!(key in state.jobs)) {
          return;
        }
        delete state.jobs[key];
        if (error) {
          abort(state);
        } else {
          state.results[key] = output;
        }
        callback(error, state.results);
      });
    }
    function runJob(iterator, key, item, callback) {
      var aborter;
      if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
      } else {
        aborter = iterator(item, key, async(callback));
      }
      return aborter;
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/state.js
var require_state = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/state.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = state;
    function state(list, sortMethod) {
      var isNamedList = !Array.isArray(list), initState = {
        index: 0,
        keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
        jobs: {},
        results: isNamedList ? {} : [],
        size: isNamedList ? Object.keys(list).length : list.length
      };
      if (sortMethod) {
        initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
          return sortMethod(list[a], list[b]);
        });
      }
      return initState;
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/terminator.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var abort = require_abort();
    var async = require_async();
    module2.exports = terminator;
    function terminator(callback) {
      if (!Object.keys(this.jobs).length) {
        return;
      }
      this.index = this.size;
      abort(this);
      async(callback)(null, this.results);
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/parallel.js
var require_parallel = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/parallel.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = parallel;
    function parallel(list, iterator, callback) {
      var state = initState(list);
      while (state.index < (state["keyedList"] || list).length) {
        iterate(list, iterator, state, function(error, result) {
          if (error) {
            callback(error, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        });
        state.index++;
      }
      return terminator.bind(state, callback);
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/serialOrdered.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list, iterator, sortMethod, callback) {
      var state = initState(list, sortMethod);
      iterate(list, iterator, state, function iteratorHandler(error, result) {
        if (error) {
          callback(error, result);
          return;
        }
        state.index++;
        if (state.index < (state["keyedList"] || list).length) {
          iterate(list, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      });
      return terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/serial.js
var require_serial = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/serial.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var serialOrdered = require_serialOrdered();
    module2.exports = serial;
    function serial(list, iterator, callback) {
      return serialOrdered(list, iterator, null, callback);
    }
  }
});

// node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/index.js
var require_asynckit = __commonJS({
  "node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = {
      parallel: require_parallel(),
      serial: require_serial(),
      serialOrdered: require_serialOrdered()
    };
  }
});

// node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js
var require_es_object_atoms = __commonJS({
  "node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Object;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js
var require_es_errors = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Error;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js
var require_eval = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = EvalError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js
var require_range = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = RangeError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js
var require_ref = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = ReferenceError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js
var require_syntax = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = SyntaxError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js
var require_type = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = TypeError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js
var require_uri = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = URIError;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js
var require_abs = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Math.abs;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js
var require_floor = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Math.floor;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js
var require_max = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Math.max;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js
var require_min = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Math.min;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js
var require_pow = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Math.pow;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js
var require_round = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Math.round;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js
var require_isNaN = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Number.isNaN || function isNaN2(a) {
      return a !== a;
    };
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js
var require_sign = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var $isNaN = require_isNaN();
    module2.exports = function sign(number) {
      if ($isNaN(number) || number === 0) {
        return number;
      }
      return number < 0 ? -1 : 1;
    };
  }
});

// node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js
var require_gOPD = __commonJS({
  "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Object.getOwnPropertyDescriptor;
  }
});

// node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js
var require_gopd = __commonJS({
  "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var $gOPD = require_gOPD();
    if ($gOPD) {
      try {
        $gOPD([], "length");
      } catch (e) {
        $gOPD = null;
      }
    }
    module2.exports = $gOPD;
  }
});

// node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js
var require_es_define_property = __commonJS({
  "node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var $defineProperty = Object.defineProperty || false;
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e) {
        $defineProperty = false;
      }
    }
    module2.exports = $defineProperty;
  }
});

// node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (var _ in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = (
          /** @type {PropertyDescriptor} */
          Object.getOwnPropertyDescriptor(obj, sym)
        );
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module2.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js
var require_Reflect_getPrototypeOf = __commonJS({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = typeof Reflect !== "undefined" && Reflect.getPrototypeOf || null;
  }
});

// node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js
var require_Object_getPrototypeOf = __commonJS({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var $Object = require_es_object_atoms();
    module2.exports = $Object.getPrototypeOf || null;
  }
});

// node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js
var require_implementation = __commonJS({
  "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var toStr = Object.prototype.toString;
    var max = Math.max;
    var funcType = "[object Function]";
    var concatty = function concatty2(a, b) {
      var arr = [];
      for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
      }
      for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
      }
      return arr;
    };
    var slicy = function slicy2(arrLike, offset) {
      var arr = [];
      for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
      }
      return arr;
    };
    var joiny = function(arr, joiner) {
      var str = "";
      for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
          str += joiner;
        }
      }
      return str;
    };
    module2.exports = function bind2(that) {
      var target = this;
      if (typeof target !== "function" || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slicy(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            concatty(args, arguments)
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        }
        return target.apply(
          that,
          concatty(args, arguments)
        );
      };
      var boundLength = max(0, target.length - args.length);
      var boundArgs = [];
      for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = "$" + i;
      }
      bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var implementation = require_implementation();
    module2.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionCall.js
var require_functionCall = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionCall.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Function.prototype.call;
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionApply.js
var require_functionApply = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionApply.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = Function.prototype.apply;
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/reflectApply.js
var require_reflectApply = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/reflectApply.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = typeof Reflect !== "undefined" && Reflect && Reflect.apply;
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/actualApply.js
var require_actualApply = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/actualApply.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var bind2 = require_function_bind();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var $reflectApply = require_reflectApply();
    module2.exports = $reflectApply || bind2.call($call, $apply);
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/index.js
var require_call_bind_apply_helpers = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var bind2 = require_function_bind();
    var $TypeError = require_type();
    var $call = require_functionCall();
    var $actualApply = require_actualApply();
    module2.exports = function callBindBasic(args) {
      if (args.length < 1 || typeof args[0] !== "function") {
        throw new $TypeError("a function is required");
      }
      return $actualApply(bind2, $call, args);
    };
  }
});

// node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js
var require_get = __commonJS({
  "node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var callBind = require_call_bind_apply_helpers();
    var gOPD = require_gopd();
    var hasProtoAccessor;
    try {
      hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */
      [].__proto__ === Array.prototype;
    } catch (e) {
      if (!e || typeof e !== "object" || !("code" in e) || e.code !== "ERR_PROTO_ACCESS") {
        throw e;
      }
    }
    var desc = !!hasProtoAccessor && gOPD && gOPD(
      Object.prototype,
      /** @type {keyof typeof Object.prototype} */
      "__proto__"
    );
    var $Object = Object;
    var $getPrototypeOf = $Object.getPrototypeOf;
    module2.exports = desc && typeof desc.get === "function" ? callBind([desc.get]) : typeof $getPrototypeOf === "function" ? (
      /** @type {import('./get')} */
      function getDunder(value) {
        return $getPrototypeOf(value == null ? value : $Object(value));
      }
    ) : false;
  }
});

// node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js
var require_get_proto = __commonJS({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var reflectGetProto = require_Reflect_getPrototypeOf();
    var originalGetProto = require_Object_getPrototypeOf();
    var getDunderProto = require_get();
    module2.exports = reflectGetProto ? function getProto(O) {
      return reflectGetProto(O);
    } : originalGetProto ? function getProto(O) {
      if (!O || typeof O !== "object" && typeof O !== "function") {
        throw new TypeError("getProto: not an object");
      }
      return originalGetProto(O);
    } : getDunderProto ? function getProto(O) {
      return getDunderProto(O);
    } : null;
  }
});

// node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js
var require_hasown = __commonJS({
  "node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var call = Function.prototype.call;
    var $hasOwn = Object.prototype.hasOwnProperty;
    var bind2 = require_function_bind();
    module2.exports = bind2.call(call, $hasOwn);
  }
});

// node_modules/.pnpm/get-intrinsic@1.3.0/node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/.pnpm/get-intrinsic@1.3.0/node_modules/get-intrinsic/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var undefined2;
    var $Object = require_es_object_atoms();
    var $Error = require_es_errors();
    var $EvalError = require_eval();
    var $RangeError = require_range();
    var $ReferenceError = require_ref();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var $URIError = require_uri();
    var abs = require_abs();
    var floor = require_floor();
    var max = require_max();
    var min = require_min();
    var pow = require_pow();
    var round = require_round();
    var sign = require_sign();
    var $Function = Function;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e) {
      }
    };
    var $gOPD = require_gopd();
    var $defineProperty = require_es_define_property();
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var getProto = require_get_proto();
    var $ObjectGPO = require_Object_getPrototypeOf();
    var $ReflectGPO = require_Reflect_getPrototypeOf();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      __proto__: null,
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": $Error,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": $EvalError,
      "%Float16Array%": typeof Float16Array === "undefined" ? undefined2 : Float16Array,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": $Object,
      "%Object.getOwnPropertyDescriptor%": $gOPD,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": $RangeError,
      "%ReferenceError%": $ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": $URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet,
      "%Function.prototype.call%": $call,
      "%Function.prototype.apply%": $apply,
      "%Object.defineProperty%": $defineProperty,
      "%Object.getPrototypeOf%": $ObjectGPO,
      "%Math.abs%": abs,
      "%Math.floor%": floor,
      "%Math.max%": max,
      "%Math.min%": min,
      "%Math.pow%": pow,
      "%Math.round%": round,
      "%Math.sign%": sign,
      "%Reflect.getPrototypeOf%": $ReflectGPO
    };
    if (getProto) {
      try {
        null.error;
      } catch (e) {
        errorProto = getProto(getProto(e));
        INTRINSICS["%Error.prototype%"] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      __proto__: null,
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind2 = require_function_bind();
    var hasOwn = require_hasown();
    var $concat = bind2.call($call, Array.prototype.concat);
    var $spliceApply = bind2.call($apply, Array.prototype.splice);
    var $replace = bind2.call($call, String.prototype.replace);
    var $strSlice = bind2.call($call, String.prototype.slice);
    var $exec = bind2.call($call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module2.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i = 1, isOwn = true; i < parts.length; i += 1) {
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void undefined2;
          }
          if ($gOPD && i + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/.pnpm/has-tostringtag@1.0.2/node_modules/has-tostringtag/shams.js
var require_shams2 = __commonJS({
  "node_modules/.pnpm/has-tostringtag@1.0.2/node_modules/has-tostringtag/shams.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var hasSymbols = require_shams();
    module2.exports = function hasToStringTagShams() {
      return hasSymbols() && !!Symbol.toStringTag;
    };
  }
});

// node_modules/.pnpm/es-set-tostringtag@2.1.0/node_modules/es-set-tostringtag/index.js
var require_es_set_tostringtag = __commonJS({
  "node_modules/.pnpm/es-set-tostringtag@2.1.0/node_modules/es-set-tostringtag/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var GetIntrinsic = require_get_intrinsic();
    var $defineProperty = GetIntrinsic("%Object.defineProperty%", true);
    var hasToStringTag = require_shams2()();
    var hasOwn = require_hasown();
    var $TypeError = require_type();
    var toStringTag = hasToStringTag ? Symbol.toStringTag : null;
    module2.exports = function setToStringTag(object, value) {
      var overrideIfSet = arguments.length > 2 && !!arguments[2] && arguments[2].force;
      var nonConfigurable = arguments.length > 2 && !!arguments[2] && arguments[2].nonConfigurable;
      if (typeof overrideIfSet !== "undefined" && typeof overrideIfSet !== "boolean" || typeof nonConfigurable !== "undefined" && typeof nonConfigurable !== "boolean") {
        throw new $TypeError("if provided, the `overrideIfSet` and `nonConfigurable` options must be booleans");
      }
      if (toStringTag && (overrideIfSet || !hasOwn(object, toStringTag))) {
        if ($defineProperty) {
          $defineProperty(object, toStringTag, {
            configurable: !nonConfigurable,
            enumerable: false,
            value,
            writable: false
          });
        } else {
          object[toStringTag] = value;
        }
      }
    };
  }
});

// node_modules/.pnpm/form-data@4.0.2/node_modules/form-data/lib/populate.js
var require_populate = __commonJS({
  "node_modules/.pnpm/form-data@4.0.2/node_modules/form-data/lib/populate.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = function(dst, src) {
      Object.keys(src).forEach(function(prop) {
        dst[prop] = dst[prop] || src[prop];
      });
      return dst;
    };
  }
});

// node_modules/.pnpm/form-data@4.0.2/node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS({
  "node_modules/.pnpm/form-data@4.0.2/node_modules/form-data/lib/form_data.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var CombinedStream = require_combined_stream();
    var util3 = require("util");
    var path2 = require("path");
    var http2 = require("http");
    var https2 = require("https");
    var parseUrl = require("url").parse;
    var fs3 = require("fs");
    var Stream = require("stream").Stream;
    var mime = require_mime_types();
    var asynckit = require_asynckit();
    var setToStringTag = require_es_set_tostringtag();
    var populate = require_populate();
    module2.exports = FormData3;
    util3.inherits(FormData3, CombinedStream);
    function FormData3(options) {
      if (!(this instanceof FormData3)) {
        return new FormData3(options);
      }
      this._overheadLength = 0;
      this._valueLength = 0;
      this._valuesToMeasure = [];
      CombinedStream.call(this);
      options = options || {};
      for (var option in options) {
        this[option] = options[option];
      }
    }
    FormData3.LINE_BREAK = "\r\n";
    FormData3.DEFAULT_CONTENT_TYPE = "application/octet-stream";
    FormData3.prototype.append = function(field, value, options) {
      options = options || {};
      if (typeof options == "string") {
        options = { filename: options };
      }
      var append2 = CombinedStream.prototype.append.bind(this);
      if (typeof value == "number") {
        value = "" + value;
      }
      if (Array.isArray(value)) {
        this._error(new Error("Arrays are not supported."));
        return;
      }
      var header = this._multiPartHeader(field, value, options);
      var footer = this._multiPartFooter();
      append2(header);
      append2(value);
      append2(footer);
      this._trackLength(header, value, options);
    };
    FormData3.prototype._trackLength = function(header, value, options) {
      var valueLength = 0;
      if (options.knownLength != null) {
        valueLength += +options.knownLength;
      } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
      } else if (typeof value === "string") {
        valueLength = Buffer.byteLength(value);
      }
      this._valueLength += valueLength;
      this._overheadLength += Buffer.byteLength(header) + FormData3.LINE_BREAK.length;
      if (!value || !value.path && !(value.readable && Object.prototype.hasOwnProperty.call(value, "httpVersion")) && !(value instanceof Stream)) {
        return;
      }
      if (!options.knownLength) {
        this._valuesToMeasure.push(value);
      }
    };
    FormData3.prototype._lengthRetriever = function(value, callback) {
      if (Object.prototype.hasOwnProperty.call(value, "fd")) {
        if (value.end != void 0 && value.end != Infinity && value.start != void 0) {
          callback(null, value.end + 1 - (value.start ? value.start : 0));
        } else {
          fs3.stat(value.path, function(err, stat) {
            var fileSize;
            if (err) {
              callback(err);
              return;
            }
            fileSize = stat.size - (value.start ? value.start : 0);
            callback(null, fileSize);
          });
        }
      } else if (Object.prototype.hasOwnProperty.call(value, "httpVersion")) {
        callback(null, +value.headers["content-length"]);
      } else if (Object.prototype.hasOwnProperty.call(value, "httpModule")) {
        value.on("response", function(response) {
          value.pause();
          callback(null, +response.headers["content-length"]);
        });
        value.resume();
      } else {
        callback("Unknown stream");
      }
    };
    FormData3.prototype._multiPartHeader = function(field, value, options) {
      if (typeof options.header == "string") {
        return options.header;
      }
      var contentDisposition = this._getContentDisposition(value, options);
      var contentType = this._getContentType(value, options);
      var contents = "";
      var headers = {
        // add custom disposition as third element or keep it two elements if not
        "Content-Disposition": ["form-data", 'name="' + field + '"'].concat(contentDisposition || []),
        // if no content type. allow it to be empty array
        "Content-Type": [].concat(contentType || [])
      };
      if (typeof options.header == "object") {
        populate(headers, options.header);
      }
      var header;
      for (var prop in headers) {
        if (Object.prototype.hasOwnProperty.call(headers, prop)) {
          header = headers[prop];
          if (header == null) {
            continue;
          }
          if (!Array.isArray(header)) {
            header = [header];
          }
          if (header.length) {
            contents += prop + ": " + header.join("; ") + FormData3.LINE_BREAK;
          }
        }
      }
      return "--" + this.getBoundary() + FormData3.LINE_BREAK + contents + FormData3.LINE_BREAK;
    };
    FormData3.prototype._getContentDisposition = function(value, options) {
      var filename, contentDisposition;
      if (typeof options.filepath === "string") {
        filename = path2.normalize(options.filepath).replace(/\\/g, "/");
      } else if (options.filename || value.name || value.path) {
        filename = path2.basename(options.filename || value.name || value.path);
      } else if (value.readable && Object.prototype.hasOwnProperty.call(value, "httpVersion")) {
        filename = path2.basename(value.client._httpMessage.path || "");
      }
      if (filename) {
        contentDisposition = 'filename="' + filename + '"';
      }
      return contentDisposition;
    };
    FormData3.prototype._getContentType = function(value, options) {
      var contentType = options.contentType;
      if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
      }
      if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
      }
      if (!contentType && value.readable && Object.prototype.hasOwnProperty.call(value, "httpVersion")) {
        contentType = value.headers["content-type"];
      }
      if (!contentType && (options.filepath || options.filename)) {
        contentType = mime.lookup(options.filepath || options.filename);
      }
      if (!contentType && typeof value == "object") {
        contentType = FormData3.DEFAULT_CONTENT_TYPE;
      }
      return contentType;
    };
    FormData3.prototype._multiPartFooter = function() {
      return function(next) {
        var footer = FormData3.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
          footer += this._lastBoundary();
        }
        next(footer);
      }.bind(this);
    };
    FormData3.prototype._lastBoundary = function() {
      return "--" + this.getBoundary() + "--" + FormData3.LINE_BREAK;
    };
    FormData3.prototype.getHeaders = function(userHeaders) {
      var header;
      var formHeaders = {
        "content-type": "multipart/form-data; boundary=" + this.getBoundary()
      };
      for (header in userHeaders) {
        if (Object.prototype.hasOwnProperty.call(userHeaders, header)) {
          formHeaders[header.toLowerCase()] = userHeaders[header];
        }
      }
      return formHeaders;
    };
    FormData3.prototype.setBoundary = function(boundary) {
      this._boundary = boundary;
    };
    FormData3.prototype.getBoundary = function() {
      if (!this._boundary) {
        this._generateBoundary();
      }
      return this._boundary;
    };
    FormData3.prototype.getBuffer = function() {
      var dataBuffer = new Buffer.alloc(0);
      var boundary = this.getBoundary();
      for (var i = 0, len = this._streams.length; i < len; i++) {
        if (typeof this._streams[i] !== "function") {
          if (Buffer.isBuffer(this._streams[i])) {
            dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
          } else {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]);
          }
          if (typeof this._streams[i] !== "string" || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData3.LINE_BREAK)]);
          }
        }
      }
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData3.prototype._generateBoundary = function() {
      var boundary = "--------------------------";
      for (var i = 0; i < 24; i++) {
        boundary += Math.floor(Math.random() * 10).toString(16);
      }
      this._boundary = boundary;
    };
    FormData3.prototype.getLengthSync = function() {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this.hasKnownLength()) {
        this._error(new Error("Cannot calculate proper length in synchronous way."));
      }
      return knownLength;
    };
    FormData3.prototype.hasKnownLength = function() {
      var hasKnownLength = true;
      if (this._valuesToMeasure.length) {
        hasKnownLength = false;
      }
      return hasKnownLength;
    };
    FormData3.prototype.getLength = function(cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
        if (err) {
          cb(err);
          return;
        }
        values.forEach(function(length) {
          knownLength += length;
        });
        cb(null, knownLength);
      });
    };
    FormData3.prototype.submit = function(params, cb) {
      var request2, options, defaults2 = { method: "post" };
      if (typeof params == "string") {
        params = parseUrl(params);
        options = populate({
          port: params.port,
          path: params.pathname,
          host: params.hostname,
          protocol: params.protocol
        }, defaults2);
      } else {
        options = populate(params, defaults2);
        if (!options.port) {
          options.port = options.protocol == "https:" ? 443 : 80;
        }
      }
      options.headers = this.getHeaders(params.headers);
      if (options.protocol == "https:") {
        request2 = https2.request(options);
      } else {
        request2 = http2.request(options);
      }
      this.getLength(function(err, length) {
        if (err && err !== "Unknown stream") {
          this._error(err);
          return;
        }
        if (length) {
          request2.setHeader("Content-Length", length);
        }
        this.pipe(request2);
        if (cb) {
          var onResponse;
          var callback = function(error, responce) {
            request2.removeListener("error", callback);
            request2.removeListener("response", onResponse);
            return cb.call(this, error, responce);
          };
          onResponse = callback.bind(this, null);
          request2.on("error", callback);
          request2.on("response", onResponse);
        }
      }.bind(this));
      return request2;
    };
    FormData3.prototype._error = function(err) {
      if (!this.error) {
        this.error = err;
        this.pause();
        this.emit("error", err);
      }
    };
    FormData3.prototype.toString = function() {
      return "[object FormData]";
    };
    setToStringTag(FormData3, "FormData");
  }
});

// node_modules/.pnpm/proxy-from-env@1.1.0/node_modules/proxy-from-env/index.js
var require_proxy_from_env = __commonJS({
  "node_modules/.pnpm/proxy-from-env@1.1.0/node_modules/proxy-from-env/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var parseUrl = require("url").parse;
    var DEFAULT_PORTS = {
      ftp: 21,
      gopher: 70,
      http: 80,
      https: 443,
      ws: 80,
      wss: 443
    };
    var stringEndsWith = String.prototype.endsWith || function(s) {
      return s.length <= this.length && this.indexOf(s, this.length - s.length) !== -1;
    };
    function getProxyForUrl(url2) {
      var parsedUrl = typeof url2 === "string" ? parseUrl(url2) : url2 || {};
      var proto = parsedUrl.protocol;
      var hostname = parsedUrl.host;
      var port = parsedUrl.port;
      if (typeof hostname !== "string" || !hostname || typeof proto !== "string") {
        return "";
      }
      proto = proto.split(":", 1)[0];
      hostname = hostname.replace(/:\d*$/, "");
      port = parseInt(port) || DEFAULT_PORTS[proto] || 0;
      if (!shouldProxy(hostname, port)) {
        return "";
      }
      var proxy = getEnv("npm_config_" + proto + "_proxy") || getEnv(proto + "_proxy") || getEnv("npm_config_proxy") || getEnv("all_proxy");
      if (proxy && proxy.indexOf("://") === -1) {
        proxy = proto + "://" + proxy;
      }
      return proxy;
    }
    function shouldProxy(hostname, port) {
      var NO_PROXY = (getEnv("npm_config_no_proxy") || getEnv("no_proxy")).toLowerCase();
      if (!NO_PROXY) {
        return true;
      }
      if (NO_PROXY === "*") {
        return false;
      }
      return NO_PROXY.split(/[,\s]/).every(function(proxy) {
        if (!proxy) {
          return true;
        }
        var parsedProxy = proxy.match(/^(.+):(\d+)$/);
        var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;
        var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;
        if (parsedProxyPort && parsedProxyPort !== port) {
          return true;
        }
        if (!/^[.*]/.test(parsedProxyHostname)) {
          return hostname !== parsedProxyHostname;
        }
        if (parsedProxyHostname.charAt(0) === "*") {
          parsedProxyHostname = parsedProxyHostname.slice(1);
        }
        return !stringEndsWith.call(hostname, parsedProxyHostname);
      });
    }
    function getEnv(key) {
      return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || "";
    }
    exports2.getProxyForUrl = getProxyForUrl;
  }
});

// node_modules/.pnpm/ms@2.1.3/node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/.pnpm/ms@2.1.3/node_modules/ms/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var s = 1e3;
    var m = s * 60;
    var h = m * 60;
    var d = h * 24;
    var w = d * 7;
    var y = d * 365.25;
    module2.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse(val);
      } else if (type === "number" && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        str
      );
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "weeks":
        case "week":
        case "w":
          return n * w;
        case "days":
        case "day":
        case "d":
          return n * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return Math.round(ms / d) + "d";
      }
      if (msAbs >= h) {
        return Math.round(ms / h) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s) {
        return Math.round(ms / s) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return plural(ms, msAbs, d, "day");
      }
      if (msAbs >= h) {
        return plural(ms, msAbs, h, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s) {
        return plural(ms, msAbs, s, "second");
      }
      return ms + " ms";
    }
    function plural(ms, msAbs, n, name) {
      var isPlural = msAbs >= n * 1.5;
      return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
    }
  }
});

// node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/common.js
var require_common = __commonJS({
  "node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/common.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    function setup(env) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms();
      createDebug.destroy = destroy;
      Object.keys(env).forEach((key) => {
        createDebug[key] = env[key];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash = (hash << 5) - hash + namespace.charCodeAt(i);
          hash |= 0;
        }
        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug(...args) {
          if (!debug.enabled) {
            return;
          }
          const self2 = debug;
          const curr = Number(/* @__PURE__ */ new Date());
          const ms = curr - (prevTime || curr);
          self2.diff = ms;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== "string") {
            args.unshift("%O");
          }
          let index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
            if (match === "%%") {
              return "%";
            }
            index++;
            const formatter = createDebug.formatters[format];
            if (typeof formatter === "function") {
              const val = args[index];
              match = formatter.call(self2, val);
              args.splice(index, 1);
              index--;
            }
            return match;
          });
          createDebug.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug.log;
          logFn.apply(self2, args);
        }
        debug.namespace = namespace;
        debug.useColors = createDebug.useColors();
        debug.color = createDebug.selectColor(namespace);
        debug.extend = extend2;
        debug.destroy = createDebug.destroy;
        Object.defineProperty(debug, "enabled", {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          }
        });
        if (typeof createDebug.init === "function") {
          createDebug.init(debug);
        }
        return debug;
      }
      function extend2(namespace, delimiter) {
        const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        const split = (typeof namespaces === "string" ? namespaces : "").trim().replace(" ", ",").split(",").filter(Boolean);
        for (const ns of split) {
          if (ns[0] === "-") {
            createDebug.skips.push(ns.slice(1));
          } else {
            createDebug.names.push(ns);
          }
        }
      }
      function matchesTemplate(search, template) {
        let searchIndex = 0;
        let templateIndex = 0;
        let starIndex = -1;
        let matchIndex = 0;
        while (searchIndex < search.length) {
          if (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === "*")) {
            if (template[templateIndex] === "*") {
              starIndex = templateIndex;
              matchIndex = searchIndex;
              templateIndex++;
            } else {
              searchIndex++;
              templateIndex++;
            }
          } else if (starIndex !== -1) {
            templateIndex = starIndex + 1;
            matchIndex++;
            searchIndex = matchIndex;
          } else {
            return false;
          }
        }
        while (templateIndex < template.length && template[templateIndex] === "*") {
          templateIndex++;
        }
        return templateIndex === template.length;
      }
      function disable() {
        const namespaces = [
          ...createDebug.names,
          ...createDebug.skips.map((namespace) => "-" + namespace)
        ].join(",");
        createDebug.enable("");
        return namespaces;
      }
      function enabled(name) {
        for (const skip of createDebug.skips) {
          if (matchesTemplate(name, skip)) {
            return false;
          }
        }
        for (const ns of createDebug.names) {
          if (matchesTemplate(name, ns)) {
            return true;
          }
        }
        return false;
      }
      function coerce(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module2.exports = setup;
  }
});

// node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/browser.js
var require_browser = __commonJS({
  "node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/browser.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage = localstorage();
    exports2.destroy = /* @__PURE__ */ (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
      };
    })();
    exports2.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
        return true;
      }
      if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
      }
      let m;
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
      typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      typeof navigator !== "undefined" && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m[1], 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
      typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module2.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c = "color: " + this.color;
      args.splice(1, 0, c, "color: inherit");
      let index = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === "%%") {
          return;
        }
        index++;
        if (match === "%c") {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c);
    }
    exports2.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        if (namespaces) {
          exports2.storage.setItem("debug", namespaces);
        } else {
          exports2.storage.removeItem("debug");
        }
      } catch (error) {
      }
    }
    function load() {
      let r;
      try {
        r = exports2.storage.getItem("debug");
      } catch (error) {
      }
      if (!r && typeof process !== "undefined" && "env" in process) {
        r = process.env.DEBUG;
      }
      return r;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error) {
      }
    }
    module2.exports = require_common()(exports2);
    var { formatters } = module2.exports;
    formatters.j = function(v) {
      try {
        return JSON.stringify(v);
      } catch (error) {
        return "[UnexpectedJSONParseError]: " + error.message;
      }
    };
  }
});

// node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/node.js
var require_node = __commonJS({
  "node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/node.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var tty = require("tty");
    var util3 = require("util");
    exports2.init = init;
    exports2.log = log;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.destroy = util3.deprecate(
      () => {
      },
      "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."
    );
    exports2.colors = [6, 2, 3, 4, 5, 1];
    try {
      const supportsColor = require("supports-color");
      if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
        exports2.colors = [
          20,
          21,
          26,
          27,
          32,
          33,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          56,
          57,
          62,
          63,
          68,
          69,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          92,
          93,
          98,
          99,
          112,
          113,
          128,
          129,
          134,
          135,
          148,
          149,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          178,
          179,
          184,
          185,
          196,
          197,
          198,
          199,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          214,
          215,
          220,
          221
        ];
      }
    } catch (error) {
    }
    exports2.inspectOpts = Object.keys(process.env).filter((key) => {
      return /^debug_/i.test(key);
    }).reduce((obj, key) => {
      const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k) => {
        return k.toUpperCase();
      });
      let val = process.env[key];
      if (/^(yes|on|true|enabled)$/i.test(val)) {
        val = true;
      } else if (/^(no|off|false|disabled)$/i.test(val)) {
        val = false;
      } else if (val === "null") {
        val = null;
      } else {
        val = Number(val);
      }
      obj[prop] = val;
      return obj;
    }, {});
    function useColors() {
      return "colors" in exports2.inspectOpts ? Boolean(exports2.inspectOpts.colors) : tty.isatty(process.stderr.fd);
    }
    function formatArgs(args) {
      const { namespace: name, useColors: useColors2 } = this;
      if (useColors2) {
        const c = this.color;
        const colorCode = "\x1B[3" + (c < 8 ? c : "8;5;" + c);
        const prefix = `  ${colorCode};1m${name} \x1B[0m`;
        args[0] = prefix + args[0].split("\n").join("\n" + prefix);
        args.push(colorCode + "m+" + module2.exports.humanize(this.diff) + "\x1B[0m");
      } else {
        args[0] = getDate() + name + " " + args[0];
      }
    }
    function getDate() {
      if (exports2.inspectOpts.hideDate) {
        return "";
      }
      return (/* @__PURE__ */ new Date()).toISOString() + " ";
    }
    function log(...args) {
      return process.stderr.write(util3.formatWithOptions(exports2.inspectOpts, ...args) + "\n");
    }
    function save(namespaces) {
      if (namespaces) {
        process.env.DEBUG = namespaces;
      } else {
        delete process.env.DEBUG;
      }
    }
    function load() {
      return process.env.DEBUG;
    }
    function init(debug) {
      debug.inspectOpts = {};
      const keys = Object.keys(exports2.inspectOpts);
      for (let i = 0; i < keys.length; i++) {
        debug.inspectOpts[keys[i]] = exports2.inspectOpts[keys[i]];
      }
    }
    module2.exports = require_common()(exports2);
    var { formatters } = module2.exports;
    formatters.o = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util3.inspect(v, this.inspectOpts).split("\n").map((str) => str.trim()).join(" ");
    };
    formatters.O = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util3.inspect(v, this.inspectOpts);
    };
  }
});

// node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/index.js
var require_src2 = __commonJS({
  "node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    if (typeof process === "undefined" || process.type === "renderer" || process.browser === true || process.__nwjs) {
      module2.exports = require_browser();
    } else {
      module2.exports = require_node();
    }
  }
});

// node_modules/.pnpm/follow-redirects@1.15.9/node_modules/follow-redirects/debug.js
var require_debug = __commonJS({
  "node_modules/.pnpm/follow-redirects@1.15.9/node_modules/follow-redirects/debug.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var debug;
    module2.exports = function() {
      if (!debug) {
        try {
          debug = require_src2()("follow-redirects");
        } catch (error) {
        }
        if (typeof debug !== "function") {
          debug = function() {
          };
        }
      }
      debug.apply(null, arguments);
    };
  }
});

// node_modules/.pnpm/follow-redirects@1.15.9/node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  "node_modules/.pnpm/follow-redirects@1.15.9/node_modules/follow-redirects/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var url2 = require("url");
    var URL2 = url2.URL;
    var http2 = require("http");
    var https2 = require("https");
    var Writable = require("stream").Writable;
    var assert = require("assert");
    var debug = require_debug();
    (function detectUnsupportedEnvironment() {
      var looksLikeNode = typeof process !== "undefined";
      var looksLikeBrowser = typeof window !== "undefined" && typeof document !== "undefined";
      var looksLikeV8 = isFunction2(Error.captureStackTrace);
      if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {
        console.warn("The follow-redirects package should be excluded from browser builds.");
      }
    })();
    var useNativeURL = false;
    try {
      assert(new URL2(""));
    } catch (error) {
      useNativeURL = error.code === "ERR_INVALID_URL";
    }
    var preservedUrlFields = [
      "auth",
      "host",
      "hostname",
      "href",
      "path",
      "pathname",
      "port",
      "protocol",
      "query",
      "search",
      "hash"
    ];
    var events = ["abort", "aborted", "connect", "error", "socket", "timeout"];
    var eventHandlers = /* @__PURE__ */ Object.create(null);
    events.forEach(function(event) {
      eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var InvalidUrlError = createErrorType(
      "ERR_INVALID_URL",
      "Invalid URL",
      TypeError
    );
    var RedirectionError = createErrorType(
      "ERR_FR_REDIRECTION_FAILURE",
      "Redirected request failed"
    );
    var TooManyRedirectsError = createErrorType(
      "ERR_FR_TOO_MANY_REDIRECTS",
      "Maximum number of redirects exceeded",
      RedirectionError
    );
    var MaxBodyLengthExceededError = createErrorType(
      "ERR_FR_MAX_BODY_LENGTH_EXCEEDED",
      "Request body larger than maxBodyLength limit"
    );
    var WriteAfterEndError = createErrorType(
      "ERR_STREAM_WRITE_AFTER_END",
      "write after end"
    );
    var destroy = Writable.prototype.destroy || noop2;
    function RedirectableRequest(options, responseCallback) {
      Writable.call(this);
      this._sanitizeOptions(options);
      this._options = options;
      this._ended = false;
      this._ending = false;
      this._redirectCount = 0;
      this._redirects = [];
      this._requestBodyLength = 0;
      this._requestBodyBuffers = [];
      if (responseCallback) {
        this.on("response", responseCallback);
      }
      var self2 = this;
      this._onNativeResponse = function(response) {
        try {
          self2._processResponse(response);
        } catch (cause) {
          self2.emit("error", cause instanceof RedirectionError ? cause : new RedirectionError({ cause }));
        }
      };
      this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function() {
      destroyRequest(this._currentRequest);
      this._currentRequest.abort();
      this.emit("abort");
    };
    RedirectableRequest.prototype.destroy = function(error) {
      destroyRequest(this._currentRequest, error);
      destroy.call(this, error);
      return this;
    };
    RedirectableRequest.prototype.write = function(data, encoding, callback) {
      if (this._ending) {
        throw new WriteAfterEndError();
      }
      if (!isString2(data) && !isBuffer2(data)) {
        throw new TypeError("data should be a string, Buffer or Uint8Array");
      }
      if (isFunction2(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (data.length === 0) {
        if (callback) {
          callback();
        }
        return;
      }
      if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({ data, encoding });
        this._currentRequest.write(data, encoding, callback);
      } else {
        this.emit("error", new MaxBodyLengthExceededError());
        this.abort();
      }
    };
    RedirectableRequest.prototype.end = function(data, encoding, callback) {
      if (isFunction2(data)) {
        callback = data;
        data = encoding = null;
      } else if (isFunction2(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
      } else {
        var self2 = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding, function() {
          self2._ended = true;
          currentRequest.end(null, null, callback);
        });
        this._ending = true;
      }
    };
    RedirectableRequest.prototype.setHeader = function(name, value) {
      this._options.headers[name] = value;
      this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function(name) {
      delete this._options.headers[name];
      this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
      var self2 = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener("timeout", socket.destroy);
        socket.addListener("timeout", socket.destroy);
      }
      function startTimer(socket) {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
        }
        self2._timeout = setTimeout(function() {
          self2.emit("timeout");
          clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
      }
      function clearTimer() {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
          self2._timeout = null;
        }
        self2.removeListener("abort", clearTimer);
        self2.removeListener("error", clearTimer);
        self2.removeListener("response", clearTimer);
        self2.removeListener("close", clearTimer);
        if (callback) {
          self2.removeListener("timeout", callback);
        }
        if (!self2.socket) {
          self2._currentRequest.removeListener("socket", startTimer);
        }
      }
      if (callback) {
        this.on("timeout", callback);
      }
      if (this.socket) {
        startTimer(this.socket);
      } else {
        this._currentRequest.once("socket", startTimer);
      }
      this.on("socket", destroyOnTimeout);
      this.on("abort", clearTimer);
      this.on("error", clearTimer);
      this.on("response", clearTimer);
      this.on("close", clearTimer);
      return this;
    };
    [
      "flushHeaders",
      "getHeader",
      "setNoDelay",
      "setSocketKeepAlive"
    ].forEach(function(method) {
      RedirectableRequest.prototype[method] = function(a, b) {
        return this._currentRequest[method](a, b);
      };
    });
    ["aborted", "connection", "socket"].forEach(function(property) {
      Object.defineProperty(RedirectableRequest.prototype, property, {
        get: function() {
          return this._currentRequest[property];
        }
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function(options) {
      if (!options.headers) {
        options.headers = {};
      }
      if (options.host) {
        if (!options.hostname) {
          options.hostname = options.host;
        }
        delete options.host;
      }
      if (!options.pathname && options.path) {
        var searchPos = options.path.indexOf("?");
        if (searchPos < 0) {
          options.pathname = options.path;
        } else {
          options.pathname = options.path.substring(0, searchPos);
          options.search = options.path.substring(searchPos);
        }
      }
    };
    RedirectableRequest.prototype._performRequest = function() {
      var protocol = this._options.protocol;
      var nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        throw new TypeError("Unsupported protocol " + protocol);
      }
      if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
      }
      var request2 = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
      request2._redirectable = this;
      for (var event of events) {
        request2.on(event, eventHandlers[event]);
      }
      this._currentUrl = /^\//.test(this._options.path) ? url2.format(this._options) : (
        // When making a request to a proxy, […]
        // a client MUST send the target URI in absolute-form […].
        this._options.path
      );
      if (this._isRedirect) {
        var i = 0;
        var self2 = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error) {
          if (request2 === self2._currentRequest) {
            if (error) {
              self2.emit("error", error);
            } else if (i < buffers.length) {
              var buffer = buffers[i++];
              if (!request2.finished) {
                request2.write(buffer.data, buffer.encoding, writeNext);
              }
            } else if (self2._ended) {
              request2.end();
            }
          }
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function(response) {
      var statusCode = response.statusCode;
      if (this._options.trackRedirects) {
        this._redirects.push({
          url: this._currentUrl,
          headers: response.headers,
          statusCode
        });
      }
      var location = response.headers.location;
      if (!location || this._options.followRedirects === false || statusCode < 300 || statusCode >= 400) {
        response.responseUrl = this._currentUrl;
        response.redirects = this._redirects;
        this.emit("response", response);
        this._requestBodyBuffers = [];
        return;
      }
      destroyRequest(this._currentRequest);
      response.destroy();
      if (++this._redirectCount > this._options.maxRedirects) {
        throw new TooManyRedirectsError();
      }
      var requestHeaders;
      var beforeRedirect = this._options.beforeRedirect;
      if (beforeRedirect) {
        requestHeaders = Object.assign({
          // The Host header was set by nativeProtocol.request
          Host: response.req.getHeader("host")
        }, this._options.headers);
      }
      var method = this._options.method;
      if ((statusCode === 301 || statusCode === 302) && this._options.method === "POST" || // RFC7231§6.4.4: The 303 (See Other) status code indicates that
      // the server is redirecting the user agent to a different resource […]
      // A user agent can perform a retrieval request targeting that URI
      // (a GET or HEAD request if using HTTP) […]
      statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
        this._options.method = "GET";
        this._requestBodyBuffers = [];
        removeMatchingHeaders(/^content-/i, this._options.headers);
      }
      var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);
      var currentUrlParts = parseUrl(this._currentUrl);
      var currentHost = currentHostHeader || currentUrlParts.host;
      var currentUrl = /^\w+:/.test(location) ? this._currentUrl : url2.format(Object.assign(currentUrlParts, { host: currentHost }));
      var redirectUrl = resolveUrl(location, currentUrl);
      debug("redirecting to", redirectUrl.href);
      this._isRedirect = true;
      spreadUrlObject(redirectUrl, this._options);
      if (redirectUrl.protocol !== currentUrlParts.protocol && redirectUrl.protocol !== "https:" || redirectUrl.host !== currentHost && !isSubdomain(redirectUrl.host, currentHost)) {
        removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);
      }
      if (isFunction2(beforeRedirect)) {
        var responseDetails = {
          headers: response.headers,
          statusCode
        };
        var requestDetails = {
          url: currentUrl,
          method,
          headers: requestHeaders
        };
        beforeRedirect(this._options, responseDetails, requestDetails);
        this._sanitizeOptions(this._options);
      }
      this._performRequest();
    };
    function wrap(protocols) {
      var exports3 = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024
      };
      var nativeProtocols = {};
      Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + ":";
        var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
        var wrappedProtocol = exports3[scheme] = Object.create(nativeProtocol);
        function request2(input, options, callback) {
          if (isURL(input)) {
            input = spreadUrlObject(input);
          } else if (isString2(input)) {
            input = spreadUrlObject(parseUrl(input));
          } else {
            callback = options;
            options = validateUrl(input);
            input = { protocol };
          }
          if (isFunction2(options)) {
            callback = options;
            options = null;
          }
          options = Object.assign({
            maxRedirects: exports3.maxRedirects,
            maxBodyLength: exports3.maxBodyLength
          }, input, options);
          options.nativeProtocols = nativeProtocols;
          if (!isString2(options.host) && !isString2(options.hostname)) {
            options.hostname = "::1";
          }
          assert.equal(options.protocol, protocol, "protocol mismatch");
          debug("options", options);
          return new RedirectableRequest(options, callback);
        }
        function get2(input, options, callback) {
          var wrappedRequest = wrappedProtocol.request(input, options, callback);
          wrappedRequest.end();
          return wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: { value: request2, configurable: true, enumerable: true, writable: true },
          get: { value: get2, configurable: true, enumerable: true, writable: true }
        });
      });
      return exports3;
    }
    function noop2() {
    }
    function parseUrl(input) {
      var parsed;
      if (useNativeURL) {
        parsed = new URL2(input);
      } else {
        parsed = validateUrl(url2.parse(input));
        if (!isString2(parsed.protocol)) {
          throw new InvalidUrlError({ input });
        }
      }
      return parsed;
    }
    function resolveUrl(relative, base) {
      return useNativeURL ? new URL2(relative, base) : parseUrl(url2.resolve(base, relative));
    }
    function validateUrl(input) {
      if (/^\[/.test(input.hostname) && !/^\[[:0-9a-f]+\]$/i.test(input.hostname)) {
        throw new InvalidUrlError({ input: input.href || input });
      }
      if (/^\[/.test(input.host) && !/^\[[:0-9a-f]+\](:\d+)?$/i.test(input.host)) {
        throw new InvalidUrlError({ input: input.href || input });
      }
      return input;
    }
    function spreadUrlObject(urlObject, target) {
      var spread3 = target || {};
      for (var key of preservedUrlFields) {
        spread3[key] = urlObject[key];
      }
      if (spread3.hostname.startsWith("[")) {
        spread3.hostname = spread3.hostname.slice(1, -1);
      }
      if (spread3.port !== "") {
        spread3.port = Number(spread3.port);
      }
      spread3.path = spread3.search ? spread3.pathname + spread3.search : spread3.pathname;
      return spread3;
    }
    function removeMatchingHeaders(regex, headers) {
      var lastValue;
      for (var header in headers) {
        if (regex.test(header)) {
          lastValue = headers[header];
          delete headers[header];
        }
      }
      return lastValue === null || typeof lastValue === "undefined" ? void 0 : String(lastValue).trim();
    }
    function createErrorType(code, message, baseClass) {
      function CustomError(properties) {
        if (isFunction2(Error.captureStackTrace)) {
          Error.captureStackTrace(this, this.constructor);
        }
        Object.assign(this, properties || {});
        this.code = code;
        this.message = this.cause ? message + ": " + this.cause.message : message;
      }
      CustomError.prototype = new (baseClass || Error)();
      Object.defineProperties(CustomError.prototype, {
        constructor: {
          value: CustomError,
          enumerable: false
        },
        name: {
          value: "Error [" + code + "]",
          enumerable: false
        }
      });
      return CustomError;
    }
    function destroyRequest(request2, error) {
      for (var event of events) {
        request2.removeListener(event, eventHandlers[event]);
      }
      request2.on("error", noop2);
      request2.destroy(error);
    }
    function isSubdomain(subdomain, domain) {
      assert(isString2(subdomain) && isString2(domain));
      var dot = subdomain.length - domain.length - 1;
      return dot > 0 && subdomain[dot] === "." && subdomain.endsWith(domain);
    }
    function isString2(value) {
      return typeof value === "string" || value instanceof String;
    }
    function isFunction2(value) {
      return typeof value === "function";
    }
    function isBuffer2(value) {
      return typeof value === "object" && "length" in value;
    }
    function isURL(value) {
      return URL2 && value instanceof URL2;
    }
    module2.exports = wrap({ http: http2, https: https2 });
    module2.exports.wrap = wrap;
  }
});

// node_modules/.pnpm/dotenv@16.5.0/node_modules/dotenv/package.json
var require_package = __commonJS({
  "node_modules/.pnpm/dotenv@16.5.0/node_modules/dotenv/package.json"(exports2, module2) {
    module2.exports = {
      name: "dotenv",
      version: "16.5.0",
      description: "Loads environment variables from .env file",
      main: "lib/main.js",
      types: "lib/main.d.ts",
      exports: {
        ".": {
          types: "./lib/main.d.ts",
          require: "./lib/main.js",
          default: "./lib/main.js"
        },
        "./config": "./config.js",
        "./config.js": "./config.js",
        "./lib/env-options": "./lib/env-options.js",
        "./lib/env-options.js": "./lib/env-options.js",
        "./lib/cli-options": "./lib/cli-options.js",
        "./lib/cli-options.js": "./lib/cli-options.js",
        "./package.json": "./package.json"
      },
      scripts: {
        "dts-check": "tsc --project tests/types/tsconfig.json",
        lint: "standard",
        pretest: "npm run lint && npm run dts-check",
        test: "tap run --allow-empty-coverage --disable-coverage --timeout=60000",
        "test:coverage": "tap run --show-full-coverage --timeout=60000 --coverage-report=lcov",
        prerelease: "npm test",
        release: "standard-version"
      },
      repository: {
        type: "git",
        url: "git://github.com/motdotla/dotenv.git"
      },
      homepage: "https://github.com/motdotla/dotenv#readme",
      funding: "https://dotenvx.com",
      keywords: [
        "dotenv",
        "env",
        ".env",
        "environment",
        "variables",
        "config",
        "settings"
      ],
      readmeFilename: "README.md",
      license: "BSD-2-Clause",
      devDependencies: {
        "@types/node": "^18.11.3",
        decache: "^4.6.2",
        sinon: "^14.0.1",
        standard: "^17.0.0",
        "standard-version": "^9.5.0",
        tap: "^19.2.0",
        typescript: "^4.8.4"
      },
      engines: {
        node: ">=12"
      },
      browser: {
        fs: false
      }
    };
  }
});

// node_modules/.pnpm/dotenv@16.5.0/node_modules/dotenv/lib/main.js
var require_main = __commonJS({
  "node_modules/.pnpm/dotenv@16.5.0/node_modules/dotenv/lib/main.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require("fs");
    var path2 = require("path");
    var os = require("os");
    var crypto4 = require("crypto");
    var packageJson = require_package();
    var version = packageJson.version;
    var LINE = /(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;
    function parse(src) {
      const obj = {};
      let lines = src.toString();
      lines = lines.replace(/\r\n?/mg, "\n");
      let match;
      while ((match = LINE.exec(lines)) != null) {
        const key = match[1];
        let value = match[2] || "";
        value = value.trim();
        const maybeQuote = value[0];
        value = value.replace(/^(['"`])([\s\S]*)\1$/mg, "$2");
        if (maybeQuote === '"') {
          value = value.replace(/\\n/g, "\n");
          value = value.replace(/\\r/g, "\r");
        }
        obj[key] = value;
      }
      return obj;
    }
    function _parseVault(options) {
      const vaultPath = _vaultPath(options);
      const result = DotenvModule.configDotenv({ path: vaultPath });
      if (!result.parsed) {
        const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`);
        err.code = "MISSING_DATA";
        throw err;
      }
      const keys = _dotenvKey(options).split(",");
      const length = keys.length;
      let decrypted;
      for (let i = 0; i < length; i++) {
        try {
          const key = keys[i].trim();
          const attrs = _instructions(result, key);
          decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key);
          break;
        } catch (error) {
          if (i + 1 >= length) {
            throw error;
          }
        }
      }
      return DotenvModule.parse(decrypted);
    }
    function _warn(message) {
      console.log(`[dotenv@${version}][WARN] ${message}`);
    }
    function _debug(message) {
      console.log(`[dotenv@${version}][DEBUG] ${message}`);
    }
    function _dotenvKey(options) {
      if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {
        return options.DOTENV_KEY;
      }
      if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {
        return process.env.DOTENV_KEY;
      }
      return "";
    }
    function _instructions(result, dotenvKey) {
      let uri;
      try {
        uri = new URL(dotenvKey);
      } catch (error) {
        if (error.code === "ERR_INVALID_URL") {
          const err = new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");
          err.code = "INVALID_DOTENV_KEY";
          throw err;
        }
        throw error;
      }
      const key = uri.password;
      if (!key) {
        const err = new Error("INVALID_DOTENV_KEY: Missing key part");
        err.code = "INVALID_DOTENV_KEY";
        throw err;
      }
      const environment = uri.searchParams.get("environment");
      if (!environment) {
        const err = new Error("INVALID_DOTENV_KEY: Missing environment part");
        err.code = "INVALID_DOTENV_KEY";
        throw err;
      }
      const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`;
      const ciphertext = result.parsed[environmentKey];
      if (!ciphertext) {
        const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`);
        err.code = "NOT_FOUND_DOTENV_ENVIRONMENT";
        throw err;
      }
      return { ciphertext, key };
    }
    function _vaultPath(options) {
      let possibleVaultPath = null;
      if (options && options.path && options.path.length > 0) {
        if (Array.isArray(options.path)) {
          for (const filepath of options.path) {
            if (fs3.existsSync(filepath)) {
              possibleVaultPath = filepath.endsWith(".vault") ? filepath : `${filepath}.vault`;
            }
          }
        } else {
          possibleVaultPath = options.path.endsWith(".vault") ? options.path : `${options.path}.vault`;
        }
      } else {
        possibleVaultPath = path2.resolve(process.cwd(), ".env.vault");
      }
      if (fs3.existsSync(possibleVaultPath)) {
        return possibleVaultPath;
      }
      return null;
    }
    function _resolveHome(envPath) {
      return envPath[0] === "~" ? path2.join(os.homedir(), envPath.slice(1)) : envPath;
    }
    function _configVault(options) {
      const debug = Boolean(options && options.debug);
      if (debug) {
        _debug("Loading env from encrypted .env.vault");
      }
      const parsed = DotenvModule._parseVault(options);
      let processEnv = process.env;
      if (options && options.processEnv != null) {
        processEnv = options.processEnv;
      }
      DotenvModule.populate(processEnv, parsed, options);
      return { parsed };
    }
    function configDotenv(options) {
      const dotenvPath = path2.resolve(process.cwd(), ".env");
      let encoding = "utf8";
      const debug = Boolean(options && options.debug);
      if (options && options.encoding) {
        encoding = options.encoding;
      } else {
        if (debug) {
          _debug("No encoding is specified. UTF-8 is used by default");
        }
      }
      let optionPaths = [dotenvPath];
      if (options && options.path) {
        if (!Array.isArray(options.path)) {
          optionPaths = [_resolveHome(options.path)];
        } else {
          optionPaths = [];
          for (const filepath of options.path) {
            optionPaths.push(_resolveHome(filepath));
          }
        }
      }
      let lastError;
      const parsedAll = {};
      for (const path3 of optionPaths) {
        try {
          const parsed = DotenvModule.parse(fs3.readFileSync(path3, { encoding }));
          DotenvModule.populate(parsedAll, parsed, options);
        } catch (e) {
          if (debug) {
            _debug(`Failed to load ${path3} ${e.message}`);
          }
          lastError = e;
        }
      }
      let processEnv = process.env;
      if (options && options.processEnv != null) {
        processEnv = options.processEnv;
      }
      DotenvModule.populate(processEnv, parsedAll, options);
      if (lastError) {
        return { parsed: parsedAll, error: lastError };
      } else {
        return { parsed: parsedAll };
      }
    }
    function config2(options) {
      if (_dotenvKey(options).length === 0) {
        return DotenvModule.configDotenv(options);
      }
      const vaultPath = _vaultPath(options);
      if (!vaultPath) {
        _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`);
        return DotenvModule.configDotenv(options);
      }
      return DotenvModule._configVault(options);
    }
    function decrypt(encrypted, keyStr) {
      const key = Buffer.from(keyStr.slice(-64), "hex");
      let ciphertext = Buffer.from(encrypted, "base64");
      const nonce = ciphertext.subarray(0, 12);
      const authTag = ciphertext.subarray(-16);
      ciphertext = ciphertext.subarray(12, -16);
      try {
        const aesgcm = crypto4.createDecipheriv("aes-256-gcm", key, nonce);
        aesgcm.setAuthTag(authTag);
        return `${aesgcm.update(ciphertext)}${aesgcm.final()}`;
      } catch (error) {
        const isRange = error instanceof RangeError;
        const invalidKeyLength = error.message === "Invalid key length";
        const decryptionFailed = error.message === "Unsupported state or unable to authenticate data";
        if (isRange || invalidKeyLength) {
          const err = new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");
          err.code = "INVALID_DOTENV_KEY";
          throw err;
        } else if (decryptionFailed) {
          const err = new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");
          err.code = "DECRYPTION_FAILED";
          throw err;
        } else {
          throw error;
        }
      }
    }
    function populate(processEnv, parsed, options = {}) {
      const debug = Boolean(options && options.debug);
      const override = Boolean(options && options.override);
      if (typeof parsed !== "object") {
        const err = new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");
        err.code = "OBJECT_REQUIRED";
        throw err;
      }
      for (const key of Object.keys(parsed)) {
        if (Object.prototype.hasOwnProperty.call(processEnv, key)) {
          if (override === true) {
            processEnv[key] = parsed[key];
          }
          if (debug) {
            if (override === true) {
              _debug(`"${key}" is already defined and WAS overwritten`);
            } else {
              _debug(`"${key}" is already defined and was NOT overwritten`);
            }
          }
        } else {
          processEnv[key] = parsed[key];
        }
      }
    }
    var DotenvModule = {
      configDotenv,
      _configVault,
      _parseVault,
      config: config2,
      decrypt,
      parse,
      populate
    };
    module2.exports.configDotenv = DotenvModule.configDotenv;
    module2.exports._configVault = DotenvModule._configVault;
    module2.exports._parseVault = DotenvModule._parseVault;
    module2.exports.config = DotenvModule.config;
    module2.exports.decrypt = DotenvModule.decrypt;
    module2.exports.parse = DotenvModule.parse;
    module2.exports.populate = DotenvModule.populate;
    module2.exports = DotenvModule;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js
var require_lodash = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    (function() {
      var undefined2;
      var VERSION3 = "4.17.21";
      var LARGE_ARRAY_SIZE = 200;
      var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      var MAX_MEMOIZE_SIZE = 500;
      var PLACEHOLDER = "__lodash_placeholder__";
      var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
      var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
      var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
      var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
      var HOT_COUNT = 800, HOT_SPAN = 16;
      var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
      var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [
        ["ary", WRAP_ARY_FLAG],
        ["bind", WRAP_BIND_FLAG],
        ["bindKey", WRAP_BIND_KEY_FLAG],
        ["curry", WRAP_CURRY_FLAG],
        ["curryRight", WRAP_CURRY_RIGHT_FLAG],
        ["flip", WRAP_FLIP_FLAG],
        ["partial", WRAP_PARTIAL_FLAG],
        ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
        ["rearg", WRAP_REARG_FLAG]
      ];
      var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
      var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
      var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
      var reTrimStart = /^\s+/;
      var reWhitespace = /\s/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
      var reEscapeChar = /\\(\\)?/g;
      var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags = /\w*$/;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var reIsOctal = /^0o[0-7]+$/i;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch = /($^)/;
      var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
      var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reApos = RegExp(rsApos, "g");
      var reComboMark = RegExp(rsCombo, "g");
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
      ].join("|"), "g");
      var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ];
      var templateCounter = -1;
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
      var cloneableTags = {};
      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
      cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
      var deburredLetters = {
        // Latin-1 Supplement block.
        "\xC0": "A",
        "\xC1": "A",
        "\xC2": "A",
        "\xC3": "A",
        "\xC4": "A",
        "\xC5": "A",
        "\xE0": "a",
        "\xE1": "a",
        "\xE2": "a",
        "\xE3": "a",
        "\xE4": "a",
        "\xE5": "a",
        "\xC7": "C",
        "\xE7": "c",
        "\xD0": "D",
        "\xF0": "d",
        "\xC8": "E",
        "\xC9": "E",
        "\xCA": "E",
        "\xCB": "E",
        "\xE8": "e",
        "\xE9": "e",
        "\xEA": "e",
        "\xEB": "e",
        "\xCC": "I",
        "\xCD": "I",
        "\xCE": "I",
        "\xCF": "I",
        "\xEC": "i",
        "\xED": "i",
        "\xEE": "i",
        "\xEF": "i",
        "\xD1": "N",
        "\xF1": "n",
        "\xD2": "O",
        "\xD3": "O",
        "\xD4": "O",
        "\xD5": "O",
        "\xD6": "O",
        "\xD8": "O",
        "\xF2": "o",
        "\xF3": "o",
        "\xF4": "o",
        "\xF5": "o",
        "\xF6": "o",
        "\xF8": "o",
        "\xD9": "U",
        "\xDA": "U",
        "\xDB": "U",
        "\xDC": "U",
        "\xF9": "u",
        "\xFA": "u",
        "\xFB": "u",
        "\xFC": "u",
        "\xDD": "Y",
        "\xFD": "y",
        "\xFF": "y",
        "\xC6": "Ae",
        "\xE6": "ae",
        "\xDE": "Th",
        "\xFE": "th",
        "\xDF": "ss",
        // Latin Extended-A block.
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
      };
      var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      };
      var freeParseFloat = parseFloat, freeParseInt = parseInt;
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root = freeGlobal || freeSelf || Function("return this")();
      var freeExports = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal.process;
      var nodeUtil = function() {
        try {
          var types = freeModule && freeModule.require && freeModule.require("util").types;
          if (types) {
            return types;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {
        }
      }();
      var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          var value = array[index];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (iteratee(array[index], index, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (!predicate(array[index], index, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
      }
      function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (comparator(value, array[index])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index < length) {
          result[index] = iteratee(array[index], index, array);
        }
        return result;
      }
      function arrayPush(array, values) {
        var index = -1, length = values.length, offset = array.length;
        while (++index < length) {
          array[offset + index] = values[index];
        }
        return array;
      }
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[++index];
        }
        while (++index < length) {
          accumulator = iteratee(accumulator, array[index], index, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (predicate(array[index], index, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize = baseProperty("length");
      function asciiToArray(string) {
        return string.split("");
      }
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection2) {
          if (predicate(value, key, collection2)) {
            result = key;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index-- : ++index < length) {
          if (predicate(array[index], index, array)) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (comparator(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function baseIsNaN(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
      }
      function baseProperty(key) {
        return function(object) {
          return object == null ? undefined2 : object[key];
        };
      }
      function basePropertyOf(object) {
        return function(key) {
          return object == null ? undefined2 : object[key];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection2) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while (++index < length) {
          var current = iteratee(array[index]);
          if (current !== undefined2) {
            result = result === undefined2 ? current : result + current;
          }
        }
        return result;
      }
      function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while (++index < n) {
          result[index] = iteratee(index);
        }
        return result;
      }
      function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
          return [key, object[key]];
        });
      }
      function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
      }
      function baseUnary(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues(object, props) {
        return arrayMap(props, function(key) {
          return object[key];
        });
      }
      function cacheHas(cache, key) {
        return cache.has(key);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while (length--) {
          if (array[length] === placeholder) {
            ++result;
          }
        }
        return result;
      }
      var deburrLetter = basePropertyOf(deburredLetters);
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
      }
      function getValue(object, key) {
        return object == null ? undefined2 : object[key];
      }
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      function iteratorToArray(iterator) {
        var data, result = [];
        while (!(data = iterator.next()).done) {
          result.push(data.value);
        }
        return result;
      }
      function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key) {
          result[++index] = [key, value];
        });
        return result;
      }
      function overArg(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (value === placeholder || value === PLACEHOLDER) {
            array[index] = PLACEHOLDER;
            result[resIndex++] = index;
          }
        }
        return result;
      }
      function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = value;
        });
        return result;
      }
      function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = [value, value];
        });
        return result;
      }
      function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (array[index] === value) {
            return index;
          }
        }
        return -1;
      }
      function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while (index--) {
          if (array[index] === value) {
            return index;
          }
        }
        return index;
      }
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      function trimmedEndIndex(string) {
        var index = string.length;
        while (index-- && reWhitespace.test(string.charAt(index))) {
        }
        return index;
      }
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          ++result;
        }
        return result;
      }
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      var runInContext = function runInContext2(context) {
        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
        var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
        var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
        var coreJsData = context["__core-js_shared__"];
        var funcToString = funcProto.toString;
        var hasOwnProperty2 = objectProto.hasOwnProperty;
        var idCounter = 0;
        var maskSrcKey = function() {
          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
          return uid ? "Symbol(src)_1." + uid : "";
        }();
        var nativeObjectToString = objectProto.toString;
        var objectCtorString = funcToString.call(Object2);
        var oldDash = root._;
        var reIsNative = RegExp2(
          "^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        );
        var Buffer2 = moduleExports ? context.Buffer : undefined2, Symbol2 = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : undefined2, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : undefined2, symIterator = Symbol2 ? Symbol2.iterator : undefined2, symToStringTag = Symbol2 ? Symbol2.toStringTag : undefined2;
        var defineProperty = function() {
          try {
            var func = getNative(Object2, "defineProperty");
            func({}, "", {});
            return func;
          } catch (e) {
          }
        }();
        var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
        var DataView2 = getNative(context, "DataView"), Map2 = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap2 = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
        var metaMap = WeakMap2 && new WeakMap2();
        var realNames = {};
        var dataViewCtorString = toSource(DataView2), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap2);
        var symbolProto = Symbol2 ? Symbol2.prototype : undefined2, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined2, symbolToString = symbolProto ? symbolProto.toString : undefined2;
        function lodash(value) {
          if (isObjectLike(value) && !isArray2(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty2.call(value, "__wrapped__")) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        var baseCreate = /* @__PURE__ */ function() {
          function object() {
          }
          return function(proto) {
            if (!isObject2(proto)) {
              return {};
            }
            if (objectCreate) {
              return objectCreate(proto);
            }
            object.prototype = proto;
            var result2 = new object();
            object.prototype = undefined2;
            return result2;
          };
        }();
        function baseLodash() {
        }
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined2;
        }
        lodash.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "escape": reEscape,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "evaluate": reEvaluate,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          "interpolate": reInterpolate,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          "variable": "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          "imports": {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            "_": lodash
          }
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result2 = new LazyWrapper(this.__wrapped__);
          result2.__actions__ = copyArray(this.__actions__);
          result2.__dir__ = this.__dir__;
          result2.__filtered__ = this.__filtered__;
          result2.__iteratees__ = copyArray(this.__iteratees__);
          result2.__takeCount__ = this.__takeCount__;
          result2.__views__ = copyArray(this.__views__);
          return result2;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result2 = new LazyWrapper(this);
            result2.__dir__ = -1;
            result2.__filtered__ = true;
          } else {
            result2 = this.clone();
            result2.__dir__ *= -1;
          }
          return result2;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray2(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
          if (!isArr || !isRight && arrLength == length && takeCount == length) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result2 = [];
          outer:
            while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1, value = array[index];
              while (++iterIndex < iterLength) {
                var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result2[resIndex++] = value;
            }
          return result2;
        }
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
          this.size = 0;
        }
        function hashDelete(key) {
          var result2 = this.has(key) && delete this.__data__[key];
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result2 = data[key];
            return result2 === HASH_UNDEFINED ? undefined2 : result2;
          }
          return hasOwnProperty2.call(data, key) ? data[key] : undefined2;
        }
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate ? data[key] !== undefined2 : hasOwnProperty2.call(data, key);
        }
        function hashSet(key, value) {
          var data = this.__data__;
          this.size += this.has(key) ? 0 : 1;
          data[key] = nativeCreate && value === undefined2 ? HASH_UNDEFINED : value;
          return this;
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        function ListCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear() {
          this.__data__ = [];
          this.size = 0;
        }
        function listCacheDelete(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          --this.size;
          return true;
        }
        function listCacheGet(key) {
          var data = this.__data__, index = assocIndexOf(data, key);
          return index < 0 ? undefined2 : data[index][1];
        }
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }
        function listCacheSet(key, value) {
          var data = this.__data__, index = assocIndexOf(data, key);
          if (index < 0) {
            ++this.size;
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        function MapCache(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear() {
          this.size = 0;
          this.__data__ = {
            "hash": new Hash(),
            "map": new (Map2 || ListCache)(),
            "string": new Hash()
          };
        }
        function mapCacheDelete(key) {
          var result2 = getMapData(this, key)["delete"](key);
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }
        function mapCacheSet(key, value) {
          var data = getMapData(this, key), size2 = data.size;
          data.set(key, value);
          this.size += data.size == size2 ? 0 : 1;
          return this;
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        function SetCache(values2) {
          var index = -1, length = values2 == null ? 0 : values2.length;
          this.__data__ = new MapCache();
          while (++index < length) {
            this.add(values2[index]);
          }
        }
        function setCacheAdd(value) {
          this.__data__.set(value, HASH_UNDEFINED);
          return this;
        }
        function setCacheHas(value) {
          return this.__data__.has(value);
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        function Stack(entries) {
          var data = this.__data__ = new ListCache(entries);
          this.size = data.size;
        }
        function stackClear() {
          this.__data__ = new ListCache();
          this.size = 0;
        }
        function stackDelete(key) {
          var data = this.__data__, result2 = data["delete"](key);
          this.size = data.size;
          return result2;
        }
        function stackGet(key) {
          return this.__data__.get(key);
        }
        function stackHas(key) {
          return this.__data__.has(key);
        }
        function stackSet(key, value) {
          var data = this.__data__;
          if (data instanceof ListCache) {
            var pairs = data.__data__;
            if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
              pairs.push([key, value]);
              this.size = ++data.size;
              return this;
            }
            data = this.__data__ = new MapCache(pairs);
          }
          data.set(key, value);
          this.size = data.size;
          return this;
        }
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        function arrayLikeKeys(value, inherited) {
          var isArr = isArray2(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer2(value), isType = !isArr && !isArg && !isBuff && isTypedArray2(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
          for (var key in value) {
            if ((inherited || hasOwnProperty2.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
            (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
            isIndex(key, length)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function arraySample(array) {
          var length = array.length;
          return length ? array[baseRandom(0, length - 1)] : undefined2;
        }
        function arraySampleSize(array, n) {
          return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
        }
        function arrayShuffle(array) {
          return shuffleSelf(copyArray(array));
        }
        function assignMergeValue(object, key, value) {
          if (value !== undefined2 && !eq(object[key], value) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assignValue(object, key, value) {
          var objValue = object[key];
          if (!(hasOwnProperty2.call(object, key) && eq(objValue, value)) || value === undefined2 && !(key in object)) {
            baseAssignValue(object, key, value);
          }
        }
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee2, accumulator) {
          baseEach(collection, function(value, key, collection2) {
            setter(accumulator, value, iteratee2(value), collection2);
          });
          return accumulator;
        }
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }
        function baseAssignIn(object, source) {
          return object && copyObject(source, keysIn(source), object);
        }
        function baseAssignValue(object, key, value) {
          if (key == "__proto__" && defineProperty) {
            defineProperty(object, key, {
              "configurable": true,
              "enumerable": true,
              "value": value,
              "writable": true
            });
          } else {
            object[key] = value;
          }
        }
        function baseAt(object, paths) {
          var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
          while (++index < length) {
            result2[index] = skip ? undefined2 : get2(object, paths[index]);
          }
          return result2;
        }
        function baseClamp(number, lower, upper) {
          if (number === number) {
            if (upper !== undefined2) {
              number = number <= upper ? number : upper;
            }
            if (lower !== undefined2) {
              number = number >= lower ? number : lower;
            }
          }
          return number;
        }
        function baseClone(value, bitmask, customizer, key, object, stack) {
          var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
          if (customizer) {
            result2 = object ? customizer(value, key, object, stack) : customizer(value);
          }
          if (result2 !== undefined2) {
            return result2;
          }
          if (!isObject2(value)) {
            return value;
          }
          var isArr = isArray2(value);
          if (isArr) {
            result2 = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result2);
            }
          } else {
            var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
            if (isBuffer2(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || isFunc && !object) {
              result2 = isFlat || isFunc ? {} : initCloneObject(value);
              if (!isDeep) {
                return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result2 = initCloneByTag(value, tag, isDeep);
            }
          }
          stack || (stack = new Stack());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result2);
          if (isSet(value)) {
            value.forEach(function(subValue) {
              result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
          } else if (isMap(value)) {
            value.forEach(function(subValue, key2) {
              result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
            });
          }
          var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
          var props = isArr ? undefined2 : keysFunc(value);
          arrayEach(props || value, function(subValue, key2) {
            if (props) {
              key2 = subValue;
              subValue = value[key2];
            }
            assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
          });
          return result2;
        }
        function baseConforms(source) {
          var props = keys(source);
          return function(object) {
            return baseConformsTo(object, source, props);
          };
        }
        function baseConformsTo(object, source, props) {
          var length = props.length;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (length--) {
            var key = props[length], predicate = source[key], value = object[key];
            if (value === undefined2 && !(key in object) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseDelay(func, wait, args) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return setTimeout2(function() {
            func.apply(undefined2, args);
          }, wait);
        }
        function baseDifference(array, values2, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
          if (!length) {
            return result2;
          }
          if (iteratee2) {
            values2 = arrayMap(values2, baseUnary(iteratee2));
          }
          if (comparator) {
            includes2 = arrayIncludesWith;
            isCommon = false;
          } else if (values2.length >= LARGE_ARRAY_SIZE) {
            includes2 = cacheHas;
            isCommon = false;
            values2 = new SetCache(values2);
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values2[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result2.push(value);
              } else if (!includes2(values2, computed, comparator)) {
                result2.push(value);
              }
            }
          return result2;
        }
        var baseEach = createBaseEach(baseForOwn);
        var baseEachRight = createBaseEach(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result2 = true;
          baseEach(collection, function(value, index, collection2) {
            result2 = !!predicate(value, index, collection2);
            return result2;
          });
          return result2;
        }
        function baseExtremum(array, iteratee2, comparator) {
          var index = -1, length = array.length;
          while (++index < length) {
            var value = array[index], current = iteratee2(value);
            if (current != null && (computed === undefined2 ? current === current && !isSymbol(current) : comparator(current, computed))) {
              var computed = current, result2 = value;
            }
          }
          return result2;
        }
        function baseFill(array, value, start, end) {
          var length = array.length;
          start = toInteger(start);
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end === undefined2 || end > length ? length : toInteger(end);
          if (end < 0) {
            end += length;
          }
          end = start > end ? 0 : toLength(end);
          while (start < end) {
            array[start++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result2 = [];
          baseEach(collection, function(value, index, collection2) {
            if (predicate(value, index, collection2)) {
              result2.push(value);
            }
          });
          return result2;
        }
        function baseFlatten(array, depth, predicate, isStrict, result2) {
          var index = -1, length = array.length;
          predicate || (predicate = isFlattenable);
          result2 || (result2 = []);
          while (++index < length) {
            var value = array[index];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten(value, depth - 1, predicate, isStrict, result2);
              } else {
                arrayPush(result2, value);
              }
            } else if (!isStrict) {
              result2[result2.length] = value;
            }
          }
          return result2;
        }
        var baseFor = createBaseFor();
        var baseForRight = createBaseFor(true);
        function baseForOwn(object, iteratee2) {
          return object && baseFor(object, iteratee2, keys);
        }
        function baseForOwnRight(object, iteratee2) {
          return object && baseForRight(object, iteratee2, keys);
        }
        function baseFunctions(object, props) {
          return arrayFilter(props, function(key) {
            return isFunction2(object[key]);
          });
        }
        function baseGet(object, path2) {
          path2 = castPath(path2, object);
          var index = 0, length = path2.length;
          while (object != null && index < length) {
            object = object[toKey(path2[index++])];
          }
          return index && index == length ? object : undefined2;
        }
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result2 = keysFunc(object);
          return isArray2(object) ? result2 : arrayPush(result2, symbolsFunc(object));
        }
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined2 ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key) {
          return object != null && hasOwnProperty2.call(object, key);
        }
        function baseHasIn(object, key) {
          return object != null && key in Object2(object);
        }
        function baseInRange(number, start, end) {
          return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        function baseIntersection(arrays, iteratee2, comparator) {
          var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee2) {
              array = arrayMap(array, baseUnary(iteratee2));
            }
            maxLength = nativeMin(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined2;
          }
          array = arrays[0];
          var index = -1, seen = caches[0];
          outer:
            while (++index < length && result2.length < maxLength) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseInverter(object, setter, iteratee2, accumulator) {
          baseForOwn(object, function(value, key, object2) {
            setter(accumulator, iteratee2(value), key, object2);
          });
          return accumulator;
        }
        function baseInvoke(object, path2, args) {
          path2 = castPath(path2, object);
          object = parent(object, path2);
          var func = object == null ? object : object[toKey(last(path2))];
          return func == null ? undefined2 : apply(func, object, args);
        }
        function baseIsArguments(value) {
          return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
        }
        function baseIsDate(value) {
          return isObjectLike(value) && baseGetTag(value) == dateTag;
        }
        function baseIsEqual(value, other, bitmask, customizer, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
          var objIsArr = isArray2(object), othIsArr = isArray2(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
          objTag = objTag == argsTag ? objectTag : objTag;
          othTag = othTag == argsTag ? objectTag : othTag;
          var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
          if (isSameTag && isBuffer2(object)) {
            if (!isBuffer2(other)) {
              return false;
            }
            objIsArr = true;
            objIsObj = false;
          }
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack());
            return objIsArr || isTypedArray2(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
          }
          if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
            var objIsWrapped = objIsObj && hasOwnProperty2.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty2.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack());
              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack());
          return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        function baseIsMap(value) {
          return isObjectLike(value) && getTag(value) == mapTag;
        }
        function baseIsMatch(object, source, matchData, customizer) {
          var index = matchData.length, length = index, noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (index--) {
            var data = matchData[index];
            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
              return false;
            }
          }
          while (++index < length) {
            data = matchData[index];
            var key = data[0], objValue = object[key], srcValue = data[1];
            if (noCustomizer && data[2]) {
              if (objValue === undefined2 && !(key in object)) {
                return false;
              }
            } else {
              var stack = new Stack();
              if (customizer) {
                var result2 = customizer(objValue, srcValue, key, object, source, stack);
              }
              if (!(result2 === undefined2 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative(value) {
          if (!isObject2(value) || isMasked(value)) {
            return false;
          }
          var pattern = isFunction2(value) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }
        function baseIsRegExp(value) {
          return isObjectLike(value) && baseGetTag(value) == regexpTag;
        }
        function baseIsSet(value) {
          return isObjectLike(value) && getTag(value) == setTag;
        }
        function baseIsTypedArray(value) {
          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        function baseIteratee(value) {
          if (typeof value == "function") {
            return value;
          }
          if (value == null) {
            return identity;
          }
          if (typeof value == "object") {
            return isArray2(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
          }
          return property(value);
        }
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result2 = [];
          for (var key in Object2(object)) {
            if (hasOwnProperty2.call(object, key) && key != "constructor") {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseKeysIn(object) {
          if (!isObject2(object)) {
            return nativeKeysIn(object);
          }
          var isProto = isPrototype(object), result2 = [];
          for (var key in object) {
            if (!(key == "constructor" && (isProto || !hasOwnProperty2.call(object, key)))) {
              result2.push(key);
            }
          }
          return result2;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap(collection, iteratee2) {
          var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value, key, collection2) {
            result2[++index] = iteratee2(value, key, collection2);
          });
          return result2;
        }
        function baseMatches(source) {
          var matchData = getMatchData(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch(object, source, matchData);
          };
        }
        function baseMatchesProperty(path2, srcValue) {
          if (isKey(path2) && isStrictComparable(srcValue)) {
            return matchesStrictComparable(toKey(path2), srcValue);
          }
          return function(object) {
            var objValue = get2(object, path2);
            return objValue === undefined2 && objValue === srcValue ? hasIn(object, path2) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
          };
        }
        function baseMerge(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          baseFor(source, function(srcValue, key) {
            stack || (stack = new Stack());
            if (isObject2(srcValue)) {
              baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
            } else {
              var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined2;
              if (newValue === undefined2) {
                newValue = srcValue;
              }
              assignMergeValue(object, key, newValue);
            }
          }, keysIn);
        }
        function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
          var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue(object, key, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined2;
          var isCommon = newValue === undefined2;
          if (isCommon) {
            var isArr = isArray2(srcValue), isBuff = !isArr && isBuffer2(srcValue), isTyped = !isArr && !isBuff && isTypedArray2(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
              if (isArray2(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject(objValue)) {
                newValue = copyArray(objValue);
              } else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray(srcValue, true);
              } else {
                newValue = [];
              }
            } else if (isPlainObject2(srcValue) || isArguments(srcValue)) {
              newValue = objValue;
              if (isArguments(objValue)) {
                newValue = toPlainObject(objValue);
              } else if (!isObject2(objValue) || isFunction2(objValue)) {
                newValue = initCloneObject(srcValue);
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack["delete"](srcValue);
          }
          assignMergeValue(object, key, newValue);
        }
        function baseNth(array, n) {
          var length = array.length;
          if (!length) {
            return;
          }
          n += n < 0 ? length : 0;
          return isIndex(n, length) ? array[n] : undefined2;
        }
        function baseOrderBy(collection, iteratees, orders) {
          if (iteratees.length) {
            iteratees = arrayMap(iteratees, function(iteratee2) {
              if (isArray2(iteratee2)) {
                return function(value) {
                  return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                };
              }
              return iteratee2;
            });
          } else {
            iteratees = [identity];
          }
          var index = -1;
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          var result2 = baseMap(collection, function(value, key, collection2) {
            var criteria = arrayMap(iteratees, function(iteratee2) {
              return iteratee2(value);
            });
            return { "criteria": criteria, "index": ++index, "value": value };
          });
          return baseSortBy(result2, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick(object, paths) {
          return basePickBy(object, paths, function(value, path2) {
            return hasIn(object, path2);
          });
        }
        function basePickBy(object, paths, predicate) {
          var index = -1, length = paths.length, result2 = {};
          while (++index < length) {
            var path2 = paths[index], value = baseGet(object, path2);
            if (predicate(value, path2)) {
              baseSet(result2, castPath(path2, object), value);
            }
          }
          return result2;
        }
        function basePropertyDeep(path2) {
          return function(object) {
            return baseGet(object, path2);
          };
        }
        function basePullAll(array, values2, iteratee2, comparator) {
          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
          if (array === values2) {
            values2 = copyArray(values2);
          }
          if (iteratee2) {
            seen = arrayMap(array, baseUnary(iteratee2));
          }
          while (++index < length) {
            var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
            while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
              if (seen !== array) {
                splice.call(seen, fromIndex, 1);
              }
              splice.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0, lastIndex = length - 1;
          while (length--) {
            var index = indexes[length];
            if (length == lastIndex || index !== previous) {
              var previous = index;
              if (isIndex(index)) {
                splice.call(array, index, 1);
              } else {
                baseUnset(array, index);
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        function baseRange(start, end, step, fromRight) {
          var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
          while (length--) {
            result2[fromRight ? length : ++index] = start;
            start += step;
          }
          return result2;
        }
        function baseRepeat(string, n) {
          var result2 = "";
          if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
            return result2;
          }
          do {
            if (n % 2) {
              result2 += string;
            }
            n = nativeFloor(n / 2);
            if (n) {
              string += string;
            }
          } while (n);
          return result2;
        }
        function baseRest(func, start) {
          return setToString(overRest(func, start, identity), func + "");
        }
        function baseSample(collection) {
          return arraySample(values(collection));
        }
        function baseSampleSize(collection, n) {
          var array = values(collection);
          return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        function baseSet(object, path2, value, customizer) {
          if (!isObject2(object)) {
            return object;
          }
          path2 = castPath(path2, object);
          var index = -1, length = path2.length, lastIndex = length - 1, nested = object;
          while (nested != null && ++index < length) {
            var key = toKey(path2[index]), newValue = value;
            if (key === "__proto__" || key === "constructor" || key === "prototype") {
              return object;
            }
            if (index != lastIndex) {
              var objValue = nested[key];
              newValue = customizer ? customizer(objValue, key, nested) : undefined2;
              if (newValue === undefined2) {
                newValue = isObject2(objValue) ? objValue : isIndex(path2[index + 1]) ? [] : {};
              }
            }
            assignValue(nested, key, newValue);
            nested = nested[key];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity : function(func, data) {
          metaMap.set(func, data);
          return func;
        };
        var baseSetToString = !defineProperty ? identity : function(func, string) {
          return defineProperty(func, "toString", {
            "configurable": true,
            "enumerable": false,
            "value": constant(string),
            "writable": true
          });
        };
        function baseShuffle(collection) {
          return shuffleSelf(values(collection));
        }
        function baseSlice(array, start, end) {
          var index = -1, length = array.length;
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end > length ? length : end;
          if (end < 0) {
            end += length;
          }
          length = start > end ? 0 : end - start >>> 0;
          start >>>= 0;
          var result2 = Array2(length);
          while (++index < length) {
            result2[index] = array[index + start];
          }
          return result2;
        }
        function baseSome(collection, predicate) {
          var result2;
          baseEach(collection, function(value, index, collection2) {
            result2 = predicate(value, index, collection2);
            return !result2;
          });
          return !!result2;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0, high = array == null ? low : array.length;
          if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = low + high >>> 1, computed = array[mid];
              if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee2, retHighest) {
          var low = 0, high = array == null ? 0 : array.length;
          if (high === 0) {
            return 0;
          }
          value = iteratee2(value);
          var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined2;
          while (low < high) {
            var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? computed <= value : computed < value;
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee2) {
          var index = -1, length = array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
            if (!index || !eq(computed, seen)) {
              var seen = computed;
              result2[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result2;
        }
        function baseToNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          return +value;
        }
        function baseToString(value) {
          if (typeof value == "string") {
            return value;
          }
          if (isArray2(value)) {
            return arrayMap(value, baseToString) + "";
          }
          if (isSymbol(value)) {
            return symbolToString ? symbolToString.call(value) : "";
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function baseUniq(array, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
          if (comparator) {
            isCommon = false;
            includes2 = arrayIncludesWith;
          } else if (length >= LARGE_ARRAY_SIZE) {
            var set2 = iteratee2 ? null : createSet(array);
            if (set2) {
              return setToArray(set2);
            }
            isCommon = false;
            includes2 = cacheHas;
            seen = new SetCache();
          } else {
            seen = iteratee2 ? [] : result2;
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) {
                  if (seen[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee2) {
                  seen.push(computed);
                }
                result2.push(value);
              } else if (!includes2(seen, computed, comparator)) {
                if (seen !== result2) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseUnset(object, path2) {
          path2 = castPath(path2, object);
          object = parent(object, path2);
          return object == null || delete object[toKey(last(path2))];
        }
        function baseUpdate(object, path2, updater, customizer) {
          return baseSet(object, path2, updater(baseGet(object, path2)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length, index = fromRight ? length : -1;
          while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
          }
          return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        function baseWrapperValue(value, actions) {
          var result2 = value;
          if (result2 instanceof LazyWrapper) {
            result2 = result2.value();
          }
          return arrayReduce(actions, function(result3, action) {
            return action.func.apply(action.thisArg, arrayPush([result3], action.args));
          }, result2);
        }
        function baseXor(arrays, iteratee2, comparator) {
          var length = arrays.length;
          if (length < 2) {
            return length ? baseUniq(arrays[0]) : [];
          }
          var index = -1, result2 = Array2(length);
          while (++index < length) {
            var array = arrays[index], othIndex = -1;
            while (++othIndex < length) {
              if (othIndex != index) {
                result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
              }
            }
          }
          return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
        }
        function baseZipObject(props, values2, assignFunc) {
          var index = -1, length = props.length, valsLength = values2.length, result2 = {};
          while (++index < length) {
            var value = index < valsLength ? values2[index] : undefined2;
            assignFunc(result2, props[index], value);
          }
          return result2;
        }
        function castArrayLikeObject(value) {
          return isArrayLikeObject(value) ? value : [];
        }
        function castFunction(value) {
          return typeof value == "function" ? value : identity;
        }
        function castPath(value, object) {
          if (isArray2(value)) {
            return value;
          }
          return isKey(value, object) ? [value] : stringToPath(toString3(value));
        }
        var castRest = baseRest;
        function castSlice(array, start, end) {
          var length = array.length;
          end = end === undefined2 ? length : end;
          return !start && end >= length ? array : baseSlice(array, start, end);
        }
        var clearTimeout2 = ctxClearTimeout || function(id) {
          return root.clearTimeout(id);
        };
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
          buffer.copy(result2);
          return result2;
        }
        function cloneArrayBuffer(arrayBuffer) {
          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
          return result2;
        }
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneRegExp(regexp) {
          var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result2.lastIndex = regexp.lastIndex;
          return result2;
        }
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
        }
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
            var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
              return 1;
            }
            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
          while (++index < length) {
            var result2 = compareAscending(objCriteria[index], othCriteria[index]);
            if (result2) {
              if (index >= ordersLength) {
                return result2;
              }
              var order = orders[index];
              return result2 * (order == "desc" ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result2[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result2[leftIndex++] = args[argsIndex++];
          }
          return result2;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result2[argsIndex] = args[argsIndex];
          }
          var offset = argsIndex;
          while (++rightIndex < rightLength) {
            result2[offset + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[offset + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result2;
        }
        function copyArray(source, array) {
          var index = -1, length = source.length;
          array || (array = Array2(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }
        function copyObject(source, props, object, customizer) {
          var isNew = !object;
          object || (object = {});
          var index = -1, length = props.length;
          while (++index < length) {
            var key = props[index];
            var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined2;
            if (newValue === undefined2) {
              newValue = source[key];
            }
            if (isNew) {
              baseAssignValue(object, key, newValue);
            } else {
              assignValue(object, key, newValue);
            }
          }
          return object;
        }
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }
        function copySymbolsIn(source, object) {
          return copyObject(source, getSymbolsIn(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee2) {
            var func = isArray2(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
          };
        }
        function createAssigner(assigner) {
          return baseRest(function(object, sources) {
            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
            customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined2 : customizer;
              length = 1;
            }
            object = Object2(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach(eachFunc, fromRight) {
          return function(collection, iteratee2) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike(collection)) {
              return eachFunc(collection, iteratee2);
            }
            var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
            while (fromRight ? index-- : ++index < length) {
              if (iteratee2(iterable[index], index, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor(fromRight) {
          return function(object, iteratee2, keysFunc) {
            var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
            while (length--) {
              var key = props[fromRight ? length : ++index];
              if (iteratee2(iterable[key], key, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            return fn.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst(methodName) {
          return function(string) {
            string = toString3(string);
            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined2;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder(callback) {
          return function(string) {
            return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor();
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
            return isObject2(result2) ? result2 : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
            while (index--) {
              args[index] = arguments[index];
            }
            var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                undefined2,
                args,
                holders,
                undefined2,
                undefined2,
                arity - length
              );
            }
            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            return apply(fn, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object2(collection);
            if (!isArrayLike(collection)) {
              var iteratee2 = getIteratee(predicate, 3);
              collection = keys(collection);
              predicate = function(key) {
                return iteratee2(iterable[key], key, iterable);
              };
            }
            var index = findIndexFunc(collection, predicate, fromIndex);
            return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined2;
          };
        }
        function createFlow(fromRight) {
          return flatRest(function(funcs) {
            var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index--) {
              var func = funcs[index];
              if (typeof func != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT);
              }
              if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index = wrapper ? index : length;
            while (++index < length) {
              func = funcs[index];
              var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined2;
              if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
              } else {
                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments, value = args[0];
              if (wrapper && args.length == 1 && isArray2(value)) {
                return wrapper.plant(value).value();
              }
              var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
              while (++index2 < length) {
                result2 = funcs[index2].call(this, result2);
              }
              return result2;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length;
            while (index--) {
              args[index] = arguments[index];
            }
            if (isCurried) {
              var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder);
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                thisArg,
                args,
                newHolders,
                argPos,
                ary2,
                arity - length
              );
            }
            var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary2 < length) {
              args.length = ary2;
            }
            if (this && this !== root && this instanceof wrapper) {
              fn = Ctor || createCtor(fn);
            }
            return fn.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee2) {
            return baseInverter(object, setter, toIteratee(iteratee2), {});
          };
        }
        function createMathOperation(operator, defaultValue) {
          return function(value, other) {
            var result2;
            if (value === undefined2 && other === undefined2) {
              return defaultValue;
            }
            if (value !== undefined2) {
              result2 = value;
            }
            if (other !== undefined2) {
              if (result2 === undefined2) {
                return other;
              }
              if (typeof value == "string" || typeof other == "string") {
                value = baseToString(value);
                other = baseToString(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result2 = operator(value, other);
            }
            return result2;
          };
        }
        function createOver(arrayFunc) {
          return flatRest(function(iteratees) {
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            return baseRest(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee2) {
                return apply(iteratee2, thisArg, args);
              });
            });
          });
        }
        function createPadding(length, chars) {
          chars = chars === undefined2 ? " " : baseToString(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat(chars, length) : chars;
          }
          var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
          return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply(fn, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange(fromRight) {
          return function(start, end, step) {
            if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
              end = step = undefined2;
            }
            start = toFinite(start);
            if (end === undefined2) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            step = step === undefined2 ? start < end ? 1 : -1 : toFinite(step);
            return baseRange(start, end, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == "string" && typeof other == "string")) {
              value = toNumber(value);
              other = toNumber(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
          bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
          if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
          }
          var newData = [
            func,
            bitmask,
            thisArg,
            newPartials,
            newHolders,
            newPartialsRight,
            newHoldersRight,
            argPos,
            ary2,
            arity
          ];
          var result2 = wrapFunc.apply(undefined2, newData);
          if (isLaziable(func)) {
            setData(result2, newData);
          }
          result2.placeholder = placeholder;
          return setWrapToString(result2, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math2[methodName];
          return function(number, precision) {
            number = toNumber(number);
            precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
            if (precision && nativeIsFinite(number)) {
              var pair = (toString3(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
              pair = (toString3(value) + "e").split("e");
              return +(pair[0] + "e" + (+pair[1] - precision));
            }
            return func(number);
          };
        }
        var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop2 : function(values2) {
          return new Set2(values2);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag(object);
            if (tag == mapTag) {
              return mapToArray(object);
            }
            if (tag == setTag) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
          if (!isBindKey && typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
            partials = holders = undefined2;
          }
          ary2 = ary2 === undefined2 ? ary2 : nativeMax(toInteger(ary2), 0);
          arity = arity === undefined2 ? arity : toInteger(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials, holdersRight = holders;
            partials = holders = undefined2;
          }
          var data = isBindKey ? undefined2 : getData(func);
          var newData = [
            func,
            bitmask,
            thisArg,
            partials,
            holders,
            partialsRight,
            holdersRight,
            argPos,
            ary2,
            arity
          ];
          if (data) {
            mergeData(newData, data);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
          if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == WRAP_BIND_FLAG) {
            var result2 = createBind(func, bitmask, thisArg);
          } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
            result2 = createCurry(func, bitmask, arity);
          } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
            result2 = createPartial(func, bitmask, thisArg, partials);
          } else {
            result2 = createHybrid.apply(undefined2, newData);
          }
          var setter = data ? baseSetData : setData;
          return setWrapToString(setter(result2, newData), func, bitmask);
        }
        function customDefaultsAssignIn(objValue, srcValue, key, object) {
          if (objValue === undefined2 || eq(objValue, objectProto[key]) && !hasOwnProperty2.call(object, key)) {
            return srcValue;
          }
          return objValue;
        }
        function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
          if (isObject2(objValue) && isObject2(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge(objValue, srcValue, undefined2, customDefaultsMerge, stack);
            stack["delete"](srcValue);
          }
          return objValue;
        }
        function customOmitClone(value) {
          return isPlainObject2(value) ? undefined2 : value;
        }
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var arrStacked = stack.get(array);
          var othStacked = stack.get(other);
          if (arrStacked && othStacked) {
            return arrStacked == other && othStacked == array;
          }
          var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined2;
          stack.set(array, other);
          stack.set(other, array);
          while (++index < arrLength) {
            var arrValue = array[index], othValue = other[index];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            }
            if (compared !== undefined2) {
              if (compared) {
                continue;
              }
              result2 = false;
              break;
            }
            if (seen) {
              if (!arraySome(other, function(othValue2, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
                result2 = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              result2 = false;
              break;
            }
          }
          stack["delete"](array);
          stack["delete"](other);
          return result2;
        }
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
          switch (tag) {
            case dataViewTag:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                return false;
              }
              return true;
            case boolTag:
            case dateTag:
            case numberTag:
              return eq(+object, +other);
            case errorTag:
              return object.name == other.name && object.message == other.message;
            case regexpTag:
            case stringTag:
              return object == other + "";
            case mapTag:
              var convert = mapToArray;
            case setTag:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
              convert || (convert = setToArray);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= COMPARE_UNORDERED_FLAG;
              stack.set(object, other);
              var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result2;
            case symbolTag:
              if (symbolValueOf) {
                return symbolValueOf.call(object) == symbolValueOf.call(other);
              }
          }
          return false;
        }
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index = objLength;
          while (index--) {
            var key = objProps[index];
            if (!(isPartial ? key in other : hasOwnProperty2.call(other, key))) {
              return false;
            }
          }
          var objStacked = stack.get(object);
          var othStacked = stack.get(other);
          if (objStacked && othStacked) {
            return objStacked == other && othStacked == object;
          }
          var result2 = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index < objLength) {
            key = objProps[index];
            var objValue = object[key], othValue = other[key];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
            }
            if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
              result2 = false;
              break;
            }
            skipCtor || (skipCtor = key == "constructor");
          }
          if (result2 && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
              result2 = false;
            }
          }
          stack["delete"](object);
          stack["delete"](other);
          return result2;
        }
        function flatRest(func) {
          return setToString(overRest(func, undefined2, flatten), func + "");
        }
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }
        function getAllKeysIn(object) {
          return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        var getData = !metaMap ? noop2 : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty2.call(realNames, result2) ? array.length : 0;
          while (length--) {
            var data = array[length], otherFunc = data.func;
            if (otherFunc == null || otherFunc == func) {
              return data.name;
            }
          }
          return result2;
        }
        function getHolder(func) {
          var object = hasOwnProperty2.call(lodash, "placeholder") ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result2 = lodash.iteratee || iteratee;
          result2 = result2 === iteratee ? baseIteratee : result2;
          return arguments.length ? result2(arguments[0], arguments[1]) : result2;
        }
        function getMapData(map2, key) {
          var data = map2.__data__;
          return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        function getMatchData(object) {
          var result2 = keys(object), length = result2.length;
          while (length--) {
            var key = result2[length], value = object[key];
            result2[length] = [key, value, isStrictComparable(value)];
          }
          return result2;
        }
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined2;
        }
        function getRawTag(value) {
          var isOwn = hasOwnProperty2.call(value, symToStringTag), tag = value[symToStringTag];
          try {
            value[symToStringTag] = undefined2;
            var unmasked = true;
          } catch (e) {
          }
          var result2 = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result2;
        }
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
          if (object == null) {
            return [];
          }
          object = Object2(object);
          return arrayFilter(nativeGetSymbols(object), function(symbol) {
            return propertyIsEnumerable.call(object, symbol);
          });
        };
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
          var result2 = [];
          while (object) {
            arrayPush(result2, getSymbols(object));
            object = getPrototype(object);
          }
          return result2;
        };
        var getTag = baseGetTag;
        if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
          getTag = function(value) {
            var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined2, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result2;
          };
        }
        function getView(start, end, transforms) {
          var index = -1, length = transforms.length;
          while (++index < length) {
            var data = transforms[index], size2 = data.size;
            switch (data.type) {
              case "drop":
                start += size2;
                break;
              case "dropRight":
                end -= size2;
                break;
              case "take":
                end = nativeMin(end, start + size2);
                break;
              case "takeRight":
                start = nativeMax(start, end - size2);
                break;
            }
          }
          return { "start": start, "end": end };
        }
        function getWrapDetails(source) {
          var match = source.match(reWrapDetails);
          return match ? match[1].split(reSplitDetails) : [];
        }
        function hasPath(object, path2, hasFunc) {
          path2 = castPath(path2, object);
          var index = -1, length = path2.length, result2 = false;
          while (++index < length) {
            var key = toKey(path2[index]);
            if (!(result2 = object != null && hasFunc(object, key))) {
              break;
            }
            object = object[key];
          }
          if (result2 || ++index != length) {
            return result2;
          }
          length = object == null ? 0 : object.length;
          return !!length && isLength(length) && isIndex(key, length) && (isArray2(object) || isArguments(object));
        }
        function initCloneArray(array) {
          var length = array.length, result2 = new array.constructor(length);
          if (length && typeof array[0] == "string" && hasOwnProperty2.call(array, "index")) {
            result2.index = array.index;
            result2.input = array.input;
          }
          return result2;
        }
        function initCloneObject(object) {
          return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
        }
        function initCloneByTag(object, tag, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);
            case boolTag:
            case dateTag:
              return new Ctor(+object);
            case dataViewTag:
              return cloneDataView(object, isDeep);
            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);
            case mapTag:
              return new Ctor();
            case numberTag:
            case stringTag:
              return new Ctor(object);
            case regexpTag:
              return cloneRegExp(object);
            case setTag:
              return new Ctor();
            case symbolTag:
              return cloneSymbol(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length;
          if (!length) {
            return source;
          }
          var lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
          details = details.join(length > 2 ? ", " : " ");
          return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        function isFlattenable(value) {
          return isArray2(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        function isIndex(value, length) {
          var type = typeof value;
          length = length == null ? MAX_SAFE_INTEGER : length;
          return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall(value, index, object) {
          if (!isObject2(object)) {
            return false;
          }
          var type = typeof index;
          if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
            return eq(object[index], value);
          }
          return false;
        }
        function isKey(value, object) {
          if (isArray2(value)) {
            return false;
          }
          var type = typeof value;
          if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
            return true;
          }
          return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
        }
        function isKeyable(value) {
          var type = typeof value;
          return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isLaziable(func) {
          var funcName = getFuncName(func), other = lodash[funcName];
          if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data = getData(other);
          return !!data && func === data[0];
        }
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }
        var isMaskable = coreJsData ? isFunction2 : stubFalse;
        function isPrototype(value) {
          var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
          return value === proto;
        }
        function isStrictComparable(value) {
          return value === value && !isObject2(value);
        }
        function matchesStrictComparable(key, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key] === srcValue && (srcValue !== undefined2 || key in Object2(object));
          };
        }
        function memoizeCapped(func) {
          var result2 = memoize(func, function(key) {
            if (cache.size === MAX_MEMOIZE_SIZE) {
              cache.clear();
            }
            return key;
          });
          var cache = result2.cache;
          return result2;
        }
        function mergeData(data, source) {
          var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
          var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
          if (!(isCommon || isCombo)) {
            return data;
          }
          if (srcBitmask & WRAP_BIND_FLAG) {
            data[2] = source[2];
            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data[3];
            data[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data[5];
            data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data[7] = value;
          }
          if (srcBitmask & WRAP_ARY_FLAG) {
            data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
          }
          if (data[9] == null) {
            data[9] = source[9];
          }
          data[0] = source[0];
          data[1] = newBitmask;
          return data;
        }
        function nativeKeysIn(object) {
          var result2 = [];
          if (object != null) {
            for (var key in Object2(object)) {
              result2.push(key);
            }
          }
          return result2;
        }
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }
        function overRest(func, start, transform2) {
          start = nativeMax(start === undefined2 ? func.length - 1 : start, 0);
          return function() {
            var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
            while (++index < length) {
              array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array2(start + 1);
            while (++index < start) {
              otherArgs[index] = args[index];
            }
            otherArgs[start] = transform2(array);
            return apply(func, this, otherArgs);
          };
        }
        function parent(object, path2) {
          return path2.length < 2 ? object : baseGet(object, baseSlice(path2, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
          while (length--) {
            var index = indexes[length];
            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined2;
          }
          return array;
        }
        function safeGet(object, key) {
          if (key === "constructor" && typeof object[key] === "function") {
            return;
          }
          if (key == "__proto__") {
            return;
          }
          return object[key];
        }
        var setData = shortOut(baseSetData);
        var setTimeout2 = ctxSetTimeout || function(func, wait) {
          return root.setTimeout(func, wait);
        };
        var setToString = shortOut(baseSetToString);
        function setWrapToString(wrapper, reference, bitmask) {
          var source = reference + "";
          return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        function shortOut(func) {
          var count = 0, lastCalled = 0;
          return function() {
            var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count >= HOT_COUNT) {
                return arguments[0];
              }
            } else {
              count = 0;
            }
            return func.apply(undefined2, arguments);
          };
        }
        function shuffleSelf(array, size2) {
          var index = -1, length = array.length, lastIndex = length - 1;
          size2 = size2 === undefined2 ? length : size2;
          while (++index < size2) {
            var rand = baseRandom(index, lastIndex), value = array[rand];
            array[rand] = array[index];
            array[index] = value;
          }
          array.length = size2;
          return array;
        }
        var stringToPath = memoizeCapped(function(string) {
          var result2 = [];
          if (string.charCodeAt(0) === 46) {
            result2.push("");
          }
          string.replace(rePropName, function(match, number, quote, subString) {
            result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
          });
          return result2;
        });
        function toKey(value) {
          if (typeof value == "string" || isSymbol(value)) {
            return value;
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
        }
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {
            }
            try {
              return func + "";
            } catch (e) {
            }
          }
          return "";
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach(wrapFlags, function(pair) {
            var value = "_." + pair[0];
            if (bitmask & pair[1] && !arrayIncludes(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result2.__actions__ = copyArray(wrapper.__actions__);
          result2.__index__ = wrapper.__index__;
          result2.__values__ = wrapper.__values__;
          return result2;
        }
        function chunk(array, size2, guard) {
          if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined2) {
            size2 = 1;
          } else {
            size2 = nativeMax(toInteger(size2), 0);
          }
          var length = array == null ? 0 : array.length;
          if (!length || size2 < 1) {
            return [];
          }
          var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
          while (index < length) {
            result2[resIndex++] = baseSlice(array, index, index += size2);
          }
          return result2;
        }
        function compact(array) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index];
            if (value) {
              result2[resIndex++] = value;
            }
          }
          return result2;
        }
        function concat() {
          var length = arguments.length;
          if (!length) {
            return [];
          }
          var args = Array2(length - 1), array = arguments[0], index = length;
          while (index--) {
            args[index - 1] = arguments[index];
          }
          return arrayPush(isArray2(array) ? copyArray(array) : [array], baseFlatten(args, 1));
        }
        var difference = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
        });
        var differenceBy = baseRest(function(array, values2) {
          var iteratee2 = last(values2);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
        });
        var differenceWith = baseRest(function(array, values2) {
          var comparator = last(values2);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined2;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined2, comparator) : [];
        });
        function drop(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function dropRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function dropRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
            start = 0;
            end = length;
          }
          return baseFill(array, value, start, end);
        }
        function findIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length - 1;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        function flatten(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, INFINITY) : [];
        }
        function flattenDepth(array, depth) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(array, depth);
        }
        function fromPairs(pairs) {
          var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
          while (++index < length) {
            var pair = pairs[index];
            result2[pair[0]] = pair[1];
          }
          return result2;
        }
        function head(array) {
          return array && array.length ? array[0] : undefined2;
        }
        function indexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseIndexOf(array, value, index);
        }
        function initial(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 0, -1) : [];
        }
        var intersection = baseRest(function(arrays) {
          var mapped = arrayMap(arrays, castArrayLikeObject);
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        var intersectionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          if (iteratee2 === last(mapped)) {
            iteratee2 = undefined2;
          } else {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
        });
        var intersectionWith = baseRest(function(arrays) {
          var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          if (comparator) {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined2, comparator) : [];
        });
        function join(array, separator) {
          return array == null ? "" : nativeJoin.call(array, separator);
        }
        function last(array) {
          var length = array == null ? 0 : array.length;
          return length ? array[length - 1] : undefined2;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length;
          if (fromIndex !== undefined2) {
            index = toInteger(fromIndex);
            index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        function nth(array, n) {
          return array && array.length ? baseNth(array, toInteger(n)) : undefined2;
        }
        var pull = baseRest(pullAll);
        function pullAll(array, values2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
        }
        function pullAllBy(array, values2, iteratee2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
        }
        function pullAllWith(array, values2, comparator) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined2, comparator) : array;
        }
        var pullAt = flatRest(function(array, indexes) {
          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
          basePullAt(array, arrayMap(indexes, function(index) {
            return isIndex(index, length) ? +index : index;
          }).sort(compareAscending));
          return result2;
        });
        function remove(array, predicate) {
          var result2 = [];
          if (!(array && array.length)) {
            return result2;
          }
          var index = -1, indexes = [], length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result2.push(value);
              indexes.push(index);
            }
          }
          basePullAt(array, indexes);
          return result2;
        }
        function reverse(array) {
          return array == null ? array : nativeReverse.call(array);
        }
        function slice(array, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
            start = 0;
            end = length;
          } else {
            start = start == null ? 0 : toInteger(start);
            end = end === undefined2 ? length : toInteger(end);
          }
          return baseSlice(array, start, end);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value);
            if (index < length && eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value, true) - 1;
            if (eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return array && array.length ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee2) {
          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function tail(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 1, length) : [];
        }
        function take(array, n, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function takeRight(array, n, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n = guard || n === undefined2 ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function takeRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest(function(arrays) {
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        var unionBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
        });
        var unionWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined2, comparator);
        });
        function uniq(array) {
          return array && array.length ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee2) {
          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function uniqWith(array, comparator) {
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return array && array.length ? baseUniq(array, undefined2, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter(array, function(group) {
            if (isArrayLikeObject(group)) {
              length = nativeMax(group.length, length);
              return true;
            }
          });
          return baseTimes(length, function(index) {
            return arrayMap(array, baseProperty(index));
          });
        }
        function unzipWith(array, iteratee2) {
          if (!(array && array.length)) {
            return [];
          }
          var result2 = unzip(array);
          if (iteratee2 == null) {
            return result2;
          }
          return arrayMap(result2, function(group) {
            return apply(iteratee2, undefined2, group);
          });
        }
        var without = baseRest(function(array, values2) {
          return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
        });
        var xor = baseRest(function(arrays) {
          return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        var xorBy = baseRest(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
        });
        var xorWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined2, comparator);
        });
        var zip = baseRest(unzip);
        function zipObject(props, values2) {
          return baseZipObject(props || [], values2 || [], assignValue);
        }
        function zipObjectDeep(props, values2) {
          return baseZipObject(props || [], values2 || [], baseSet);
        }
        var zipWith = baseRest(function(arrays) {
          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
          iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
          return unzipWith(arrays, iteratee2);
        });
        function chain(value) {
          var result2 = lodash(value);
          result2.__chain__ = true;
          return result2;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = flatRest(function(paths) {
          var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
            return baseAt(object, paths);
          };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
            return this.thru(interceptor);
          }
          value = value.slice(start, +start + (length ? 1 : 0));
          value.__actions__.push({
            "func": thru,
            "args": [interceptor],
            "thisArg": undefined2
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined2);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined2) {
            this.__values__ = toArray2(this.value());
          }
          var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
          return { "done": done, "value": value };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result2, parent2 = this;
          while (parent2 instanceof baseLodash) {
            var clone2 = wrapperClone(parent2);
            clone2.__index__ = 0;
            clone2.__values__ = undefined2;
            if (result2) {
              previous.__wrapped__ = clone2;
            } else {
              result2 = clone2;
            }
            var previous = clone2;
            parent2 = parent2.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result2;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              "func": thru,
              "args": [reverse],
              "thisArg": undefined2
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty2.call(result2, key)) {
            ++result2[key];
          } else {
            baseAssignValue(result2, key, 1);
          }
        });
        function every(collection, predicate, guard) {
          var func = isArray2(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter2(collection, predicate) {
          var func = isArray2(collection) ? arrayFilter : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find = createFind(findIndex);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), 1);
        }
        function flatMapDeep(collection, iteratee2) {
          return baseFlatten(map(collection, iteratee2), INFINITY);
        }
        function flatMapDepth(collection, iteratee2, depth) {
          depth = depth === undefined2 ? 1 : toInteger(depth);
          return baseFlatten(map(collection, iteratee2), depth);
        }
        function forEach2(collection, iteratee2) {
          var func = isArray2(collection) ? arrayEach : baseEach;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function forEachRight(collection, iteratee2) {
          var func = isArray2(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee2, 3));
        }
        var groupBy = createAggregator(function(result2, value, key) {
          if (hasOwnProperty2.call(result2, key)) {
            result2[key].push(value);
          } else {
            baseAssignValue(result2, key, [value]);
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike(collection) ? collection : values(collection);
          fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax(length + fromIndex, 0);
          }
          return isString2(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        var invokeMap = baseRest(function(collection, path2, args) {
          var index = -1, isFunc = typeof path2 == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
          baseEach(collection, function(value) {
            result2[++index] = isFunc ? apply(path2, value, args) : baseInvoke(value, path2, args);
          });
          return result2;
        });
        var keyBy = createAggregator(function(result2, value, key) {
          baseAssignValue(result2, key, value);
        });
        function map(collection, iteratee2) {
          var func = isArray2(collection) ? arrayMap : baseMap;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray2(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined2 : orders;
          if (!isArray2(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result2, value, key) {
          result2[key ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee2, accumulator) {
          var func = isArray2(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
        }
        function reduceRight(collection, iteratee2, accumulator) {
          var func = isArray2(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray2(collection) ? arrayFilter : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var func = isArray2(collection) ? arraySample : baseSample;
          return func(collection);
        }
        function sampleSize(collection, n, guard) {
          if (guard ? isIterateeCall(collection, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          var func = isArray2(collection) ? arraySampleSize : baseSampleSize;
          return func(collection, n);
        }
        function shuffle(collection) {
          var func = isArray2(collection) ? arrayShuffle : baseShuffle;
          return func(collection);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike(collection)) {
            return isString2(collection) ? stringSize(collection) : collection.length;
          }
          var tag = getTag(collection);
          if (tag == mapTag || tag == setTag) {
            return collection.size;
          }
          return baseKeys(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray2(collection) ? arraySome : baseSome;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        var now = ctxNow || function() {
          return root.Date.now();
        };
        function after(n, func) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n, guard) {
          n = guard ? undefined2 : n;
          n = func && n == null ? func.length : n;
          return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n);
        }
        function before(n, func) {
          var result2;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n > 0) {
              result2 = func.apply(this, arguments);
            }
            if (n <= 1) {
              func = undefined2;
            }
            return result2;
          };
        }
        var bind2 = baseRest(function(func, thisArg, partials) {
          var bitmask = WRAP_BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind2));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest(function(object, key, partials) {
          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(key, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curry.placeholder;
          return result2;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curryRight.placeholder;
          return result2;
        }
        function debounce(func, wait, options) {
          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject2(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined2;
            lastInvokeTime = time;
            result2 = func.apply(thisArg, args);
            return result2;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout2(timerExpired, wait);
            return leading ? invokeFunc(time) : result2;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
            return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
            return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
          }
          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout2(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined2;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined2;
            return result2;
          }
          function cancel() {
            if (timerId !== undefined2) {
              clearTimeout2(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined2;
          }
          function flush() {
            return timerId === undefined2 ? result2 : trailingEdge(now());
          }
          function debounced() {
            var time = now(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined2) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                clearTimeout2(timerId);
                timerId = setTimeout2(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined2) {
              timerId = setTimeout2(timerExpired, wait);
            }
            return result2;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest(function(func, wait, args) {
          return baseDelay(func, toNumber(wait) || 0, args);
        });
        function flip(func) {
          return createWrap(func, WRAP_FLIP_FLAG);
        }
        function memoize(func, resolver) {
          if (typeof func != "function" || resolver != null && typeof resolver != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          var memoized = function() {
            var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
            if (cache.has(key)) {
              return cache.get(key);
            }
            var result2 = func.apply(this, args);
            memoized.cache = cache.set(key, result2) || cache;
            return result2;
          };
          memoized.cache = new (memoize.Cache || MapCache)();
          return memoized;
        }
        memoize.Cache = MapCache;
        function negate(predicate) {
          if (typeof predicate != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = castRest(function(func, transforms) {
          transforms = transforms.length == 1 && isArray2(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest(function(args) {
            var index = -1, length = nativeMin(args.length, funcsLength);
            while (++index < length) {
              args[index] = transforms[index].call(this, args[index]);
            }
            return apply(func, this, args);
          });
        });
        var partial = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
        });
        var partialRight = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
        });
        var rearg = flatRest(function(func, indexes) {
          return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
        });
        function rest(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start = start === undefined2 ? start : toInteger(start);
          return baseRest(func, start);
        }
        function spread3(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          start = start == null ? 0 : nativeMax(toInteger(start), 0);
          return baseRest(function(args) {
            var array = args[start], otherArgs = castSlice(args, 0, start);
            if (array) {
              arrayPush(otherArgs, array);
            }
            return apply(func, this, otherArgs);
          });
        }
        function throttle2(func, wait, options) {
          var leading = true, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT);
          }
          if (isObject2(options)) {
            leading = "leading" in options ? !!options.leading : leading;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          return debounce(func, wait, {
            "leading": leading,
            "maxWait": wait,
            "trailing": trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          return partial(castFunction(wrapper), value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray2(value) ? value : [value];
        }
        function clone(value) {
          return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        function cloneWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        function cloneDeep(value) {
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        function cloneDeepWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys(source));
        }
        function eq(value, other) {
          return value === other || value !== value && other !== other;
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        var isArguments = baseIsArguments(/* @__PURE__ */ function() {
          return arguments;
        }()) ? baseIsArguments : function(value) {
          return isObjectLike(value) && hasOwnProperty2.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        var isArray2 = Array2.isArray;
        var isArrayBuffer2 = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction2(value);
        }
        function isArrayLikeObject(value) {
          return isObjectLike(value) && isArrayLike(value);
        }
        function isBoolean2(value) {
          return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
        }
        var isBuffer2 = nativeIsBuffer || stubFalse;
        var isDate2 = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        function isElement(value) {
          return isObjectLike(value) && value.nodeType === 1 && !isPlainObject2(value);
        }
        function isEmpty(value) {
          if (value == null) {
            return true;
          }
          if (isArrayLike(value) && (isArray2(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer2(value) || isTypedArray2(value) || isArguments(value))) {
            return !value.length;
          }
          var tag = getTag(value);
          if (tag == mapTag || tag == setTag) {
            return !value.size;
          }
          if (isPrototype(value)) {
            return !baseKeys(value).length;
          }
          for (var key in value) {
            if (hasOwnProperty2.call(value, key)) {
              return false;
            }
          }
          return true;
        }
        function isEqual(value, other) {
          return baseIsEqual(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          var result2 = customizer ? customizer(value, other) : undefined2;
          return result2 === undefined2 ? baseIsEqual(value, other, undefined2, customizer) : !!result2;
        }
        function isError(value) {
          if (!isObjectLike(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject2(value);
        }
        function isFinite2(value) {
          return typeof value == "number" && nativeIsFinite(value);
        }
        function isFunction2(value) {
          if (!isObject2(value)) {
            return false;
          }
          var tag = baseGetTag(value);
          return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        function isInteger(value) {
          return typeof value == "number" && value == toInteger(value);
        }
        function isLength(value) {
          return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        function isObject2(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }
        function isObjectLike(value) {
          return value != null && typeof value == "object";
        }
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        function isMatch(object, source) {
          return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        function isNaN2(value) {
          return isNumber2(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error2(CORE_ERROR_TEXT);
          }
          return baseIsNative(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil(value) {
          return value == null;
        }
        function isNumber2(value) {
          return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
        }
        function isPlainObject2(value) {
          if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
            return false;
          }
          var proto = getPrototype(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty2.call(proto, "constructor") && proto.constructor;
          return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        var isRegExp2 = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        function isString2(value) {
          return typeof value == "string" || !isArray2(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        function isSymbol(value) {
          return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        var isTypedArray2 = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        function isUndefined2(value) {
          return value === undefined2;
        }
        function isWeakMap(value) {
          return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        function isWeakSet(value) {
          return isObjectLike(value) && baseGetTag(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray2(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike(value)) {
            return isString2(value) ? stringToArray(value) : copyArray(value);
          }
          if (symIterator && value[symIterator]) {
            return iteratorToArray(value[symIterator]());
          }
          var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
          return func(value);
        }
        function toFinite(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber(value);
          if (value === INFINITY || value === -INFINITY) {
            var sign = value < 0 ? -1 : 1;
            return sign * MAX_INTEGER;
          }
          return value === value ? value : 0;
        }
        function toInteger(value) {
          var result2 = toFinite(value), remainder = result2 % 1;
          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject2(value)) {
            var other = typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject2(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = baseTrim(value);
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        function toPlainObject(value) {
          return copyObject(value, keysIn(value));
        }
        function toSafeInteger(value) {
          return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        function toString3(value) {
          return value == null ? "" : baseToString(value);
        }
        var assign = createAssigner(function(object, source) {
          if (isPrototype(source) || isArrayLike(source)) {
            copyObject(source, keys(source), object);
            return;
          }
          for (var key in source) {
            if (hasOwnProperty2.call(source, key)) {
              assignValue(object, key, source[key]);
            }
          }
        });
        var assignIn = createAssigner(function(object, source) {
          copyObject(source, keysIn(source), object);
        });
        var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keysIn(source), object, customizer);
        });
        var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keys(source), object, customizer);
        });
        var at = flatRest(baseAt);
        function create(prototype3, properties) {
          var result2 = baseCreate(prototype3);
          return properties == null ? result2 : baseAssign(result2, properties);
        }
        var defaults2 = baseRest(function(object, sources) {
          object = Object2(object);
          var index = -1;
          var length = sources.length;
          var guard = length > 2 ? sources[2] : undefined2;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            length = 1;
          }
          while (++index < length) {
            var source = sources[index];
            var props = keysIn(source);
            var propsIndex = -1;
            var propsLength = props.length;
            while (++propsIndex < propsLength) {
              var key = props[propsIndex];
              var value = object[key];
              if (value === undefined2 || eq(value, objectProto[key]) && !hasOwnProperty2.call(object, key)) {
                object[key] = source[key];
              }
            }
          }
          return object;
        });
        var defaultsDeep = baseRest(function(args) {
          args.push(undefined2, customDefaultsMerge);
          return apply(mergeWith, undefined2, args);
        });
        function findKey2(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee2) {
          return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forInRight(object, iteratee2) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
        }
        function forOwn(object, iteratee2) {
          return object && baseForOwn(object, getIteratee(iteratee2, 3));
        }
        function forOwnRight(object, iteratee2) {
          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        function get2(object, path2, defaultValue) {
          var result2 = object == null ? undefined2 : baseGet(object, path2);
          return result2 === undefined2 ? defaultValue : result2;
        }
        function has(object, path2) {
          return object != null && hasPath(object, path2, baseHas);
        }
        function hasIn(object, path2) {
          return object != null && hasPath(object, path2, baseHasIn);
        }
        var invert = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          result2[value] = key;
        }, constant(identity));
        var invertBy = createInverter(function(result2, value, key) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString.call(value);
          }
          if (hasOwnProperty2.call(result2, value)) {
            result2[value].push(key);
          } else {
            result2[value] = [key];
          }
        }, getIteratee);
        var invoke = baseRest(baseInvoke);
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        function keysIn(object) {
          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        function mapKeys(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, iteratee2(value, key, object2), value);
          });
          return result2;
        }
        function mapValues(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn(object, function(value, key, object2) {
            baseAssignValue(result2, key, iteratee2(value, key, object2));
          });
          return result2;
        }
        var merge2 = createAssigner(function(object, source, srcIndex) {
          baseMerge(object, source, srcIndex);
        });
        var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
          baseMerge(object, source, srcIndex, customizer);
        });
        var omit = flatRest(function(object, paths) {
          var result2 = {};
          if (object == null) {
            return result2;
          }
          var isDeep = false;
          paths = arrayMap(paths, function(path2) {
            path2 = castPath(path2, object);
            isDeep || (isDeep = path2.length > 1);
            return path2;
          });
          copyObject(object, getAllKeysIn(object), result2);
          if (isDeep) {
            result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
          }
          var length = paths.length;
          while (length--) {
            baseUnset(result2, paths[length]);
          }
          return result2;
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick = flatRest(function(object, paths) {
          return object == null ? {} : basePick(object, paths);
        });
        function pickBy(object, predicate) {
          if (object == null) {
            return {};
          }
          var props = arrayMap(getAllKeysIn(object), function(prop) {
            return [prop];
          });
          predicate = getIteratee(predicate);
          return basePickBy(object, props, function(value, path2) {
            return predicate(value, path2[0]);
          });
        }
        function result(object, path2, defaultValue) {
          path2 = castPath(path2, object);
          var index = -1, length = path2.length;
          if (!length) {
            length = 1;
            object = undefined2;
          }
          while (++index < length) {
            var value = object == null ? undefined2 : object[toKey(path2[index])];
            if (value === undefined2) {
              index = length;
              value = defaultValue;
            }
            object = isFunction2(value) ? value.call(object) : value;
          }
          return object;
        }
        function set(object, path2, value) {
          return object == null ? object : baseSet(object, path2, value);
        }
        function setWith(object, path2, value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseSet(object, path2, value, customizer);
        }
        var toPairs = createToPairs(keys);
        var toPairsIn = createToPairs(keysIn);
        function transform(object, iteratee2, accumulator) {
          var isArr = isArray2(object), isArrLike = isArr || isBuffer2(object) || isTypedArray2(object);
          iteratee2 = getIteratee(iteratee2, 4);
          if (accumulator == null) {
            var Ctor = object && object.constructor;
            if (isArrLike) {
              accumulator = isArr ? new Ctor() : [];
            } else if (isObject2(object)) {
              accumulator = isFunction2(Ctor) ? baseCreate(getPrototype(object)) : {};
            } else {
              accumulator = {};
            }
          }
          (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {
            return iteratee2(accumulator, value, index, object2);
          });
          return accumulator;
        }
        function unset(object, path2) {
          return object == null ? true : baseUnset(object, path2);
        }
        function update(object, path2, updater) {
          return object == null ? object : baseUpdate(object, path2, castFunction(updater));
        }
        function updateWith(object, path2, updater, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseUpdate(object, path2, castFunction(updater), customizer);
        }
        function values(object) {
          return object == null ? [] : baseValues(object, keys(object));
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues(object, keysIn(object));
        }
        function clamp(number, lower, upper) {
          if (upper === undefined2) {
            upper = lower;
            lower = undefined2;
          }
          if (upper !== undefined2) {
            upper = toNumber(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined2) {
            lower = toNumber(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber(number), lower, upper);
        }
        function inRange(number, start, end) {
          start = toFinite(start);
          if (end === undefined2) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          number = toNumber(number);
          return baseInRange(number, start, end);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
            upper = floating = undefined2;
          }
          if (floating === undefined2) {
            if (typeof upper == "boolean") {
              floating = upper;
              upper = undefined2;
            } else if (typeof lower == "boolean") {
              floating = lower;
              lower = undefined2;
            }
          }
          if (lower === undefined2 && upper === undefined2) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite(lower);
            if (upper === undefined2) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase = createCompounder(function(result2, word, index) {
          word = word.toLowerCase();
          return result2 + (index ? capitalize(word) : word);
        });
        function capitalize(string) {
          return upperFirst(toString3(string).toLowerCase());
        }
        function deburr(string) {
          string = toString3(string);
          return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        function endsWith2(string, target, position) {
          string = toString3(string);
          target = baseToString(target);
          var length = string.length;
          position = position === undefined2 ? length : baseClamp(toInteger(position), 0, length);
          var end = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end) == target;
        }
        function escape(string) {
          string = toString3(string);
          return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        function escapeRegExp(string) {
          string = toString3(string);
          return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
        }
        var kebabCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "-" : "") + word.toLowerCase();
        });
        var lowerCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst("toLowerCase");
        function pad(string, length, chars) {
          string = toString3(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        function padEnd(string, length, chars) {
          string = toString3(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        function padStart(string, length, chars) {
          string = toString3(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        function parseInt2(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          return nativeParseInt(toString3(string).replace(reTrimStart, ""), radix || 0);
        }
        function repeat(string, n, guard) {
          if (guard ? isIterateeCall(string, n, guard) : n === undefined2) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          return baseRepeat(toString3(string), n);
        }
        function replace() {
          var args = arguments, string = toString3(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "_" : "") + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) {
            separator = limit = undefined2;
          }
          limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString3(string);
          if (string && (typeof separator == "string" || separator != null && !isRegExp2(separator))) {
            separator = baseToString(separator);
            if (!separator && hasUnicode(string)) {
              return castSlice(stringToArray(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + upperFirst(word);
        });
        function startsWith(string, target, position) {
          string = toString3(string);
          position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
          target = baseToString(target);
          return string.slice(position, position + target.length) == target;
        }
        function template(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall(string, options, guard)) {
            options = undefined2;
          }
          string = toString3(string);
          options = assignInWith({}, options, settings, customDefaultsAssignIn);
          var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
          var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
          var reDelimiters = RegExp2(
            (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
            "g"
          );
          var sourceURL = "//# sourceURL=" + (hasOwnProperty2.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
          string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index = offset + match.length;
            return match;
          });
          source += "';\n";
          var variable = hasOwnProperty2.call(options, "variable") && options.variable;
          if (!variable) {
            source = "with (obj) {\n" + source + "\n}\n";
          } else if (reForbiddenIdentifierChars.test(variable)) {
            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
          source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
          var result2 = attempt(function() {
            return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
          });
          result2.source = source;
          if (isError(result2)) {
            throw result2;
          }
          return result2;
        }
        function toLower(value) {
          return toString3(value).toLowerCase();
        }
        function toUpper(value) {
          return toString3(value).toUpperCase();
        }
        function trim2(string, chars, guard) {
          string = toString3(string);
          if (string && (guard || chars === undefined2)) {
            return baseTrim(string);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice(strSymbols, start, end).join("");
        }
        function trimEnd(string, chars, guard) {
          string = toString3(string);
          if (string && (guard || chars === undefined2)) {
            return string.slice(0, trimmedEndIndex(string) + 1);
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
          return castSlice(strSymbols, 0, end).join("");
        }
        function trimStart(string, chars, guard) {
          string = toString3(string);
          if (string && (guard || chars === undefined2)) {
            return string.replace(reTrimStart, "");
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
          return castSlice(strSymbols, start).join("");
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
          if (isObject2(options)) {
            var separator = "separator" in options ? options.separator : separator;
            length = "length" in options ? toInteger(options.length) : length;
            omission = "omission" in options ? baseToString(options.omission) : omission;
          }
          string = toString3(string);
          var strLength = string.length;
          if (hasUnicode(string)) {
            var strSymbols = stringToArray(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end = length - stringSize(omission);
          if (end < 1) {
            return omission;
          }
          var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
          if (separator === undefined2) {
            return result2 + omission;
          }
          if (strSymbols) {
            end += result2.length - end;
          }
          if (isRegExp2(separator)) {
            if (string.slice(end).search(separator)) {
              var match, substring = result2;
              if (!separator.global) {
                separator = RegExp2(separator.source, toString3(reFlags.exec(separator)) + "g");
              }
              separator.lastIndex = 0;
              while (match = separator.exec(substring)) {
                var newEnd = match.index;
              }
              result2 = result2.slice(0, newEnd === undefined2 ? end : newEnd);
            }
          } else if (string.indexOf(baseToString(separator), end) != end) {
            var index = result2.lastIndexOf(separator);
            if (index > -1) {
              result2 = result2.slice(0, index);
            }
          }
          return result2 + omission;
        }
        function unescape2(string) {
          string = toString3(string);
          return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toUpperCase();
        });
        var upperFirst = createCaseFirst("toUpperCase");
        function words(string, pattern, guard) {
          string = toString3(string);
          pattern = guard ? undefined2 : pattern;
          if (pattern === undefined2) {
            return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
          }
          return string.match(pattern) || [];
        }
        var attempt = baseRest(function(func, args) {
          try {
            return apply(func, undefined2, args);
          } catch (e) {
            return isError(e) ? e : new Error2(e);
          }
        });
        var bindAll = flatRest(function(object, methodNames) {
          arrayEach(methodNames, function(key) {
            key = toKey(key);
            baseAssignValue(object, key, bind2(object[key], object));
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap(pairs, function(pair) {
            if (typeof pair[1] != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest(function(args) {
            var index = -1;
            while (++index < length) {
              var pair = pairs[index];
              if (apply(pair[0], this, args)) {
                return apply(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        function constant(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue) {
          return value == null || value !== value ? defaultValue : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        function matches(source) {
          return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        function matchesProperty(path2, srcValue) {
          return baseMatchesProperty(path2, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        var method = baseRest(function(path2, args) {
          return function(object) {
            return baseInvoke(object, path2, args);
          };
        });
        var methodOf = baseRest(function(object, args) {
          return function(path2) {
            return baseInvoke(object, path2, args);
          };
        });
        function mixin(object, source, options) {
          var props = keys(source), methodNames = baseFunctions(source, props);
          if (options == null && !(isObject2(source) && (methodNames.length || !props.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys(source));
          }
          var chain2 = !(isObject2(options) && "chain" in options) || !!options.chain, isFunc = isFunction2(object);
          arrayEach(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain2 || chainAll) {
                  var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                  actions.push({ "func": func, "args": arguments, "thisArg": object });
                  result2.__chain__ = chainAll;
                  return result2;
                }
                return func.apply(object, arrayPush([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root._ === this) {
            root._ = oldDash;
          }
          return this;
        }
        function noop2() {
        }
        function nthArg(n) {
          n = toInteger(n);
          return baseRest(function(args) {
            return baseNth(args, n);
          });
        }
        var over = createOver(arrayMap);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome);
        function property(path2) {
          return isKey(path2) ? baseProperty(toKey(path2)) : basePropertyDeep(path2);
        }
        function propertyOf(object) {
          return function(path2) {
            return object == null ? undefined2 : baseGet(object, path2);
          };
        }
        var range = createRange();
        var rangeRight = createRange(true);
        function stubArray() {
          return [];
        }
        function stubFalse() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return "";
        }
        function stubTrue() {
          return true;
        }
        function times(n, iteratee2) {
          n = toInteger(n);
          if (n < 1 || n > MAX_SAFE_INTEGER) {
            return [];
          }
          var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
          iteratee2 = getIteratee(iteratee2);
          n -= MAX_ARRAY_LENGTH;
          var result2 = baseTimes(length, iteratee2);
          while (++index < n) {
            iteratee2(index);
          }
          return result2;
        }
        function toPath(value) {
          if (isArray2(value)) {
            return arrayMap(value, toKey);
          }
          return isSymbol(value) ? [value] : copyArray(stringToPath(toString3(value)));
        }
        function uniqueId(prefix) {
          var id = ++idCounter;
          return toString3(prefix) + id;
        }
        var add = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound("ceil");
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound("floor");
        function max(array) {
          return array && array.length ? baseExtremum(array, identity, baseGt) : undefined2;
        }
        function maxBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
        }
        function mean(array) {
          return baseMean(array, identity);
        }
        function meanBy(array, iteratee2) {
          return baseMean(array, getIteratee(iteratee2, 2));
        }
        function min(array) {
          return array && array.length ? baseExtremum(array, identity, baseLt) : undefined2;
        }
        function minBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round = createRound("round");
        var subtract = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum(array) {
          return array && array.length ? baseSum(array, identity) : 0;
        }
        function sumBy(array, iteratee2) {
          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind2;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce;
        lodash.defaults = defaults2;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter2;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge2;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread3;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle2;
        lodash.thru = thru;
        lodash.toArray = toArray2;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        mixin(lodash, lodash);
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith2;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey2;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach2;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get2;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray2;
        lodash.isArrayBuffer = isArrayBuffer2;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean2;
        lodash.isBuffer = isBuffer2;
        lodash.isDate = isDate2;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite2;
        lodash.isFunction = isFunction2;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN2;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber2;
        lodash.isObject = isObject2;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject2;
        lodash.isRegExp = isRegExp2;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString2;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray2;
        lodash.isUndefined = isUndefined2;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop2;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt2;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext2;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString3;
        lodash.toUpper = toUpper;
        lodash.trim = trim2;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape2;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        lodash.each = forEach2;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
          var source = {};
          baseForOwn(lodash, function(func, methodName) {
            if (!hasOwnProperty2.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }(), { "chain": false });
        lodash.VERSION = VERSION3;
        arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach(["drop", "take"], function(methodName, index) {
          LazyWrapper.prototype[methodName] = function(n) {
            n = n === undefined2 ? 1 : nativeMax(toInteger(n), 0);
            var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
            if (result2.__filtered__) {
              result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
            } else {
              result2.__views__.push({
                "size": nativeMin(n, MAX_ARRAY_LENGTH),
                "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
              });
            }
            return result2;
          };
          LazyWrapper.prototype[methodName + "Right"] = function(n) {
            return this.reverse()[methodName](n).reverse();
          };
        });
        arrayEach(["filter", "map", "takeWhile"], function(methodName, index) {
          var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee2) {
            var result2 = this.clone();
            result2.__iteratees__.push({
              "iteratee": getIteratee(iteratee2, 3),
              "type": type
            });
            result2.__filtered__ = result2.__filtered__ || isFilter;
            return result2;
          };
        });
        arrayEach(["head", "last"], function(methodName, index) {
          var takeName = "take" + (index ? "Right" : "");
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach(["initial", "tail"], function(methodName, index) {
          var dropName = "drop" + (index ? "" : "Right");
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path2, args) {
          if (typeof path2 == "function") {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path2, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
          start = toInteger(start);
          var result2 = this;
          if (result2.__filtered__ && (start > 0 || end < 0)) {
            return new LazyWrapper(result2);
          }
          if (start < 0) {
            result2 = result2.takeRight(-start);
          } else if (start) {
            result2 = result2.drop(start);
          }
          if (end !== undefined2) {
            end = toInteger(end);
            result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
          }
          return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray2(value);
            var interceptor = function(value2) {
              var result3 = lodashFunc.apply(lodash, arrayPush([value2], args));
              return isTaker && chainAll ? result3[0] : result3;
            };
            if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result2 = func.apply(value, args);
              result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined2 });
              return new LodashWrapper(result2, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result2 = this.thru(interceptor);
            return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
          };
        });
        arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
          var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray2(value) ? value : [], args);
            }
            return this[chainName](function(value2) {
              return func.apply(isArray2(value2) ? value2 : [], args);
            });
          };
        });
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key = lodashFunc.name + "";
            if (!hasOwnProperty2.call(realNames, key)) {
              realNames[key] = [];
            }
            realNames[key].push({ "name": methodName, "func": lodashFunc });
          }
        });
        realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
          "name": "wrapper",
          "func": undefined2
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) {
          lodash.prototype[symIterator] = wrapperToIterator;
        }
        return lodash;
      };
      var _ = runInContext();
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        root._ = _;
        define(function() {
          return _;
        });
      } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
    }).call(exports2);
  }
});

// node_modules/.pnpm/dayjs@1.11.13/node_modules/dayjs/dayjs.min.js
var require_dayjs_min = __commonJS({
  "node_modules/.pnpm/dayjs@1.11.13/node_modules/dayjs/dayjs.min.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    !function(t, e) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).dayjs = e();
    }(exports2, function() {
      "use strict";
      var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s = "minute", u = "hour", a = "day", o = "week", c = "month", f = "quarter", h = "year", d = "date", l = "Invalid Date", $ = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t2) {
        var e2 = ["th", "st", "nd", "rd"], n2 = t2 % 100;
        return "[" + t2 + (e2[(n2 - 20) % 10] || e2[n2] || e2[0]) + "]";
      } }, m = function(t2, e2, n2) {
        var r2 = String(t2);
        return !r2 || r2.length >= e2 ? t2 : "" + Array(e2 + 1 - r2.length).join(n2) + t2;
      }, v = { s: m, z: function(t2) {
        var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
        return (e2 <= 0 ? "+" : "-") + m(r2, 2, "0") + ":" + m(i2, 2, "0");
      }, m: function t2(e2, n2) {
        if (e2.date() < n2.date()) return -t2(n2, e2);
        var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, c), s2 = n2 - i2 < 0, u2 = e2.clone().add(r2 + (s2 ? -1 : 1), c);
        return +(-(r2 + (n2 - i2) / (s2 ? i2 - u2 : u2 - i2)) || 0);
      }, a: function(t2) {
        return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);
      }, p: function(t2) {
        return { M: c, y: h, w: o, d: a, D: d, h: u, m: s, s: i, ms: r, Q: f }[t2] || String(t2 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t2) {
        return void 0 === t2;
      } }, g = "en", D = {};
      D[g] = M;
      var p = "$isDayjsObject", S = function(t2) {
        return t2 instanceof _ || !(!t2 || !t2[p]);
      }, w = function t2(e2, n2, r2) {
        var i2;
        if (!e2) return g;
        if ("string" == typeof e2) {
          var s2 = e2.toLowerCase();
          D[s2] && (i2 = s2), n2 && (D[s2] = n2, i2 = s2);
          var u2 = e2.split("-");
          if (!i2 && u2.length > 1) return t2(u2[0]);
        } else {
          var a2 = e2.name;
          D[a2] = e2, i2 = a2;
        }
        return !r2 && i2 && (g = i2), i2 || !r2 && g;
      }, O = function(t2, e2) {
        if (S(t2)) return t2.clone();
        var n2 = "object" == typeof e2 ? e2 : {};
        return n2.date = t2, n2.args = arguments, new _(n2);
      }, b = v;
      b.l = w, b.i = S, b.w = function(t2, e2) {
        return O(t2, { locale: e2.$L, utc: e2.$u, x: e2.$x, $offset: e2.$offset });
      };
      var _ = function() {
        function M2(t2) {
          this.$L = w(t2.locale, null, true), this.parse(t2), this.$x = this.$x || t2.x || {}, this[p] = true;
        }
        var m2 = M2.prototype;
        return m2.parse = function(t2) {
          this.$d = function(t3) {
            var e2 = t3.date, n2 = t3.utc;
            if (null === e2) return /* @__PURE__ */ new Date(NaN);
            if (b.u(e2)) return /* @__PURE__ */ new Date();
            if (e2 instanceof Date) return new Date(e2);
            if ("string" == typeof e2 && !/Z$/i.test(e2)) {
              var r2 = e2.match($);
              if (r2) {
                var i2 = r2[2] - 1 || 0, s2 = (r2[7] || "0").substring(0, 3);
                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2);
              }
            }
            return new Date(e2);
          }(t2), this.init();
        }, m2.init = function() {
          var t2 = this.$d;
          this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();
        }, m2.$utils = function() {
          return b;
        }, m2.isValid = function() {
          return !(this.$d.toString() === l);
        }, m2.isSame = function(t2, e2) {
          var n2 = O(t2);
          return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);
        }, m2.isAfter = function(t2, e2) {
          return O(t2) < this.startOf(e2);
        }, m2.isBefore = function(t2, e2) {
          return this.endOf(e2) < O(t2);
        }, m2.$g = function(t2, e2, n2) {
          return b.u(t2) ? this[e2] : this.set(n2, t2);
        }, m2.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m2.valueOf = function() {
          return this.$d.getTime();
        }, m2.startOf = function(t2, e2) {
          var n2 = this, r2 = !!b.u(e2) || e2, f2 = b.p(t2), l2 = function(t3, e3) {
            var i2 = b.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);
            return r2 ? i2 : i2.endOf(a);
          }, $2 = function(t3, e3) {
            return b.w(n2.toDate()[t3].apply(n2.toDate("s"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n2);
          }, y2 = this.$W, M3 = this.$M, m3 = this.$D, v2 = "set" + (this.$u ? "UTC" : "");
          switch (f2) {
            case h:
              return r2 ? l2(1, 0) : l2(31, 11);
            case c:
              return r2 ? l2(1, M3) : l2(0, M3 + 1);
            case o:
              var g2 = this.$locale().weekStart || 0, D2 = (y2 < g2 ? y2 + 7 : y2) - g2;
              return l2(r2 ? m3 - D2 : m3 + (6 - D2), M3);
            case a:
            case d:
              return $2(v2 + "Hours", 0);
            case u:
              return $2(v2 + "Minutes", 1);
            case s:
              return $2(v2 + "Seconds", 2);
            case i:
              return $2(v2 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m2.endOf = function(t2) {
          return this.startOf(t2, false);
        }, m2.$set = function(t2, e2) {
          var n2, o2 = b.p(t2), f2 = "set" + (this.$u ? "UTC" : ""), l2 = (n2 = {}, n2[a] = f2 + "Date", n2[d] = f2 + "Date", n2[c] = f2 + "Month", n2[h] = f2 + "FullYear", n2[u] = f2 + "Hours", n2[s] = f2 + "Minutes", n2[i] = f2 + "Seconds", n2[r] = f2 + "Milliseconds", n2)[o2], $2 = o2 === a ? this.$D + (e2 - this.$W) : e2;
          if (o2 === c || o2 === h) {
            var y2 = this.clone().set(d, 1);
            y2.$d[l2]($2), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;
          } else l2 && this.$d[l2]($2);
          return this.init(), this;
        }, m2.set = function(t2, e2) {
          return this.clone().$set(t2, e2);
        }, m2.get = function(t2) {
          return this[b.p(t2)]();
        }, m2.add = function(r2, f2) {
          var d2, l2 = this;
          r2 = Number(r2);
          var $2 = b.p(f2), y2 = function(t2) {
            var e2 = O(l2);
            return b.w(e2.date(e2.date() + Math.round(t2 * r2)), l2);
          };
          if ($2 === c) return this.set(c, this.$M + r2);
          if ($2 === h) return this.set(h, this.$y + r2);
          if ($2 === a) return y2(1);
          if ($2 === o) return y2(7);
          var M3 = (d2 = {}, d2[s] = e, d2[u] = n, d2[i] = t, d2)[$2] || 1, m3 = this.$d.getTime() + r2 * M3;
          return b.w(m3, this);
        }, m2.subtract = function(t2, e2) {
          return this.add(-1 * t2, e2);
        }, m2.format = function(t2) {
          var e2 = this, n2 = this.$locale();
          if (!this.isValid()) return n2.invalidDate || l;
          var r2 = t2 || "YYYY-MM-DDTHH:mm:ssZ", i2 = b.z(this), s2 = this.$H, u2 = this.$m, a2 = this.$M, o2 = n2.weekdays, c2 = n2.months, f2 = n2.meridiem, h2 = function(t3, n3, i3, s3) {
            return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].slice(0, s3);
          }, d2 = function(t3) {
            return b.s(s2 % 12 || 12, t3, "0");
          }, $2 = f2 || function(t3, e3, n3) {
            var r3 = t3 < 12 ? "AM" : "PM";
            return n3 ? r3.toLowerCase() : r3;
          };
          return r2.replace(y, function(t3, r3) {
            return r3 || function(t4) {
              switch (t4) {
                case "YY":
                  return String(e2.$y).slice(-2);
                case "YYYY":
                  return b.s(e2.$y, 4, "0");
                case "M":
                  return a2 + 1;
                case "MM":
                  return b.s(a2 + 1, 2, "0");
                case "MMM":
                  return h2(n2.monthsShort, a2, c2, 3);
                case "MMMM":
                  return h2(c2, a2);
                case "D":
                  return e2.$D;
                case "DD":
                  return b.s(e2.$D, 2, "0");
                case "d":
                  return String(e2.$W);
                case "dd":
                  return h2(n2.weekdaysMin, e2.$W, o2, 2);
                case "ddd":
                  return h2(n2.weekdaysShort, e2.$W, o2, 3);
                case "dddd":
                  return o2[e2.$W];
                case "H":
                  return String(s2);
                case "HH":
                  return b.s(s2, 2, "0");
                case "h":
                  return d2(1);
                case "hh":
                  return d2(2);
                case "a":
                  return $2(s2, u2, true);
                case "A":
                  return $2(s2, u2, false);
                case "m":
                  return String(u2);
                case "mm":
                  return b.s(u2, 2, "0");
                case "s":
                  return String(e2.$s);
                case "ss":
                  return b.s(e2.$s, 2, "0");
                case "SSS":
                  return b.s(e2.$ms, 3, "0");
                case "Z":
                  return i2;
              }
              return null;
            }(t3) || i2.replace(":", "");
          });
        }, m2.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m2.diff = function(r2, d2, l2) {
          var $2, y2 = this, M3 = b.p(d2), m3 = O(r2), v2 = (m3.utcOffset() - this.utcOffset()) * e, g2 = this - m3, D2 = function() {
            return b.m(y2, m3);
          };
          switch (M3) {
            case h:
              $2 = D2() / 12;
              break;
            case c:
              $2 = D2();
              break;
            case f:
              $2 = D2() / 3;
              break;
            case o:
              $2 = (g2 - v2) / 6048e5;
              break;
            case a:
              $2 = (g2 - v2) / 864e5;
              break;
            case u:
              $2 = g2 / n;
              break;
            case s:
              $2 = g2 / e;
              break;
            case i:
              $2 = g2 / t;
              break;
            default:
              $2 = g2;
          }
          return l2 ? $2 : b.a($2);
        }, m2.daysInMonth = function() {
          return this.endOf(c).$D;
        }, m2.$locale = function() {
          return D[this.$L];
        }, m2.locale = function(t2, e2) {
          if (!t2) return this.$L;
          var n2 = this.clone(), r2 = w(t2, e2, true);
          return r2 && (n2.$L = r2), n2;
        }, m2.clone = function() {
          return b.w(this.$d, this);
        }, m2.toDate = function() {
          return new Date(this.valueOf());
        }, m2.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m2.toISOString = function() {
          return this.$d.toISOString();
        }, m2.toString = function() {
          return this.$d.toUTCString();
        }, M2;
      }(), k = _.prototype;
      return O.prototype = k, [["$ms", r], ["$s", i], ["$m", s], ["$H", u], ["$W", a], ["$M", c], ["$y", h], ["$D", d]].forEach(function(t2) {
        k[t2[1]] = function(e2) {
          return this.$g(e2, t2[0], t2[1]);
        };
      }), O.extend = function(t2, e2) {
        return t2.$i || (t2(e2, _, O), t2.$i = true), O;
      }, O.locale = w, O.isDayjs = S, O.unix = function(t2) {
        return O(1e3 * t2);
      }, O.en = D[g], O.Ls = D, O.p = {}, O;
    });
  }
});

// node_modules/.pnpm/dayjs@1.11.13/node_modules/dayjs/plugin/isBetween.js
var require_isBetween = __commonJS({
  "node_modules/.pnpm/dayjs@1.11.13/node_modules/dayjs/plugin/isBetween.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    !function(e, i) {
      "object" == typeof exports2 && "undefined" != typeof module2 ? module2.exports = i() : "function" == typeof define && define.amd ? define(i) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isBetween = i();
    }(exports2, function() {
      "use strict";
      return function(e, i, t) {
        i.prototype.isBetween = function(e2, i2, s, f) {
          var n = t(e2), o = t(i2), r = "(" === (f = f || "()")[0], u = ")" === f[1];
          return (r ? this.isAfter(n, s) : !this.isBefore(n, s)) && (u ? this.isBefore(o, s) : !this.isAfter(o, s)) || (r ? this.isBefore(n, s) : !this.isAfter(n, s)) && (u ? this.isAfter(o, s) : !this.isBefore(o, s));
        };
      };
    });
  }
});

// node_modules/.pnpm/universalify@2.0.1/node_modules/universalify/index.js
var require_universalify = __commonJS({
  "node_modules/.pnpm/universalify@2.0.1/node_modules/universalify/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    exports2.fromCallback = function(fn) {
      return Object.defineProperty(function(...args) {
        if (typeof args[args.length - 1] === "function") fn.apply(this, args);
        else {
          return new Promise((resolve, reject) => {
            args.push((err, res) => err != null ? reject(err) : resolve(res));
            fn.apply(this, args);
          });
        }
      }, "name", { value: fn.name });
    };
    exports2.fromPromise = function(fn) {
      return Object.defineProperty(function(...args) {
        const cb = args[args.length - 1];
        if (typeof cb !== "function") return fn.apply(this, args);
        else {
          args.pop();
          fn.apply(this, args).then((r) => cb(null, r), cb);
        }
      }, "name", { value: fn.name });
    };
  }
});

// node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/polyfills.js
var require_polyfills = __commonJS({
  "node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/polyfills.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var constants2 = require("constants");
    var origCwd = process.cwd;
    var cwd = null;
    var platform = process.env.GRACEFUL_FS_PLATFORM || process.platform;
    process.cwd = function() {
      if (!cwd)
        cwd = origCwd.call(process);
      return cwd;
    };
    try {
      process.cwd();
    } catch (er) {
    }
    if (typeof process.chdir === "function") {
      chdir = process.chdir;
      process.chdir = function(d) {
        cwd = null;
        chdir.call(process, d);
      };
      if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir);
    }
    var chdir;
    module2.exports = patch;
    function patch(fs3) {
      if (constants2.hasOwnProperty("O_SYMLINK") && process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)) {
        patchLchmod(fs3);
      }
      if (!fs3.lutimes) {
        patchLutimes(fs3);
      }
      fs3.chown = chownFix(fs3.chown);
      fs3.fchown = chownFix(fs3.fchown);
      fs3.lchown = chownFix(fs3.lchown);
      fs3.chmod = chmodFix(fs3.chmod);
      fs3.fchmod = chmodFix(fs3.fchmod);
      fs3.lchmod = chmodFix(fs3.lchmod);
      fs3.chownSync = chownFixSync(fs3.chownSync);
      fs3.fchownSync = chownFixSync(fs3.fchownSync);
      fs3.lchownSync = chownFixSync(fs3.lchownSync);
      fs3.chmodSync = chmodFixSync(fs3.chmodSync);
      fs3.fchmodSync = chmodFixSync(fs3.fchmodSync);
      fs3.lchmodSync = chmodFixSync(fs3.lchmodSync);
      fs3.stat = statFix(fs3.stat);
      fs3.fstat = statFix(fs3.fstat);
      fs3.lstat = statFix(fs3.lstat);
      fs3.statSync = statFixSync(fs3.statSync);
      fs3.fstatSync = statFixSync(fs3.fstatSync);
      fs3.lstatSync = statFixSync(fs3.lstatSync);
      if (fs3.chmod && !fs3.lchmod) {
        fs3.lchmod = function(path2, mode, cb) {
          if (cb) process.nextTick(cb);
        };
        fs3.lchmodSync = function() {
        };
      }
      if (fs3.chown && !fs3.lchown) {
        fs3.lchown = function(path2, uid, gid, cb) {
          if (cb) process.nextTick(cb);
        };
        fs3.lchownSync = function() {
        };
      }
      if (platform === "win32") {
        fs3.rename = typeof fs3.rename !== "function" ? fs3.rename : function(fs$rename) {
          function rename(from, to, cb) {
            var start = Date.now();
            var backoff = 0;
            fs$rename(from, to, function CB(er) {
              if (er && (er.code === "EACCES" || er.code === "EPERM" || er.code === "EBUSY") && Date.now() - start < 6e4) {
                setTimeout(function() {
                  fs3.stat(to, function(stater, st) {
                    if (stater && stater.code === "ENOENT")
                      fs$rename(from, to, CB);
                    else
                      cb(er);
                  });
                }, backoff);
                if (backoff < 100)
                  backoff += 10;
                return;
              }
              if (cb) cb(er);
            });
          }
          if (Object.setPrototypeOf) Object.setPrototypeOf(rename, fs$rename);
          return rename;
        }(fs3.rename);
      }
      fs3.read = typeof fs3.read !== "function" ? fs3.read : function(fs$read) {
        function read(fd, buffer, offset, length, position, callback_) {
          var callback;
          if (callback_ && typeof callback_ === "function") {
            var eagCounter = 0;
            callback = function(er, _, __) {
              if (er && er.code === "EAGAIN" && eagCounter < 10) {
                eagCounter++;
                return fs$read.call(fs3, fd, buffer, offset, length, position, callback);
              }
              callback_.apply(this, arguments);
            };
          }
          return fs$read.call(fs3, fd, buffer, offset, length, position, callback);
        }
        if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read);
        return read;
      }(fs3.read);
      fs3.readSync = typeof fs3.readSync !== "function" ? fs3.readSync : /* @__PURE__ */ function(fs$readSync) {
        return function(fd, buffer, offset, length, position) {
          var eagCounter = 0;
          while (true) {
            try {
              return fs$readSync.call(fs3, fd, buffer, offset, length, position);
            } catch (er) {
              if (er.code === "EAGAIN" && eagCounter < 10) {
                eagCounter++;
                continue;
              }
              throw er;
            }
          }
        };
      }(fs3.readSync);
      function patchLchmod(fs4) {
        fs4.lchmod = function(path2, mode, callback) {
          fs4.open(
            path2,
            constants2.O_WRONLY | constants2.O_SYMLINK,
            mode,
            function(err, fd) {
              if (err) {
                if (callback) callback(err);
                return;
              }
              fs4.fchmod(fd, mode, function(err2) {
                fs4.close(fd, function(err22) {
                  if (callback) callback(err2 || err22);
                });
              });
            }
          );
        };
        fs4.lchmodSync = function(path2, mode) {
          var fd = fs4.openSync(path2, constants2.O_WRONLY | constants2.O_SYMLINK, mode);
          var threw = true;
          var ret;
          try {
            ret = fs4.fchmodSync(fd, mode);
            threw = false;
          } finally {
            if (threw) {
              try {
                fs4.closeSync(fd);
              } catch (er) {
              }
            } else {
              fs4.closeSync(fd);
            }
          }
          return ret;
        };
      }
      function patchLutimes(fs4) {
        if (constants2.hasOwnProperty("O_SYMLINK") && fs4.futimes) {
          fs4.lutimes = function(path2, at, mt, cb) {
            fs4.open(path2, constants2.O_SYMLINK, function(er, fd) {
              if (er) {
                if (cb) cb(er);
                return;
              }
              fs4.futimes(fd, at, mt, function(er2) {
                fs4.close(fd, function(er22) {
                  if (cb) cb(er2 || er22);
                });
              });
            });
          };
          fs4.lutimesSync = function(path2, at, mt) {
            var fd = fs4.openSync(path2, constants2.O_SYMLINK);
            var ret;
            var threw = true;
            try {
              ret = fs4.futimesSync(fd, at, mt);
              threw = false;
            } finally {
              if (threw) {
                try {
                  fs4.closeSync(fd);
                } catch (er) {
                }
              } else {
                fs4.closeSync(fd);
              }
            }
            return ret;
          };
        } else if (fs4.futimes) {
          fs4.lutimes = function(_a, _b, _c, cb) {
            if (cb) process.nextTick(cb);
          };
          fs4.lutimesSync = function() {
          };
        }
      }
      function chmodFix(orig) {
        if (!orig) return orig;
        return function(target, mode, cb) {
          return orig.call(fs3, target, mode, function(er) {
            if (chownErOk(er)) er = null;
            if (cb) cb.apply(this, arguments);
          });
        };
      }
      function chmodFixSync(orig) {
        if (!orig) return orig;
        return function(target, mode) {
          try {
            return orig.call(fs3, target, mode);
          } catch (er) {
            if (!chownErOk(er)) throw er;
          }
        };
      }
      function chownFix(orig) {
        if (!orig) return orig;
        return function(target, uid, gid, cb) {
          return orig.call(fs3, target, uid, gid, function(er) {
            if (chownErOk(er)) er = null;
            if (cb) cb.apply(this, arguments);
          });
        };
      }
      function chownFixSync(orig) {
        if (!orig) return orig;
        return function(target, uid, gid) {
          try {
            return orig.call(fs3, target, uid, gid);
          } catch (er) {
            if (!chownErOk(er)) throw er;
          }
        };
      }
      function statFix(orig) {
        if (!orig) return orig;
        return function(target, options, cb) {
          if (typeof options === "function") {
            cb = options;
            options = null;
          }
          function callback(er, stats) {
            if (stats) {
              if (stats.uid < 0) stats.uid += 4294967296;
              if (stats.gid < 0) stats.gid += 4294967296;
            }
            if (cb) cb.apply(this, arguments);
          }
          return options ? orig.call(fs3, target, options, callback) : orig.call(fs3, target, callback);
        };
      }
      function statFixSync(orig) {
        if (!orig) return orig;
        return function(target, options) {
          var stats = options ? orig.call(fs3, target, options) : orig.call(fs3, target);
          if (stats) {
            if (stats.uid < 0) stats.uid += 4294967296;
            if (stats.gid < 0) stats.gid += 4294967296;
          }
          return stats;
        };
      }
      function chownErOk(er) {
        if (!er)
          return true;
        if (er.code === "ENOSYS")
          return true;
        var nonroot = !process.getuid || process.getuid() !== 0;
        if (nonroot) {
          if (er.code === "EINVAL" || er.code === "EPERM")
            return true;
        }
        return false;
      }
    }
  }
});

// node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/legacy-streams.js
var require_legacy_streams = __commonJS({
  "node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/legacy-streams.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var Stream = require("stream").Stream;
    module2.exports = legacy;
    function legacy(fs3) {
      return {
        ReadStream,
        WriteStream
      };
      function ReadStream(path2, options) {
        if (!(this instanceof ReadStream)) return new ReadStream(path2, options);
        Stream.call(this);
        var self2 = this;
        this.path = path2;
        this.fd = null;
        this.readable = true;
        this.paused = false;
        this.flags = "r";
        this.mode = 438;
        this.bufferSize = 64 * 1024;
        options = options || {};
        var keys = Object.keys(options);
        for (var index = 0, length = keys.length; index < length; index++) {
          var key = keys[index];
          this[key] = options[key];
        }
        if (this.encoding) this.setEncoding(this.encoding);
        if (this.start !== void 0) {
          if ("number" !== typeof this.start) {
            throw TypeError("start must be a Number");
          }
          if (this.end === void 0) {
            this.end = Infinity;
          } else if ("number" !== typeof this.end) {
            throw TypeError("end must be a Number");
          }
          if (this.start > this.end) {
            throw new Error("start must be <= end");
          }
          this.pos = this.start;
        }
        if (this.fd !== null) {
          process.nextTick(function() {
            self2._read();
          });
          return;
        }
        fs3.open(this.path, this.flags, this.mode, function(err, fd) {
          if (err) {
            self2.emit("error", err);
            self2.readable = false;
            return;
          }
          self2.fd = fd;
          self2.emit("open", fd);
          self2._read();
        });
      }
      function WriteStream(path2, options) {
        if (!(this instanceof WriteStream)) return new WriteStream(path2, options);
        Stream.call(this);
        this.path = path2;
        this.fd = null;
        this.writable = true;
        this.flags = "w";
        this.encoding = "binary";
        this.mode = 438;
        this.bytesWritten = 0;
        options = options || {};
        var keys = Object.keys(options);
        for (var index = 0, length = keys.length; index < length; index++) {
          var key = keys[index];
          this[key] = options[key];
        }
        if (this.start !== void 0) {
          if ("number" !== typeof this.start) {
            throw TypeError("start must be a Number");
          }
          if (this.start < 0) {
            throw new Error("start must be >= zero");
          }
          this.pos = this.start;
        }
        this.busy = false;
        this._queue = [];
        if (this.fd === null) {
          this._open = fs3.open;
          this._queue.push([this._open, this.path, this.flags, this.mode, void 0]);
          this.flush();
        }
      }
    }
  }
});

// node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/clone.js
var require_clone = __commonJS({
  "node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/clone.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = clone;
    var getPrototypeOf2 = Object.getPrototypeOf || function(obj) {
      return obj.__proto__;
    };
    function clone(obj) {
      if (obj === null || typeof obj !== "object")
        return obj;
      if (obj instanceof Object)
        var copy = { __proto__: getPrototypeOf2(obj) };
      else
        var copy = /* @__PURE__ */ Object.create(null);
      Object.getOwnPropertyNames(obj).forEach(function(key) {
        Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key));
      });
      return copy;
    }
  }
});

// node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/graceful-fs.js
var require_graceful_fs = __commonJS({
  "node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/graceful-fs.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require("fs");
    var polyfills = require_polyfills();
    var legacy = require_legacy_streams();
    var clone = require_clone();
    var util3 = require("util");
    var gracefulQueue;
    var previousSymbol;
    if (typeof Symbol === "function" && typeof Symbol.for === "function") {
      gracefulQueue = Symbol.for("graceful-fs.queue");
      previousSymbol = Symbol.for("graceful-fs.previous");
    } else {
      gracefulQueue = "___graceful-fs.queue";
      previousSymbol = "___graceful-fs.previous";
    }
    function noop2() {
    }
    function publishQueue(context, queue2) {
      Object.defineProperty(context, gracefulQueue, {
        get: function() {
          return queue2;
        }
      });
    }
    var debug = noop2;
    if (util3.debuglog)
      debug = util3.debuglog("gfs4");
    else if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || ""))
      debug = function() {
        var m = util3.format.apply(util3, arguments);
        m = "GFS4: " + m.split(/\n/).join("\nGFS4: ");
        console.error(m);
      };
    if (!fs3[gracefulQueue]) {
      queue = global[gracefulQueue] || [];
      publishQueue(fs3, queue);
      fs3.close = function(fs$close) {
        function close(fd, cb) {
          return fs$close.call(fs3, fd, function(err) {
            if (!err) {
              resetQueue();
            }
            if (typeof cb === "function")
              cb.apply(this, arguments);
          });
        }
        Object.defineProperty(close, previousSymbol, {
          value: fs$close
        });
        return close;
      }(fs3.close);
      fs3.closeSync = function(fs$closeSync) {
        function closeSync(fd) {
          fs$closeSync.apply(fs3, arguments);
          resetQueue();
        }
        Object.defineProperty(closeSync, previousSymbol, {
          value: fs$closeSync
        });
        return closeSync;
      }(fs3.closeSync);
      if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || "")) {
        process.on("exit", function() {
          debug(fs3[gracefulQueue]);
          require("assert").equal(fs3[gracefulQueue].length, 0);
        });
      }
    }
    var queue;
    if (!global[gracefulQueue]) {
      publishQueue(global, fs3[gracefulQueue]);
    }
    module2.exports = patch(clone(fs3));
    if (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs3.__patched) {
      module2.exports = patch(fs3);
      fs3.__patched = true;
    }
    function patch(fs4) {
      polyfills(fs4);
      fs4.gracefulify = patch;
      fs4.createReadStream = createReadStream;
      fs4.createWriteStream = createWriteStream;
      var fs$readFile = fs4.readFile;
      fs4.readFile = readFile;
      function readFile(path2, options, cb) {
        if (typeof options === "function")
          cb = options, options = null;
        return go$readFile(path2, options, cb);
        function go$readFile(path3, options2, cb2, startTime) {
          return fs$readFile(path3, options2, function(err) {
            if (err && (err.code === "EMFILE" || err.code === "ENFILE"))
              enqueue([go$readFile, [path3, options2, cb2], err, startTime || Date.now(), Date.now()]);
            else {
              if (typeof cb2 === "function")
                cb2.apply(this, arguments);
            }
          });
        }
      }
      var fs$writeFile = fs4.writeFile;
      fs4.writeFile = writeFile;
      function writeFile(path2, data, options, cb) {
        if (typeof options === "function")
          cb = options, options = null;
        return go$writeFile(path2, data, options, cb);
        function go$writeFile(path3, data2, options2, cb2, startTime) {
          return fs$writeFile(path3, data2, options2, function(err) {
            if (err && (err.code === "EMFILE" || err.code === "ENFILE"))
              enqueue([go$writeFile, [path3, data2, options2, cb2], err, startTime || Date.now(), Date.now()]);
            else {
              if (typeof cb2 === "function")
                cb2.apply(this, arguments);
            }
          });
        }
      }
      var fs$appendFile = fs4.appendFile;
      if (fs$appendFile)
        fs4.appendFile = appendFile;
      function appendFile(path2, data, options, cb) {
        if (typeof options === "function")
          cb = options, options = null;
        return go$appendFile(path2, data, options, cb);
        function go$appendFile(path3, data2, options2, cb2, startTime) {
          return fs$appendFile(path3, data2, options2, function(err) {
            if (err && (err.code === "EMFILE" || err.code === "ENFILE"))
              enqueue([go$appendFile, [path3, data2, options2, cb2], err, startTime || Date.now(), Date.now()]);
            else {
              if (typeof cb2 === "function")
                cb2.apply(this, arguments);
            }
          });
        }
      }
      var fs$copyFile = fs4.copyFile;
      if (fs$copyFile)
        fs4.copyFile = copyFile;
      function copyFile(src, dest, flags, cb) {
        if (typeof flags === "function") {
          cb = flags;
          flags = 0;
        }
        return go$copyFile(src, dest, flags, cb);
        function go$copyFile(src2, dest2, flags2, cb2, startTime) {
          return fs$copyFile(src2, dest2, flags2, function(err) {
            if (err && (err.code === "EMFILE" || err.code === "ENFILE"))
              enqueue([go$copyFile, [src2, dest2, flags2, cb2], err, startTime || Date.now(), Date.now()]);
            else {
              if (typeof cb2 === "function")
                cb2.apply(this, arguments);
            }
          });
        }
      }
      var fs$readdir = fs4.readdir;
      fs4.readdir = readdir;
      var noReaddirOptionVersions = /^v[0-5]\./;
      function readdir(path2, options, cb) {
        if (typeof options === "function")
          cb = options, options = null;
        var go$readdir = noReaddirOptionVersions.test(process.version) ? function go$readdir2(path3, options2, cb2, startTime) {
          return fs$readdir(path3, fs$readdirCallback(
            path3,
            options2,
            cb2,
            startTime
          ));
        } : function go$readdir2(path3, options2, cb2, startTime) {
          return fs$readdir(path3, options2, fs$readdirCallback(
            path3,
            options2,
            cb2,
            startTime
          ));
        };
        return go$readdir(path2, options, cb);
        function fs$readdirCallback(path3, options2, cb2, startTime) {
          return function(err, files) {
            if (err && (err.code === "EMFILE" || err.code === "ENFILE"))
              enqueue([
                go$readdir,
                [path3, options2, cb2],
                err,
                startTime || Date.now(),
                Date.now()
              ]);
            else {
              if (files && files.sort)
                files.sort();
              if (typeof cb2 === "function")
                cb2.call(this, err, files);
            }
          };
        }
      }
      if (process.version.substr(0, 4) === "v0.8") {
        var legStreams = legacy(fs4);
        ReadStream = legStreams.ReadStream;
        WriteStream = legStreams.WriteStream;
      }
      var fs$ReadStream = fs4.ReadStream;
      if (fs$ReadStream) {
        ReadStream.prototype = Object.create(fs$ReadStream.prototype);
        ReadStream.prototype.open = ReadStream$open;
      }
      var fs$WriteStream = fs4.WriteStream;
      if (fs$WriteStream) {
        WriteStream.prototype = Object.create(fs$WriteStream.prototype);
        WriteStream.prototype.open = WriteStream$open;
      }
      Object.defineProperty(fs4, "ReadStream", {
        get: function() {
          return ReadStream;
        },
        set: function(val) {
          ReadStream = val;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(fs4, "WriteStream", {
        get: function() {
          return WriteStream;
        },
        set: function(val) {
          WriteStream = val;
        },
        enumerable: true,
        configurable: true
      });
      var FileReadStream = ReadStream;
      Object.defineProperty(fs4, "FileReadStream", {
        get: function() {
          return FileReadStream;
        },
        set: function(val) {
          FileReadStream = val;
        },
        enumerable: true,
        configurable: true
      });
      var FileWriteStream = WriteStream;
      Object.defineProperty(fs4, "FileWriteStream", {
        get: function() {
          return FileWriteStream;
        },
        set: function(val) {
          FileWriteStream = val;
        },
        enumerable: true,
        configurable: true
      });
      function ReadStream(path2, options) {
        if (this instanceof ReadStream)
          return fs$ReadStream.apply(this, arguments), this;
        else
          return ReadStream.apply(Object.create(ReadStream.prototype), arguments);
      }
      function ReadStream$open() {
        var that = this;
        open(that.path, that.flags, that.mode, function(err, fd) {
          if (err) {
            if (that.autoClose)
              that.destroy();
            that.emit("error", err);
          } else {
            that.fd = fd;
            that.emit("open", fd);
            that.read();
          }
        });
      }
      function WriteStream(path2, options) {
        if (this instanceof WriteStream)
          return fs$WriteStream.apply(this, arguments), this;
        else
          return WriteStream.apply(Object.create(WriteStream.prototype), arguments);
      }
      function WriteStream$open() {
        var that = this;
        open(that.path, that.flags, that.mode, function(err, fd) {
          if (err) {
            that.destroy();
            that.emit("error", err);
          } else {
            that.fd = fd;
            that.emit("open", fd);
          }
        });
      }
      function createReadStream(path2, options) {
        return new fs4.ReadStream(path2, options);
      }
      function createWriteStream(path2, options) {
        return new fs4.WriteStream(path2, options);
      }
      var fs$open = fs4.open;
      fs4.open = open;
      function open(path2, flags, mode, cb) {
        if (typeof mode === "function")
          cb = mode, mode = null;
        return go$open(path2, flags, mode, cb);
        function go$open(path3, flags2, mode2, cb2, startTime) {
          return fs$open(path3, flags2, mode2, function(err, fd) {
            if (err && (err.code === "EMFILE" || err.code === "ENFILE"))
              enqueue([go$open, [path3, flags2, mode2, cb2], err, startTime || Date.now(), Date.now()]);
            else {
              if (typeof cb2 === "function")
                cb2.apply(this, arguments);
            }
          });
        }
      }
      return fs4;
    }
    function enqueue(elem) {
      debug("ENQUEUE", elem[0].name, elem[1]);
      fs3[gracefulQueue].push(elem);
      retry();
    }
    var retryTimer;
    function resetQueue() {
      var now = Date.now();
      for (var i = 0; i < fs3[gracefulQueue].length; ++i) {
        if (fs3[gracefulQueue][i].length > 2) {
          fs3[gracefulQueue][i][3] = now;
          fs3[gracefulQueue][i][4] = now;
        }
      }
      retry();
    }
    function retry() {
      clearTimeout(retryTimer);
      retryTimer = void 0;
      if (fs3[gracefulQueue].length === 0)
        return;
      var elem = fs3[gracefulQueue].shift();
      var fn = elem[0];
      var args = elem[1];
      var err = elem[2];
      var startTime = elem[3];
      var lastTime = elem[4];
      if (startTime === void 0) {
        debug("RETRY", fn.name, args);
        fn.apply(null, args);
      } else if (Date.now() - startTime >= 6e4) {
        debug("TIMEOUT", fn.name, args);
        var cb = args.pop();
        if (typeof cb === "function")
          cb.call(null, err);
      } else {
        var sinceAttempt = Date.now() - lastTime;
        var sinceStart = Math.max(lastTime - startTime, 1);
        var desiredDelay = Math.min(sinceStart * 1.2, 100);
        if (sinceAttempt >= desiredDelay) {
          debug("RETRY", fn.name, args);
          fn.apply(null, args.concat([startTime]));
        } else {
          fs3[gracefulQueue].push(elem);
        }
      }
      if (retryTimer === void 0) {
        retryTimer = setTimeout(retry, 0);
      }
    }
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/fs/index.js
var require_fs = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/fs/index.js"(exports2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromCallback;
    var fs3 = require_graceful_fs();
    var api = [
      "access",
      "appendFile",
      "chmod",
      "chown",
      "close",
      "copyFile",
      "cp",
      "fchmod",
      "fchown",
      "fdatasync",
      "fstat",
      "fsync",
      "ftruncate",
      "futimes",
      "glob",
      "lchmod",
      "lchown",
      "lutimes",
      "link",
      "lstat",
      "mkdir",
      "mkdtemp",
      "open",
      "opendir",
      "readdir",
      "readFile",
      "readlink",
      "realpath",
      "rename",
      "rm",
      "rmdir",
      "stat",
      "statfs",
      "symlink",
      "truncate",
      "unlink",
      "utimes",
      "writeFile"
    ].filter((key) => {
      return typeof fs3[key] === "function";
    });
    Object.assign(exports2, fs3);
    api.forEach((method) => {
      exports2[method] = u(fs3[method]);
    });
    exports2.exists = function(filename, callback) {
      if (typeof callback === "function") {
        return fs3.exists(filename, callback);
      }
      return new Promise((resolve) => {
        return fs3.exists(filename, resolve);
      });
    };
    exports2.read = function(fd, buffer, offset, length, position, callback) {
      if (typeof callback === "function") {
        return fs3.read(fd, buffer, offset, length, position, callback);
      }
      return new Promise((resolve, reject) => {
        fs3.read(fd, buffer, offset, length, position, (err, bytesRead, buffer2) => {
          if (err) return reject(err);
          resolve({ bytesRead, buffer: buffer2 });
        });
      });
    };
    exports2.write = function(fd, buffer, ...args) {
      if (typeof args[args.length - 1] === "function") {
        return fs3.write(fd, buffer, ...args);
      }
      return new Promise((resolve, reject) => {
        fs3.write(fd, buffer, ...args, (err, bytesWritten, buffer2) => {
          if (err) return reject(err);
          resolve({ bytesWritten, buffer: buffer2 });
        });
      });
    };
    exports2.readv = function(fd, buffers, ...args) {
      if (typeof args[args.length - 1] === "function") {
        return fs3.readv(fd, buffers, ...args);
      }
      return new Promise((resolve, reject) => {
        fs3.readv(fd, buffers, ...args, (err, bytesRead, buffers2) => {
          if (err) return reject(err);
          resolve({ bytesRead, buffers: buffers2 });
        });
      });
    };
    exports2.writev = function(fd, buffers, ...args) {
      if (typeof args[args.length - 1] === "function") {
        return fs3.writev(fd, buffers, ...args);
      }
      return new Promise((resolve, reject) => {
        fs3.writev(fd, buffers, ...args, (err, bytesWritten, buffers2) => {
          if (err) return reject(err);
          resolve({ bytesWritten, buffers: buffers2 });
        });
      });
    };
    if (typeof fs3.realpath.native === "function") {
      exports2.realpath.native = u(fs3.realpath.native);
    } else {
      process.emitWarning(
        "fs.realpath.native is not a function. Is fs being monkey-patched?",
        "Warning",
        "fs-extra-WARN0003"
      );
    }
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/mkdirs/utils.js
var require_utils3 = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/mkdirs/utils.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var path2 = require("path");
    module2.exports.checkPath = function checkPath(pth) {
      if (process.platform === "win32") {
        const pathHasInvalidWinCharacters = /[<>:"|?*]/.test(pth.replace(path2.parse(pth).root, ""));
        if (pathHasInvalidWinCharacters) {
          const error = new Error(`Path contains invalid characters: ${pth}`);
          error.code = "EINVAL";
          throw error;
        }
      }
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/mkdirs/make-dir.js
var require_make_dir = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/mkdirs/make-dir.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_fs();
    var { checkPath } = require_utils3();
    var getMode = (options) => {
      const defaults2 = { mode: 511 };
      if (typeof options === "number") return options;
      return { ...defaults2, ...options }.mode;
    };
    module2.exports.makeDir = async (dir, options) => {
      checkPath(dir);
      return fs3.mkdir(dir, {
        mode: getMode(options),
        recursive: true
      });
    };
    module2.exports.makeDirSync = (dir, options) => {
      checkPath(dir);
      return fs3.mkdirSync(dir, {
        mode: getMode(options),
        recursive: true
      });
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/mkdirs/index.js
var require_mkdirs = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/mkdirs/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    var { makeDir: _makeDir, makeDirSync } = require_make_dir();
    var makeDir = u(_makeDir);
    module2.exports = {
      mkdirs: makeDir,
      mkdirsSync: makeDirSync,
      // alias
      mkdirp: makeDir,
      mkdirpSync: makeDirSync,
      ensureDir: makeDir,
      ensureDirSync: makeDirSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/path-exists/index.js
var require_path_exists = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/path-exists/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    var fs3 = require_fs();
    function pathExists(path2) {
      return fs3.access(path2).then(() => true).catch(() => false);
    }
    module2.exports = {
      pathExists: u(pathExists),
      pathExistsSync: fs3.existsSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/util/utimes.js
var require_utimes = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/util/utimes.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_fs();
    var u = require_universalify().fromPromise;
    async function utimesMillis(path2, atime, mtime) {
      const fd = await fs3.open(path2, "r+");
      let closeErr = null;
      try {
        await fs3.futimes(fd, atime, mtime);
      } finally {
        try {
          await fs3.close(fd);
        } catch (e) {
          closeErr = e;
        }
      }
      if (closeErr) {
        throw closeErr;
      }
    }
    function utimesMillisSync(path2, atime, mtime) {
      const fd = fs3.openSync(path2, "r+");
      fs3.futimesSync(fd, atime, mtime);
      return fs3.closeSync(fd);
    }
    module2.exports = {
      utimesMillis: u(utimesMillis),
      utimesMillisSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/util/stat.js
var require_stat = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/util/stat.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_fs();
    var path2 = require("path");
    var u = require_universalify().fromPromise;
    function getStats(src, dest, opts) {
      const statFunc = opts.dereference ? (file) => fs3.stat(file, { bigint: true }) : (file) => fs3.lstat(file, { bigint: true });
      return Promise.all([
        statFunc(src),
        statFunc(dest).catch((err) => {
          if (err.code === "ENOENT") return null;
          throw err;
        })
      ]).then(([srcStat, destStat]) => ({ srcStat, destStat }));
    }
    function getStatsSync(src, dest, opts) {
      let destStat;
      const statFunc = opts.dereference ? (file) => fs3.statSync(file, { bigint: true }) : (file) => fs3.lstatSync(file, { bigint: true });
      const srcStat = statFunc(src);
      try {
        destStat = statFunc(dest);
      } catch (err) {
        if (err.code === "ENOENT") return { srcStat, destStat: null };
        throw err;
      }
      return { srcStat, destStat };
    }
    async function checkPaths(src, dest, funcName, opts) {
      const { srcStat, destStat } = await getStats(src, dest, opts);
      if (destStat) {
        if (areIdentical(srcStat, destStat)) {
          const srcBaseName = path2.basename(src);
          const destBaseName = path2.basename(dest);
          if (funcName === "move" && srcBaseName !== destBaseName && srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {
            return { srcStat, destStat, isChangingCase: true };
          }
          throw new Error("Source and destination must not be the same.");
        }
        if (srcStat.isDirectory() && !destStat.isDirectory()) {
          throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`);
        }
        if (!srcStat.isDirectory() && destStat.isDirectory()) {
          throw new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`);
        }
      }
      if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {
        throw new Error(errMsg(src, dest, funcName));
      }
      return { srcStat, destStat };
    }
    function checkPathsSync(src, dest, funcName, opts) {
      const { srcStat, destStat } = getStatsSync(src, dest, opts);
      if (destStat) {
        if (areIdentical(srcStat, destStat)) {
          const srcBaseName = path2.basename(src);
          const destBaseName = path2.basename(dest);
          if (funcName === "move" && srcBaseName !== destBaseName && srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {
            return { srcStat, destStat, isChangingCase: true };
          }
          throw new Error("Source and destination must not be the same.");
        }
        if (srcStat.isDirectory() && !destStat.isDirectory()) {
          throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`);
        }
        if (!srcStat.isDirectory() && destStat.isDirectory()) {
          throw new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`);
        }
      }
      if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {
        throw new Error(errMsg(src, dest, funcName));
      }
      return { srcStat, destStat };
    }
    async function checkParentPaths(src, srcStat, dest, funcName) {
      const srcParent = path2.resolve(path2.dirname(src));
      const destParent = path2.resolve(path2.dirname(dest));
      if (destParent === srcParent || destParent === path2.parse(destParent).root) return;
      let destStat;
      try {
        destStat = await fs3.stat(destParent, { bigint: true });
      } catch (err) {
        if (err.code === "ENOENT") return;
        throw err;
      }
      if (areIdentical(srcStat, destStat)) {
        throw new Error(errMsg(src, dest, funcName));
      }
      return checkParentPaths(src, srcStat, destParent, funcName);
    }
    function checkParentPathsSync(src, srcStat, dest, funcName) {
      const srcParent = path2.resolve(path2.dirname(src));
      const destParent = path2.resolve(path2.dirname(dest));
      if (destParent === srcParent || destParent === path2.parse(destParent).root) return;
      let destStat;
      try {
        destStat = fs3.statSync(destParent, { bigint: true });
      } catch (err) {
        if (err.code === "ENOENT") return;
        throw err;
      }
      if (areIdentical(srcStat, destStat)) {
        throw new Error(errMsg(src, dest, funcName));
      }
      return checkParentPathsSync(src, srcStat, destParent, funcName);
    }
    function areIdentical(srcStat, destStat) {
      return destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev;
    }
    function isSrcSubdir(src, dest) {
      const srcArr = path2.resolve(src).split(path2.sep).filter((i) => i);
      const destArr = path2.resolve(dest).split(path2.sep).filter((i) => i);
      return srcArr.every((cur, i) => destArr[i] === cur);
    }
    function errMsg(src, dest, funcName) {
      return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`;
    }
    module2.exports = {
      // checkPaths
      checkPaths: u(checkPaths),
      checkPathsSync,
      // checkParent
      checkParentPaths: u(checkParentPaths),
      checkParentPathsSync,
      // Misc
      isSrcSubdir,
      areIdentical
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/copy/copy.js
var require_copy = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/copy/copy.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_fs();
    var path2 = require("path");
    var { mkdirs } = require_mkdirs();
    var { pathExists } = require_path_exists();
    var { utimesMillis } = require_utimes();
    var stat = require_stat();
    async function copy(src, dest, opts = {}) {
      if (typeof opts === "function") {
        opts = { filter: opts };
      }
      opts.clobber = "clobber" in opts ? !!opts.clobber : true;
      opts.overwrite = "overwrite" in opts ? !!opts.overwrite : opts.clobber;
      if (opts.preserveTimestamps && process.arch === "ia32") {
        process.emitWarning(
          "Using the preserveTimestamps option in 32-bit node is not recommended;\n\n	see https://github.com/jprichardson/node-fs-extra/issues/269",
          "Warning",
          "fs-extra-WARN0001"
        );
      }
      const { srcStat, destStat } = await stat.checkPaths(src, dest, "copy", opts);
      await stat.checkParentPaths(src, srcStat, dest, "copy");
      const include = await runFilter(src, dest, opts);
      if (!include) return;
      const destParent = path2.dirname(dest);
      const dirExists = await pathExists(destParent);
      if (!dirExists) {
        await mkdirs(destParent);
      }
      await getStatsAndPerformCopy(destStat, src, dest, opts);
    }
    async function runFilter(src, dest, opts) {
      if (!opts.filter) return true;
      return opts.filter(src, dest);
    }
    async function getStatsAndPerformCopy(destStat, src, dest, opts) {
      const statFn = opts.dereference ? fs3.stat : fs3.lstat;
      const srcStat = await statFn(src);
      if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts);
      if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts);
      if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts);
      if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`);
      if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`);
      throw new Error(`Unknown file: ${src}`);
    }
    async function onFile(srcStat, destStat, src, dest, opts) {
      if (!destStat) return copyFile(srcStat, src, dest, opts);
      if (opts.overwrite) {
        await fs3.unlink(dest);
        return copyFile(srcStat, src, dest, opts);
      }
      if (opts.errorOnExist) {
        throw new Error(`'${dest}' already exists`);
      }
    }
    async function copyFile(srcStat, src, dest, opts) {
      await fs3.copyFile(src, dest);
      if (opts.preserveTimestamps) {
        if (fileIsNotWritable(srcStat.mode)) {
          await makeFileWritable(dest, srcStat.mode);
        }
        const updatedSrcStat = await fs3.stat(src);
        await utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime);
      }
      return fs3.chmod(dest, srcStat.mode);
    }
    function fileIsNotWritable(srcMode) {
      return (srcMode & 128) === 0;
    }
    function makeFileWritable(dest, srcMode) {
      return fs3.chmod(dest, srcMode | 128);
    }
    async function onDir(srcStat, destStat, src, dest, opts) {
      if (!destStat) {
        await fs3.mkdir(dest);
      }
      const promises = [];
      for await (const item of await fs3.opendir(src)) {
        const srcItem = path2.join(src, item.name);
        const destItem = path2.join(dest, item.name);
        promises.push(
          runFilter(srcItem, destItem, opts).then((include) => {
            if (include) {
              return stat.checkPaths(srcItem, destItem, "copy", opts).then(({ destStat: destStat2 }) => {
                return getStatsAndPerformCopy(destStat2, srcItem, destItem, opts);
              });
            }
          })
        );
      }
      await Promise.all(promises);
      if (!destStat) {
        await fs3.chmod(dest, srcStat.mode);
      }
    }
    async function onLink(destStat, src, dest, opts) {
      let resolvedSrc = await fs3.readlink(src);
      if (opts.dereference) {
        resolvedSrc = path2.resolve(process.cwd(), resolvedSrc);
      }
      if (!destStat) {
        return fs3.symlink(resolvedSrc, dest);
      }
      let resolvedDest = null;
      try {
        resolvedDest = await fs3.readlink(dest);
      } catch (e) {
        if (e.code === "EINVAL" || e.code === "UNKNOWN") return fs3.symlink(resolvedSrc, dest);
        throw e;
      }
      if (opts.dereference) {
        resolvedDest = path2.resolve(process.cwd(), resolvedDest);
      }
      if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {
        throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`);
      }
      if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {
        throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`);
      }
      await fs3.unlink(dest);
      return fs3.symlink(resolvedSrc, dest);
    }
    module2.exports = copy;
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/copy/copy-sync.js
var require_copy_sync = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/copy/copy-sync.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_graceful_fs();
    var path2 = require("path");
    var mkdirsSync = require_mkdirs().mkdirsSync;
    var utimesMillisSync = require_utimes().utimesMillisSync;
    var stat = require_stat();
    function copySync(src, dest, opts) {
      if (typeof opts === "function") {
        opts = { filter: opts };
      }
      opts = opts || {};
      opts.clobber = "clobber" in opts ? !!opts.clobber : true;
      opts.overwrite = "overwrite" in opts ? !!opts.overwrite : opts.clobber;
      if (opts.preserveTimestamps && process.arch === "ia32") {
        process.emitWarning(
          "Using the preserveTimestamps option in 32-bit node is not recommended;\n\n	see https://github.com/jprichardson/node-fs-extra/issues/269",
          "Warning",
          "fs-extra-WARN0002"
        );
      }
      const { srcStat, destStat } = stat.checkPathsSync(src, dest, "copy", opts);
      stat.checkParentPathsSync(src, srcStat, dest, "copy");
      if (opts.filter && !opts.filter(src, dest)) return;
      const destParent = path2.dirname(dest);
      if (!fs3.existsSync(destParent)) mkdirsSync(destParent);
      return getStats(destStat, src, dest, opts);
    }
    function getStats(destStat, src, dest, opts) {
      const statSync = opts.dereference ? fs3.statSync : fs3.lstatSync;
      const srcStat = statSync(src);
      if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts);
      else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts);
      else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts);
      else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`);
      else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`);
      throw new Error(`Unknown file: ${src}`);
    }
    function onFile(srcStat, destStat, src, dest, opts) {
      if (!destStat) return copyFile(srcStat, src, dest, opts);
      return mayCopyFile(srcStat, src, dest, opts);
    }
    function mayCopyFile(srcStat, src, dest, opts) {
      if (opts.overwrite) {
        fs3.unlinkSync(dest);
        return copyFile(srcStat, src, dest, opts);
      } else if (opts.errorOnExist) {
        throw new Error(`'${dest}' already exists`);
      }
    }
    function copyFile(srcStat, src, dest, opts) {
      fs3.copyFileSync(src, dest);
      if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest);
      return setDestMode(dest, srcStat.mode);
    }
    function handleTimestamps(srcMode, src, dest) {
      if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode);
      return setDestTimestamps(src, dest);
    }
    function fileIsNotWritable(srcMode) {
      return (srcMode & 128) === 0;
    }
    function makeFileWritable(dest, srcMode) {
      return setDestMode(dest, srcMode | 128);
    }
    function setDestMode(dest, srcMode) {
      return fs3.chmodSync(dest, srcMode);
    }
    function setDestTimestamps(src, dest) {
      const updatedSrcStat = fs3.statSync(src);
      return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime);
    }
    function onDir(srcStat, destStat, src, dest, opts) {
      if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts);
      return copyDir(src, dest, opts);
    }
    function mkDirAndCopy(srcMode, src, dest, opts) {
      fs3.mkdirSync(dest);
      copyDir(src, dest, opts);
      return setDestMode(dest, srcMode);
    }
    function copyDir(src, dest, opts) {
      const dir = fs3.opendirSync(src);
      try {
        let dirent;
        while ((dirent = dir.readSync()) !== null) {
          copyDirItem(dirent.name, src, dest, opts);
        }
      } finally {
        dir.closeSync();
      }
    }
    function copyDirItem(item, src, dest, opts) {
      const srcItem = path2.join(src, item);
      const destItem = path2.join(dest, item);
      if (opts.filter && !opts.filter(srcItem, destItem)) return;
      const { destStat } = stat.checkPathsSync(srcItem, destItem, "copy", opts);
      return getStats(destStat, srcItem, destItem, opts);
    }
    function onLink(destStat, src, dest, opts) {
      let resolvedSrc = fs3.readlinkSync(src);
      if (opts.dereference) {
        resolvedSrc = path2.resolve(process.cwd(), resolvedSrc);
      }
      if (!destStat) {
        return fs3.symlinkSync(resolvedSrc, dest);
      } else {
        let resolvedDest;
        try {
          resolvedDest = fs3.readlinkSync(dest);
        } catch (err) {
          if (err.code === "EINVAL" || err.code === "UNKNOWN") return fs3.symlinkSync(resolvedSrc, dest);
          throw err;
        }
        if (opts.dereference) {
          resolvedDest = path2.resolve(process.cwd(), resolvedDest);
        }
        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {
          throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`);
        }
        if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {
          throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`);
        }
        return copyLink(resolvedSrc, dest);
      }
    }
    function copyLink(resolvedSrc, dest) {
      fs3.unlinkSync(dest);
      return fs3.symlinkSync(resolvedSrc, dest);
    }
    module2.exports = copySync;
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/copy/index.js
var require_copy2 = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/copy/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    module2.exports = {
      copy: u(require_copy()),
      copySync: require_copy_sync()
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/remove/index.js
var require_remove = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/remove/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_graceful_fs();
    var u = require_universalify().fromCallback;
    function remove(path2, callback) {
      fs3.rm(path2, { recursive: true, force: true }, callback);
    }
    function removeSync(path2) {
      fs3.rmSync(path2, { recursive: true, force: true });
    }
    module2.exports = {
      remove: u(remove),
      removeSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/empty/index.js
var require_empty = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/empty/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    var fs3 = require_fs();
    var path2 = require("path");
    var mkdir = require_mkdirs();
    var remove = require_remove();
    var emptyDir = u(async function emptyDir2(dir) {
      let items;
      try {
        items = await fs3.readdir(dir);
      } catch {
        return mkdir.mkdirs(dir);
      }
      return Promise.all(items.map((item) => remove.remove(path2.join(dir, item))));
    });
    function emptyDirSync(dir) {
      let items;
      try {
        items = fs3.readdirSync(dir);
      } catch {
        return mkdir.mkdirsSync(dir);
      }
      items.forEach((item) => {
        item = path2.join(dir, item);
        remove.removeSync(item);
      });
    }
    module2.exports = {
      emptyDirSync,
      emptydirSync: emptyDirSync,
      emptyDir,
      emptydir: emptyDir
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/file.js
var require_file = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/file.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    var path2 = require("path");
    var fs3 = require_fs();
    var mkdir = require_mkdirs();
    async function createFile(file) {
      let stats;
      try {
        stats = await fs3.stat(file);
      } catch {
      }
      if (stats && stats.isFile()) return;
      const dir = path2.dirname(file);
      let dirStats = null;
      try {
        dirStats = await fs3.stat(dir);
      } catch (err) {
        if (err.code === "ENOENT") {
          await mkdir.mkdirs(dir);
          await fs3.writeFile(file, "");
          return;
        } else {
          throw err;
        }
      }
      if (dirStats.isDirectory()) {
        await fs3.writeFile(file, "");
      } else {
        await fs3.readdir(dir);
      }
    }
    function createFileSync(file) {
      let stats;
      try {
        stats = fs3.statSync(file);
      } catch {
      }
      if (stats && stats.isFile()) return;
      const dir = path2.dirname(file);
      try {
        if (!fs3.statSync(dir).isDirectory()) {
          fs3.readdirSync(dir);
        }
      } catch (err) {
        if (err && err.code === "ENOENT") mkdir.mkdirsSync(dir);
        else throw err;
      }
      fs3.writeFileSync(file, "");
    }
    module2.exports = {
      createFile: u(createFile),
      createFileSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/link.js
var require_link = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/link.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    var path2 = require("path");
    var fs3 = require_fs();
    var mkdir = require_mkdirs();
    var { pathExists } = require_path_exists();
    var { areIdentical } = require_stat();
    async function createLink(srcpath, dstpath) {
      let dstStat;
      try {
        dstStat = await fs3.lstat(dstpath);
      } catch {
      }
      let srcStat;
      try {
        srcStat = await fs3.lstat(srcpath);
      } catch (err) {
        err.message = err.message.replace("lstat", "ensureLink");
        throw err;
      }
      if (dstStat && areIdentical(srcStat, dstStat)) return;
      const dir = path2.dirname(dstpath);
      const dirExists = await pathExists(dir);
      if (!dirExists) {
        await mkdir.mkdirs(dir);
      }
      await fs3.link(srcpath, dstpath);
    }
    function createLinkSync(srcpath, dstpath) {
      let dstStat;
      try {
        dstStat = fs3.lstatSync(dstpath);
      } catch {
      }
      try {
        const srcStat = fs3.lstatSync(srcpath);
        if (dstStat && areIdentical(srcStat, dstStat)) return;
      } catch (err) {
        err.message = err.message.replace("lstat", "ensureLink");
        throw err;
      }
      const dir = path2.dirname(dstpath);
      const dirExists = fs3.existsSync(dir);
      if (dirExists) return fs3.linkSync(srcpath, dstpath);
      mkdir.mkdirsSync(dir);
      return fs3.linkSync(srcpath, dstpath);
    }
    module2.exports = {
      createLink: u(createLink),
      createLinkSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/symlink-paths.js
var require_symlink_paths = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/symlink-paths.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var path2 = require("path");
    var fs3 = require_fs();
    var { pathExists } = require_path_exists();
    var u = require_universalify().fromPromise;
    async function symlinkPaths(srcpath, dstpath) {
      if (path2.isAbsolute(srcpath)) {
        try {
          await fs3.lstat(srcpath);
        } catch (err) {
          err.message = err.message.replace("lstat", "ensureSymlink");
          throw err;
        }
        return {
          toCwd: srcpath,
          toDst: srcpath
        };
      }
      const dstdir = path2.dirname(dstpath);
      const relativeToDst = path2.join(dstdir, srcpath);
      const exists = await pathExists(relativeToDst);
      if (exists) {
        return {
          toCwd: relativeToDst,
          toDst: srcpath
        };
      }
      try {
        await fs3.lstat(srcpath);
      } catch (err) {
        err.message = err.message.replace("lstat", "ensureSymlink");
        throw err;
      }
      return {
        toCwd: srcpath,
        toDst: path2.relative(dstdir, srcpath)
      };
    }
    function symlinkPathsSync(srcpath, dstpath) {
      if (path2.isAbsolute(srcpath)) {
        const exists2 = fs3.existsSync(srcpath);
        if (!exists2) throw new Error("absolute srcpath does not exist");
        return {
          toCwd: srcpath,
          toDst: srcpath
        };
      }
      const dstdir = path2.dirname(dstpath);
      const relativeToDst = path2.join(dstdir, srcpath);
      const exists = fs3.existsSync(relativeToDst);
      if (exists) {
        return {
          toCwd: relativeToDst,
          toDst: srcpath
        };
      }
      const srcExists = fs3.existsSync(srcpath);
      if (!srcExists) throw new Error("relative srcpath does not exist");
      return {
        toCwd: srcpath,
        toDst: path2.relative(dstdir, srcpath)
      };
    }
    module2.exports = {
      symlinkPaths: u(symlinkPaths),
      symlinkPathsSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/symlink-type.js
var require_symlink_type = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/symlink-type.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_fs();
    var u = require_universalify().fromPromise;
    async function symlinkType(srcpath, type) {
      if (type) return type;
      let stats;
      try {
        stats = await fs3.lstat(srcpath);
      } catch {
        return "file";
      }
      return stats && stats.isDirectory() ? "dir" : "file";
    }
    function symlinkTypeSync(srcpath, type) {
      if (type) return type;
      let stats;
      try {
        stats = fs3.lstatSync(srcpath);
      } catch {
        return "file";
      }
      return stats && stats.isDirectory() ? "dir" : "file";
    }
    module2.exports = {
      symlinkType: u(symlinkType),
      symlinkTypeSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/symlink.js
var require_symlink = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/symlink.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    var path2 = require("path");
    var fs3 = require_fs();
    var { mkdirs, mkdirsSync } = require_mkdirs();
    var { symlinkPaths, symlinkPathsSync } = require_symlink_paths();
    var { symlinkType, symlinkTypeSync } = require_symlink_type();
    var { pathExists } = require_path_exists();
    var { areIdentical } = require_stat();
    async function createSymlink(srcpath, dstpath, type) {
      let stats;
      try {
        stats = await fs3.lstat(dstpath);
      } catch {
      }
      if (stats && stats.isSymbolicLink()) {
        const [srcStat, dstStat] = await Promise.all([
          fs3.stat(srcpath),
          fs3.stat(dstpath)
        ]);
        if (areIdentical(srcStat, dstStat)) return;
      }
      const relative = await symlinkPaths(srcpath, dstpath);
      srcpath = relative.toDst;
      const toType = await symlinkType(relative.toCwd, type);
      const dir = path2.dirname(dstpath);
      if (!await pathExists(dir)) {
        await mkdirs(dir);
      }
      return fs3.symlink(srcpath, dstpath, toType);
    }
    function createSymlinkSync(srcpath, dstpath, type) {
      let stats;
      try {
        stats = fs3.lstatSync(dstpath);
      } catch {
      }
      if (stats && stats.isSymbolicLink()) {
        const srcStat = fs3.statSync(srcpath);
        const dstStat = fs3.statSync(dstpath);
        if (areIdentical(srcStat, dstStat)) return;
      }
      const relative = symlinkPathsSync(srcpath, dstpath);
      srcpath = relative.toDst;
      type = symlinkTypeSync(relative.toCwd, type);
      const dir = path2.dirname(dstpath);
      const exists = fs3.existsSync(dir);
      if (exists) return fs3.symlinkSync(srcpath, dstpath, type);
      mkdirsSync(dir);
      return fs3.symlinkSync(srcpath, dstpath, type);
    }
    module2.exports = {
      createSymlink: u(createSymlink),
      createSymlinkSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/index.js
var require_ensure = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/ensure/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var { createFile, createFileSync } = require_file();
    var { createLink, createLinkSync } = require_link();
    var { createSymlink, createSymlinkSync } = require_symlink();
    module2.exports = {
      // file
      createFile,
      createFileSync,
      ensureFile: createFile,
      ensureFileSync: createFileSync,
      // link
      createLink,
      createLinkSync,
      ensureLink: createLink,
      ensureLinkSync: createLinkSync,
      // symlink
      createSymlink,
      createSymlinkSync,
      ensureSymlink: createSymlink,
      ensureSymlinkSync: createSymlinkSync
    };
  }
});

// node_modules/.pnpm/jsonfile@6.1.0/node_modules/jsonfile/utils.js
var require_utils4 = __commonJS({
  "node_modules/.pnpm/jsonfile@6.1.0/node_modules/jsonfile/utils.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    function stringify(obj, { EOL = "\n", finalEOL = true, replacer = null, spaces } = {}) {
      const EOF = finalEOL ? EOL : "";
      const str = JSON.stringify(obj, replacer, spaces);
      return str.replace(/\n/g, EOL) + EOF;
    }
    function stripBom(content) {
      if (Buffer.isBuffer(content)) content = content.toString("utf8");
      return content.replace(/^\uFEFF/, "");
    }
    module2.exports = { stringify, stripBom };
  }
});

// node_modules/.pnpm/jsonfile@6.1.0/node_modules/jsonfile/index.js
var require_jsonfile = __commonJS({
  "node_modules/.pnpm/jsonfile@6.1.0/node_modules/jsonfile/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var _fs;
    try {
      _fs = require_graceful_fs();
    } catch (_) {
      _fs = require("fs");
    }
    var universalify = require_universalify();
    var { stringify, stripBom } = require_utils4();
    async function _readFile(file, options = {}) {
      if (typeof options === "string") {
        options = { encoding: options };
      }
      const fs3 = options.fs || _fs;
      const shouldThrow = "throws" in options ? options.throws : true;
      let data = await universalify.fromCallback(fs3.readFile)(file, options);
      data = stripBom(data);
      let obj;
      try {
        obj = JSON.parse(data, options ? options.reviver : null);
      } catch (err) {
        if (shouldThrow) {
          err.message = `${file}: ${err.message}`;
          throw err;
        } else {
          return null;
        }
      }
      return obj;
    }
    var readFile = universalify.fromPromise(_readFile);
    function readFileSync(file, options = {}) {
      if (typeof options === "string") {
        options = { encoding: options };
      }
      const fs3 = options.fs || _fs;
      const shouldThrow = "throws" in options ? options.throws : true;
      try {
        let content = fs3.readFileSync(file, options);
        content = stripBom(content);
        return JSON.parse(content, options.reviver);
      } catch (err) {
        if (shouldThrow) {
          err.message = `${file}: ${err.message}`;
          throw err;
        } else {
          return null;
        }
      }
    }
    async function _writeFile(file, obj, options = {}) {
      const fs3 = options.fs || _fs;
      const str = stringify(obj, options);
      await universalify.fromCallback(fs3.writeFile)(file, str, options);
    }
    var writeFile = universalify.fromPromise(_writeFile);
    function writeFileSync(file, obj, options = {}) {
      const fs3 = options.fs || _fs;
      const str = stringify(obj, options);
      return fs3.writeFileSync(file, str, options);
    }
    var jsonfile = {
      readFile,
      readFileSync,
      writeFile,
      writeFileSync
    };
    module2.exports = jsonfile;
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/json/jsonfile.js
var require_jsonfile2 = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/json/jsonfile.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var jsonFile = require_jsonfile();
    module2.exports = {
      // jsonfile exports
      readJson: jsonFile.readFile,
      readJsonSync: jsonFile.readFileSync,
      writeJson: jsonFile.writeFile,
      writeJsonSync: jsonFile.writeFileSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/output-file/index.js
var require_output_file = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/output-file/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    var fs3 = require_fs();
    var path2 = require("path");
    var mkdir = require_mkdirs();
    var pathExists = require_path_exists().pathExists;
    async function outputFile(file, data, encoding = "utf-8") {
      const dir = path2.dirname(file);
      if (!await pathExists(dir)) {
        await mkdir.mkdirs(dir);
      }
      return fs3.writeFile(file, data, encoding);
    }
    function outputFileSync(file, ...args) {
      const dir = path2.dirname(file);
      if (!fs3.existsSync(dir)) {
        mkdir.mkdirsSync(dir);
      }
      fs3.writeFileSync(file, ...args);
    }
    module2.exports = {
      outputFile: u(outputFile),
      outputFileSync
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/json/output-json.js
var require_output_json = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/json/output-json.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var { stringify } = require_utils4();
    var { outputFile } = require_output_file();
    async function outputJson(file, data, options = {}) {
      const str = stringify(data, options);
      await outputFile(file, str, options);
    }
    module2.exports = outputJson;
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/json/output-json-sync.js
var require_output_json_sync = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/json/output-json-sync.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var { stringify } = require_utils4();
    var { outputFileSync } = require_output_file();
    function outputJsonSync(file, data, options) {
      const str = stringify(data, options);
      outputFileSync(file, str, options);
    }
    module2.exports = outputJsonSync;
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/json/index.js
var require_json = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/json/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    var jsonFile = require_jsonfile2();
    jsonFile.outputJson = u(require_output_json());
    jsonFile.outputJsonSync = require_output_json_sync();
    jsonFile.outputJSON = jsonFile.outputJson;
    jsonFile.outputJSONSync = jsonFile.outputJsonSync;
    jsonFile.writeJSON = jsonFile.writeJson;
    jsonFile.writeJSONSync = jsonFile.writeJsonSync;
    jsonFile.readJSON = jsonFile.readJson;
    jsonFile.readJSONSync = jsonFile.readJsonSync;
    module2.exports = jsonFile;
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/move/move.js
var require_move = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/move/move.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_fs();
    var path2 = require("path");
    var { copy } = require_copy2();
    var { remove } = require_remove();
    var { mkdirp } = require_mkdirs();
    var { pathExists } = require_path_exists();
    var stat = require_stat();
    async function move(src, dest, opts = {}) {
      const overwrite = opts.overwrite || opts.clobber || false;
      const { srcStat, isChangingCase = false } = await stat.checkPaths(src, dest, "move", opts);
      await stat.checkParentPaths(src, srcStat, dest, "move");
      const destParent = path2.dirname(dest);
      const parsedParentPath = path2.parse(destParent);
      if (parsedParentPath.root !== destParent) {
        await mkdirp(destParent);
      }
      return doRename(src, dest, overwrite, isChangingCase);
    }
    async function doRename(src, dest, overwrite, isChangingCase) {
      if (!isChangingCase) {
        if (overwrite) {
          await remove(dest);
        } else if (await pathExists(dest)) {
          throw new Error("dest already exists.");
        }
      }
      try {
        await fs3.rename(src, dest);
      } catch (err) {
        if (err.code !== "EXDEV") {
          throw err;
        }
        await moveAcrossDevice(src, dest, overwrite);
      }
    }
    async function moveAcrossDevice(src, dest, overwrite) {
      const opts = {
        overwrite,
        errorOnExist: true,
        preserveTimestamps: true
      };
      await copy(src, dest, opts);
      return remove(src);
    }
    module2.exports = move;
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/move/move-sync.js
var require_move_sync = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/move/move-sync.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var fs3 = require_graceful_fs();
    var path2 = require("path");
    var copySync = require_copy2().copySync;
    var removeSync = require_remove().removeSync;
    var mkdirpSync = require_mkdirs().mkdirpSync;
    var stat = require_stat();
    function moveSync(src, dest, opts) {
      opts = opts || {};
      const overwrite = opts.overwrite || opts.clobber || false;
      const { srcStat, isChangingCase = false } = stat.checkPathsSync(src, dest, "move", opts);
      stat.checkParentPathsSync(src, srcStat, dest, "move");
      if (!isParentRoot(dest)) mkdirpSync(path2.dirname(dest));
      return doRename(src, dest, overwrite, isChangingCase);
    }
    function isParentRoot(dest) {
      const parent = path2.dirname(dest);
      const parsedPath = path2.parse(parent);
      return parsedPath.root === parent;
    }
    function doRename(src, dest, overwrite, isChangingCase) {
      if (isChangingCase) return rename(src, dest, overwrite);
      if (overwrite) {
        removeSync(dest);
        return rename(src, dest, overwrite);
      }
      if (fs3.existsSync(dest)) throw new Error("dest already exists.");
      return rename(src, dest, overwrite);
    }
    function rename(src, dest, overwrite) {
      try {
        fs3.renameSync(src, dest);
      } catch (err) {
        if (err.code !== "EXDEV") throw err;
        return moveAcrossDevice(src, dest, overwrite);
      }
    }
    function moveAcrossDevice(src, dest, overwrite) {
      const opts = {
        overwrite,
        errorOnExist: true,
        preserveTimestamps: true
      };
      copySync(src, dest, opts);
      return removeSync(src);
    }
    module2.exports = moveSync;
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/move/index.js
var require_move2 = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/move/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    var u = require_universalify().fromPromise;
    module2.exports = {
      move: u(require_move()),
      moveSync: require_move_sync()
    };
  }
});

// node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/index.js
var require_lib = __commonJS({
  "node_modules/.pnpm/fs-extra@11.3.0/node_modules/fs-extra/lib/index.js"(exports2, module2) {
    "use strict";
    init_cjs_shims();
    module2.exports = {
      // Export promiseified graceful-fs:
      ...require_fs(),
      // Export extra methods:
      ...require_copy2(),
      ...require_empty(),
      ...require_ensure(),
      ...require_json(),
      ...require_mkdirs(),
      ...require_move2(),
      ...require_output_file(),
      ...require_path_exists(),
      ...require_remove()
    };
  }
});

// scripts/fetch-tweets.ts
var fetch_tweets_exports = {};
__export(fetch_tweets_exports, {
  fetchTweets: () => fetchTweets
});
module.exports = __toCommonJS(fetch_tweets_exports);
init_cjs_shims();

// scripts/utils.ts
init_cjs_shims();
var import_twitter_openapi_typescript = __toESM(require_src(), 1);

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/index.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/axios.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/utils.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/bind.js
init_cjs_shims();
function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/utils.js
var { toString } = Object.prototype;
var { getPrototypeOf } = Object;
var kindOf = /* @__PURE__ */ ((cache) => (thing) => {
  const str = toString.call(thing);
  return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null));
var kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type;
};
var typeOfTest = (type) => (thing) => typeof thing === type;
var { isArray } = Array;
var isUndefined = typeOfTest("undefined");
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}
var isArrayBuffer = kindOfTest("ArrayBuffer");
function isArrayBufferView(val) {
  let result;
  if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && isArrayBuffer(val.buffer);
  }
  return result;
}
var isString = typeOfTest("string");
var isFunction = typeOfTest("function");
var isNumber = typeOfTest("number");
var isObject = (thing) => thing !== null && typeof thing === "object";
var isBoolean = (thing) => thing === true || thing === false;
var isPlainObject = (val) => {
  if (kindOf(val) !== "object") {
    return false;
  }
  const prototype3 = getPrototypeOf(val);
  return (prototype3 === null || prototype3 === Object.prototype || Object.getPrototypeOf(prototype3) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
};
var isDate = kindOfTest("Date");
var isFile = kindOfTest("File");
var isBlob = kindOfTest("Blob");
var isFileList = kindOfTest("FileList");
var isStream = (val) => isObject(val) && isFunction(val.pipe);
var isFormData = (thing) => {
  let kind;
  return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
  kind === "object" && isFunction(thing.toString) && thing.toString() === "[object FormData]"));
};
var isURLSearchParams = kindOfTest("URLSearchParams");
var [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
var trim = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function forEach(obj, fn, { allOwnKeys = false } = {}) {
  if (obj === null || typeof obj === "undefined") {
    return;
  }
  let i;
  let l;
  if (typeof obj !== "object") {
    obj = [obj];
  }
  if (isArray(obj)) {
    for (i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    const len = keys.length;
    let key;
    for (i = 0; i < len; i++) {
      key = keys[i];
      fn.call(null, obj[key], key, obj);
    }
  }
}
function findKey(obj, key) {
  key = key.toLowerCase();
  const keys = Object.keys(obj);
  let i = keys.length;
  let _key;
  while (i-- > 0) {
    _key = keys[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}
var _global = (() => {
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
})();
var isContextDefined = (context) => !isUndefined(context) && context !== _global;
function merge() {
  const { caseless } = isContextDefined(this) && this || {};
  const result = {};
  const assignValue = (val, key) => {
    const targetKey = caseless && findKey(result, key) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge({}, val);
    } else if (isArray(val)) {
      result[targetKey] = val.slice();
    } else {
      result[targetKey] = val;
    }
  };
  for (let i = 0, l = arguments.length; i < l; i++) {
    arguments[i] && forEach(arguments[i], assignValue);
  }
  return result;
}
var extend = (a, b, thisArg, { allOwnKeys } = {}) => {
  forEach(b, (val, key) => {
    if (thisArg && isFunction(val)) {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  }, { allOwnKeys });
  return a;
};
var stripBOM = (content) => {
  if (content.charCodeAt(0) === 65279) {
    content = content.slice(1);
  }
  return content;
};
var inherits = (constructor, superConstructor, props, descriptors2) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, "super", {
    value: superConstructor.prototype
  });
  props && Object.assign(constructor.prototype, props);
};
var toFlatObject = (sourceObj, destObj, filter2, propFilter) => {
  let props;
  let i;
  let prop;
  const merged = {};
  destObj = destObj || {};
  if (sourceObj == null) return destObj;
  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter2 !== false && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter2 || filter2(sourceObj, destObj)) && sourceObj !== Object.prototype);
  return destObj;
};
var endsWith = (str, searchString, position) => {
  str = String(str);
  if (position === void 0 || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
};
var toArray = (thing) => {
  if (!thing) return null;
  if (isArray(thing)) return thing;
  let i = thing.length;
  if (!isNumber(i)) return null;
  const arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
};
var isTypedArray = /* @__PURE__ */ ((TypedArray) => {
  return (thing) => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
var forEachEntry = (obj, fn) => {
  const generator = obj && obj[Symbol.iterator];
  const iterator = generator.call(obj);
  let result;
  while ((result = iterator.next()) && !result.done) {
    const pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
};
var matchAll = (regExp, str) => {
  let matches;
  const arr = [];
  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }
  return arr;
};
var isHTMLForm = kindOfTest("HTMLFormElement");
var toCamelCase = (str) => {
  return str.toLowerCase().replace(
    /[-_\s]([a-z\d])(\w*)/g,
    function replacer(m, p1, p2) {
      return p1.toUpperCase() + p2;
    }
  );
};
var hasOwnProperty = (({ hasOwnProperty: hasOwnProperty2 }) => (obj, prop) => hasOwnProperty2.call(obj, prop))(Object.prototype);
var isRegExp = kindOfTest("RegExp");
var reduceDescriptors = (obj, reducer) => {
  const descriptors2 = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};
  forEach(descriptors2, (descriptor, name) => {
    let ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });
  Object.defineProperties(obj, reducedDescriptors);
};
var freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    if (isFunction(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1) {
      return false;
    }
    const value = obj[name];
    if (!isFunction(value)) return;
    descriptor.enumerable = false;
    if ("writable" in descriptor) {
      descriptor.writable = false;
      return;
    }
    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error("Can not rewrite read-only method '" + name + "'");
      };
    }
  });
};
var toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};
  const define2 = (arr) => {
    arr.forEach((value) => {
      obj[value] = true;
    });
  };
  isArray(arrayOrString) ? define2(arrayOrString) : define2(String(arrayOrString).split(delimiter));
  return obj;
};
var noop = () => {
};
var toFiniteNumber = (value, defaultValue) => {
  return value != null && Number.isFinite(value = +value) ? value : defaultValue;
};
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === "FormData" && thing[Symbol.iterator]);
}
var toJSONObject = (obj) => {
  const stack = new Array(10);
  const visit = (source, i) => {
    if (isObject(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }
      if (!("toJSON" in source)) {
        stack[i] = source;
        const target = isArray(source) ? [] : {};
        forEach(source, (value, key) => {
          const reducedValue = visit(value, i + 1);
          !isUndefined(reducedValue) && (target[key] = reducedValue);
        });
        stack[i] = void 0;
        return target;
      }
    }
    return source;
  };
  return visit(obj, 0);
};
var isAsyncFn = kindOfTest("AsyncFunction");
var isThenable = (thing) => thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);
var _setImmediate = ((setImmediateSupported, postMessageSupported) => {
  if (setImmediateSupported) {
    return setImmediate;
  }
  return postMessageSupported ? ((token, callbacks) => {
    _global.addEventListener("message", ({ source, data }) => {
      if (source === _global && data === token) {
        callbacks.length && callbacks.shift()();
      }
    }, false);
    return (cb) => {
      callbacks.push(cb);
      _global.postMessage(token, "*");
    };
  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);
})(
  typeof setImmediate === "function",
  isFunction(_global.postMessage)
);
var asap = typeof queueMicrotask !== "undefined" ? queueMicrotask.bind(_global) : typeof process !== "undefined" && process.nextTick || _setImmediate;
var utils_default = {
  isArray,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isBoolean,
  isObject,
  isPlainObject,
  isReadableStream,
  isRequest,
  isResponse,
  isHeaders,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isRegExp,
  isFunction,
  isStream,
  isURLSearchParams,
  isTypedArray,
  isFileList,
  forEach,
  merge,
  extend,
  trim,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty,
  hasOwnProp: hasOwnProperty,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop,
  toFiniteNumber,
  findKey,
  global: _global,
  isContextDefined,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable,
  setImmediate: _setImmediate,
  asap
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/Axios.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/buildURL.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/AxiosURLSearchParams.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/toFormData.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/AxiosError.js
init_cjs_shims();
function AxiosError(message, code, config2, request2, response) {
  Error.call(this);
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = new Error().stack;
  }
  this.message = message;
  this.name = "AxiosError";
  code && (this.code = code);
  config2 && (this.config = config2);
  request2 && (this.request = request2);
  if (response) {
    this.response = response;
    this.status = response.status ? response.status : null;
  }
}
utils_default.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils_default.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
var prototype = AxiosError.prototype;
var descriptors = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((code) => {
  descriptors[code] = { value: code };
});
Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, "isAxiosError", { value: true });
AxiosError.from = (error, code, config2, request2, response, customProps) => {
  const axiosError = Object.create(prototype);
  utils_default.toFlatObject(error, axiosError, function filter2(obj) {
    return obj !== Error.prototype;
  }, (prop) => {
    return prop !== "isAxiosError";
  });
  AxiosError.call(axiosError, error.message, code, config2, request2, response);
  axiosError.cause = error;
  axiosError.name = error.name;
  customProps && Object.assign(axiosError, customProps);
  return axiosError;
};
var AxiosError_default = AxiosError;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/platform/node/classes/FormData.js
init_cjs_shims();
var import_form_data = __toESM(require_form_data(), 1);
var FormData_default = import_form_data.default;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/toFormData.js
function isVisitable(thing) {
  return utils_default.isPlainObject(thing) || utils_default.isArray(thing);
}
function removeBrackets(key) {
  return utils_default.endsWith(key, "[]") ? key.slice(0, -2) : key;
}
function renderKey(path2, key, dots) {
  if (!path2) return key;
  return path2.concat(key).map(function each(token, i) {
    token = removeBrackets(token);
    return !dots && i ? "[" + token + "]" : token;
  }).join(dots ? "." : "");
}
function isFlatArray(arr) {
  return utils_default.isArray(arr) && !arr.some(isVisitable);
}
var predicates = utils_default.toFlatObject(utils_default, {}, null, function filter(prop) {
  return /^is[A-Z]/.test(prop);
});
function toFormData(obj, formData, options) {
  if (!utils_default.isObject(obj)) {
    throw new TypeError("target must be an object");
  }
  formData = formData || new (FormData_default || FormData)();
  options = utils_default.toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    return !utils_default.isUndefined(source[option]);
  });
  const metaTokens = options.metaTokens;
  const visitor = options.visitor || defaultVisitor;
  const dots = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
  const useBlob = _Blob && utils_default.isSpecCompliantForm(formData);
  if (!utils_default.isFunction(visitor)) {
    throw new TypeError("visitor must be a function");
  }
  function convertValue(value) {
    if (value === null) return "";
    if (utils_default.isDate(value)) {
      return value.toISOString();
    }
    if (!useBlob && utils_default.isBlob(value)) {
      throw new AxiosError_default("Blob is not supported. Use a Buffer instead.");
    }
    if (utils_default.isArrayBuffer(value) || utils_default.isTypedArray(value)) {
      return useBlob && typeof Blob === "function" ? new Blob([value]) : Buffer.from(value);
    }
    return value;
  }
  function defaultVisitor(value, key, path2) {
    let arr = value;
    if (value && !path2 && typeof value === "object") {
      if (utils_default.endsWith(key, "{}")) {
        key = metaTokens ? key : key.slice(0, -2);
        value = JSON.stringify(value);
      } else if (utils_default.isArray(value) && isFlatArray(value) || (utils_default.isFileList(value) || utils_default.endsWith(key, "[]")) && (arr = utils_default.toArray(value))) {
        key = removeBrackets(key);
        arr.forEach(function each(el, index) {
          !(utils_default.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + "[]",
            convertValue(el)
          );
        });
        return false;
      }
    }
    if (isVisitable(value)) {
      return true;
    }
    formData.append(renderKey(path2, key, dots), convertValue(value));
    return false;
  }
  const stack = [];
  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });
  function build(value, path2) {
    if (utils_default.isUndefined(value)) return;
    if (stack.indexOf(value) !== -1) {
      throw Error("Circular reference detected in " + path2.join("."));
    }
    stack.push(value);
    utils_default.forEach(value, function each(el, key) {
      const result = !(utils_default.isUndefined(el) || el === null) && visitor.call(
        formData,
        el,
        utils_default.isString(key) ? key.trim() : key,
        path2,
        exposedHelpers
      );
      if (result === true) {
        build(el, path2 ? path2.concat(key) : [key]);
      }
    });
    stack.pop();
  }
  if (!utils_default.isObject(obj)) {
    throw new TypeError("data must be an object");
  }
  build(obj);
  return formData;
}
var toFormData_default = toFormData;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/AxiosURLSearchParams.js
function encode(str) {
  const charMap = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
    return charMap[match];
  });
}
function AxiosURLSearchParams(params, options) {
  this._pairs = [];
  params && toFormData_default(params, this, options);
}
var prototype2 = AxiosURLSearchParams.prototype;
prototype2.append = function append(name, value) {
  this._pairs.push([name, value]);
};
prototype2.toString = function toString2(encoder) {
  const _encode = encoder ? function(value) {
    return encoder.call(this, value, encode);
  } : encode;
  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + "=" + _encode(pair[1]);
  }, "").join("&");
};
var AxiosURLSearchParams_default = AxiosURLSearchParams;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/buildURL.js
function encode2(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function buildURL(url2, params, options) {
  if (!params) {
    return url2;
  }
  const _encode = options && options.encode || encode2;
  if (utils_default.isFunction(options)) {
    options = {
      serialize: options
    };
  }
  const serializeFn = options && options.serialize;
  let serializedParams;
  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = utils_default.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams_default(params, options).toString(_encode);
  }
  if (serializedParams) {
    const hashmarkIndex = url2.indexOf("#");
    if (hashmarkIndex !== -1) {
      url2 = url2.slice(0, hashmarkIndex);
    }
    url2 += (url2.indexOf("?") === -1 ? "?" : "&") + serializedParams;
  }
  return url2;
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/InterceptorManager.js
init_cjs_shims();
var InterceptorManager = class {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    utils_default.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h);
      }
    });
  }
};
var InterceptorManager_default = InterceptorManager;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/dispatchRequest.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/transformData.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/defaults/index.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/defaults/transitional.js
init_cjs_shims();
var transitional_default = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/toURLEncodedForm.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/platform/index.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/platform/node/index.js
init_cjs_shims();
var import_crypto = __toESM(require("crypto"), 1);

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/platform/node/classes/URLSearchParams.js
init_cjs_shims();
var import_url = __toESM(require("url"), 1);
var URLSearchParams_default = import_url.default.URLSearchParams;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/platform/node/index.js
var ALPHA = "abcdefghijklmnopqrstuvwxyz";
var DIGIT = "0123456789";
var ALPHABET = {
  DIGIT,
  ALPHA,
  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
};
var generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
  let str = "";
  const { length } = alphabet;
  const randomValues = new Uint32Array(size);
  import_crypto.default.randomFillSync(randomValues);
  for (let i = 0; i < size; i++) {
    str += alphabet[randomValues[i] % length];
  }
  return str;
};
var node_default = {
  isNode: true,
  classes: {
    URLSearchParams: URLSearchParams_default,
    FormData: FormData_default,
    Blob: typeof Blob !== "undefined" && Blob || null
  },
  ALPHABET,
  generateString,
  protocols: ["http", "https", "file", "data"]
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/platform/common/utils.js
var utils_exports = {};
__export(utils_exports, {
  hasBrowserEnv: () => hasBrowserEnv,
  hasStandardBrowserEnv: () => hasStandardBrowserEnv,
  hasStandardBrowserWebWorkerEnv: () => hasStandardBrowserWebWorkerEnv,
  navigator: () => _navigator,
  origin: () => origin
});
init_cjs_shims();
var hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
var _navigator = typeof navigator === "object" && navigator || void 0;
var hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0);
var hasStandardBrowserWebWorkerEnv = (() => {
  return typeof WorkerGlobalScope !== "undefined" && // eslint-disable-next-line no-undef
  self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
})();
var origin = hasBrowserEnv && window.location.href || "http://localhost";

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/platform/index.js
var platform_default = {
  ...utils_exports,
  ...node_default
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/toURLEncodedForm.js
function toURLEncodedForm(data, options) {
  return toFormData_default(data, new platform_default.classes.URLSearchParams(), Object.assign({
    visitor: function(value, key, path2, helpers) {
      if (platform_default.isNode && utils_default.isBuffer(value)) {
        this.append(key, value.toString("base64"));
        return false;
      }
      return helpers.defaultVisitor.apply(this, arguments);
    }
  }, options));
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/formDataToJSON.js
init_cjs_shims();
function parsePropPath(name) {
  return utils_default.matchAll(/\w+|\[(\w*)]/g, name).map((match) => {
    return match[0] === "[]" ? "" : match[1] || match[0];
  });
}
function arrayToObject(arr) {
  const obj = {};
  const keys = Object.keys(arr);
  let i;
  const len = keys.length;
  let key;
  for (i = 0; i < len; i++) {
    key = keys[i];
    obj[key] = arr[key];
  }
  return obj;
}
function formDataToJSON(formData) {
  function buildPath(path2, value, target, index) {
    let name = path2[index++];
    if (name === "__proto__") return true;
    const isNumericKey = Number.isFinite(+name);
    const isLast = index >= path2.length;
    name = !name && utils_default.isArray(target) ? target.length : name;
    if (isLast) {
      if (utils_default.hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }
      return !isNumericKey;
    }
    if (!target[name] || !utils_default.isObject(target[name])) {
      target[name] = [];
    }
    const result = buildPath(path2, value, target[name], index);
    if (result && utils_default.isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }
    return !isNumericKey;
  }
  if (utils_default.isFormData(formData) && utils_default.isFunction(formData.entries)) {
    const obj = {};
    utils_default.forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    });
    return obj;
  }
  return null;
}
var formDataToJSON_default = formDataToJSON;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/defaults/index.js
function stringifySafely(rawValue, parser, encoder) {
  if (utils_default.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils_default.trim(rawValue);
    } catch (e) {
      if (e.name !== "SyntaxError") {
        throw e;
      }
    }
  }
  return (encoder || JSON.stringify)(rawValue);
}
var defaults = {
  transitional: transitional_default,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function transformRequest(data, headers) {
    const contentType = headers.getContentType() || "";
    const hasJSONContentType = contentType.indexOf("application/json") > -1;
    const isObjectPayload = utils_default.isObject(data);
    if (isObjectPayload && utils_default.isHTMLForm(data)) {
      data = new FormData(data);
    }
    const isFormData2 = utils_default.isFormData(data);
    if (isFormData2) {
      return hasJSONContentType ? JSON.stringify(formDataToJSON_default(data)) : data;
    }
    if (utils_default.isArrayBuffer(data) || utils_default.isBuffer(data) || utils_default.isStream(data) || utils_default.isFile(data) || utils_default.isBlob(data) || utils_default.isReadableStream(data)) {
      return data;
    }
    if (utils_default.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils_default.isURLSearchParams(data)) {
      headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
      return data.toString();
    }
    let isFileList2;
    if (isObjectPayload) {
      if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
        return toURLEncodedForm(data, this.formSerializer).toString();
      }
      if ((isFileList2 = utils_default.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
        const _FormData = this.env && this.env.FormData;
        return toFormData_default(
          isFileList2 ? { "files[]": data } : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }
    if (isObjectPayload || hasJSONContentType) {
      headers.setContentType("application/json", false);
      return stringifySafely(data);
    }
    return data;
  }],
  transformResponse: [function transformResponse(data) {
    const transitional2 = this.transitional || defaults.transitional;
    const forcedJSONParsing = transitional2 && transitional2.forcedJSONParsing;
    const JSONRequested = this.responseType === "json";
    if (utils_default.isResponse(data) || utils_default.isReadableStream(data)) {
      return data;
    }
    if (data && utils_default.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
      const silentJSONParsing = transitional2 && transitional2.silentJSONParsing;
      const strictJSONParsing = !silentJSONParsing && JSONRequested;
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === "SyntaxError") {
            throw AxiosError_default.from(e, AxiosError_default.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }
    return data;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: platform_default.classes.FormData,
    Blob: platform_default.classes.Blob
  },
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      "Accept": "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
utils_default.forEach(["delete", "get", "head", "post", "put", "patch"], (method) => {
  defaults.headers[method] = {};
});
var defaults_default = defaults;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/AxiosHeaders.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/parseHeaders.js
init_cjs_shims();
var ignoreDuplicateOf = utils_default.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]);
var parseHeaders_default = (rawHeaders) => {
  const parsed = {};
  let key;
  let val;
  let i;
  rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
    i = line.indexOf(":");
    key = line.substring(0, i).trim().toLowerCase();
    val = line.substring(i + 1).trim();
    if (!key || parsed[key] && ignoreDuplicateOf[key]) {
      return;
    }
    if (key === "set-cookie") {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
    }
  });
  return parsed;
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/AxiosHeaders.js
var $internals = Symbol("internals");
function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}
function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }
  return utils_default.isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
  const tokens = /* @__PURE__ */ Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match;
  while (match = tokensRE.exec(str)) {
    tokens[match[1]] = match[2];
  }
  return tokens;
}
var isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
function matchHeaderValue(context, value, header, filter2, isHeaderNameFilter) {
  if (utils_default.isFunction(filter2)) {
    return filter2.call(this, value, header);
  }
  if (isHeaderNameFilter) {
    value = header;
  }
  if (!utils_default.isString(value)) return;
  if (utils_default.isString(filter2)) {
    return value.indexOf(filter2) !== -1;
  }
  if (utils_default.isRegExp(filter2)) {
    return filter2.test(value);
  }
}
function formatHeader(header) {
  return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str) => {
    return char.toUpperCase() + str;
  });
}
function buildAccessors(obj, header) {
  const accessorName = utils_default.toCamelCase(" " + header);
  ["get", "set", "has"].forEach((methodName) => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}
var AxiosHeaders = class {
  constructor(headers) {
    headers && this.set(headers);
  }
  set(header, valueOrRewrite, rewrite) {
    const self2 = this;
    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);
      if (!lHeader) {
        throw new Error("header name must be a non-empty string");
      }
      const key = utils_default.findKey(self2, lHeader);
      if (!key || self2[key] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key] !== false) {
        self2[key || _header] = normalizeValue(_value);
      }
    }
    const setHeaders = (headers, _rewrite) => utils_default.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
    if (utils_default.isPlainObject(header) || header instanceof this.constructor) {
      setHeaders(header, valueOrRewrite);
    } else if (utils_default.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
      setHeaders(parseHeaders_default(header), valueOrRewrite);
    } else if (utils_default.isHeaders(header)) {
      for (const [key, value] of header.entries()) {
        setHeader(value, key, rewrite);
      }
    } else {
      header != null && setHeader(valueOrRewrite, header, rewrite);
    }
    return this;
  }
  get(header, parser) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils_default.findKey(this, header);
      if (key) {
        const value = this[key];
        if (!parser) {
          return value;
        }
        if (parser === true) {
          return parseTokens(value);
        }
        if (utils_default.isFunction(parser)) {
          return parser.call(this, value, key);
        }
        if (utils_default.isRegExp(parser)) {
          return parser.exec(value);
        }
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(header, matcher) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils_default.findKey(this, header);
      return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }
    return false;
  }
  delete(header, matcher) {
    const self2 = this;
    let deleted = false;
    function deleteHeader(_header) {
      _header = normalizeHeader(_header);
      if (_header) {
        const key = utils_default.findKey(self2, _header);
        if (key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher))) {
          delete self2[key];
          deleted = true;
        }
      }
    }
    if (utils_default.isArray(header)) {
      header.forEach(deleteHeader);
    } else {
      deleteHeader(header);
    }
    return deleted;
  }
  clear(matcher) {
    const keys = Object.keys(this);
    let i = keys.length;
    let deleted = false;
    while (i--) {
      const key = keys[i];
      if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }
    return deleted;
  }
  normalize(format) {
    const self2 = this;
    const headers = {};
    utils_default.forEach(this, (value, header) => {
      const key = utils_default.findKey(headers, header);
      if (key) {
        self2[key] = normalizeValue(value);
        delete self2[header];
        return;
      }
      const normalized = format ? formatHeader(header) : String(header).trim();
      if (normalized !== header) {
        delete self2[header];
      }
      self2[normalized] = normalizeValue(value);
      headers[normalized] = true;
    });
    return this;
  }
  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }
  toJSON(asStrings) {
    const obj = /* @__PURE__ */ Object.create(null);
    utils_default.forEach(this, (value, header) => {
      value != null && value !== false && (obj[header] = asStrings && utils_default.isArray(value) ? value.join(", ") : value);
    });
    return obj;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join("\n");
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }
  static concat(first, ...targets) {
    const computed = new this(first);
    targets.forEach((target) => computed.set(target));
    return computed;
  }
  static accessor(header) {
    const internals = this[$internals] = this[$internals] = {
      accessors: {}
    };
    const accessors = internals.accessors;
    const prototype3 = this.prototype;
    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);
      if (!accessors[lHeader]) {
        buildAccessors(prototype3, _header);
        accessors[lHeader] = true;
      }
    }
    utils_default.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
    return this;
  }
};
AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
utils_default.reduceDescriptors(AxiosHeaders.prototype, ({ value }, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1);
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  };
});
utils_default.freezeMethods(AxiosHeaders);
var AxiosHeaders_default = AxiosHeaders;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/transformData.js
function transformData(fns, response) {
  const config2 = this || defaults_default;
  const context = response || config2;
  const headers = AxiosHeaders_default.from(context.headers);
  let data = context.data;
  utils_default.forEach(fns, function transform(fn) {
    data = fn.call(config2, data, headers.normalize(), response ? response.status : void 0);
  });
  headers.normalize();
  return data;
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/cancel/isCancel.js
init_cjs_shims();
function isCancel(value) {
  return !!(value && value.__CANCEL__);
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/cancel/CanceledError.js
init_cjs_shims();
function CanceledError(message, config2, request2) {
  AxiosError_default.call(this, message == null ? "canceled" : message, AxiosError_default.ERR_CANCELED, config2, request2);
  this.name = "CanceledError";
}
utils_default.inherits(CanceledError, AxiosError_default, {
  __CANCEL__: true
});
var CanceledError_default = CanceledError;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/adapters.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/http.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/settle.js
init_cjs_shims();
function settle(resolve, reject, response) {
  const validateStatus2 = response.config.validateStatus;
  if (!response.status || !validateStatus2 || validateStatus2(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError_default(
      "Request failed with status code " + response.status,
      [AxiosError_default.ERR_BAD_REQUEST, AxiosError_default.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/buildFullPath.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/isAbsoluteURL.js
init_cjs_shims();
function isAbsoluteURL(url2) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url2);
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/combineURLs.js
init_cjs_shims();
function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/buildFullPath.js
function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {
  let isRelativeUrl = !isAbsoluteURL(requestedURL);
  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/http.js
var import_proxy_from_env = __toESM(require_proxy_from_env(), 1);
var import_http = __toESM(require("http"), 1);
var import_https = __toESM(require("https"), 1);
var import_util2 = __toESM(require("util"), 1);
var import_follow_redirects = __toESM(require_follow_redirects(), 1);
var import_zlib = __toESM(require("zlib"), 1);

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/env/data.js
init_cjs_shims();
var VERSION = "1.8.4";

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/fromDataURI.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/parseProtocol.js
init_cjs_shims();
function parseProtocol(url2) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url2);
  return match && match[1] || "";
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/fromDataURI.js
var DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/;
function fromDataURI(uri, asBlob, options) {
  const _Blob = options && options.Blob || platform_default.classes.Blob;
  const protocol = parseProtocol(uri);
  if (asBlob === void 0 && _Blob) {
    asBlob = true;
  }
  if (protocol === "data") {
    uri = protocol.length ? uri.slice(protocol.length + 1) : uri;
    const match = DATA_URL_PATTERN.exec(uri);
    if (!match) {
      throw new AxiosError_default("Invalid URL", AxiosError_default.ERR_INVALID_URL);
    }
    const mime = match[1];
    const isBase64 = match[2];
    const body = match[3];
    const buffer = Buffer.from(decodeURIComponent(body), isBase64 ? "base64" : "utf8");
    if (asBlob) {
      if (!_Blob) {
        throw new AxiosError_default("Blob is not supported", AxiosError_default.ERR_NOT_SUPPORT);
      }
      return new _Blob([buffer], { type: mime });
    }
    return buffer;
  }
  throw new AxiosError_default("Unsupported protocol " + protocol, AxiosError_default.ERR_NOT_SUPPORT);
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/http.js
var import_stream4 = __toESM(require("stream"), 1);

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/AxiosTransformStream.js
init_cjs_shims();
var import_stream = __toESM(require("stream"), 1);
var kInternals = Symbol("internals");
var AxiosTransformStream = class extends import_stream.default.Transform {
  constructor(options) {
    options = utils_default.toFlatObject(options, {
      maxRate: 0,
      chunkSize: 64 * 1024,
      minChunkSize: 100,
      timeWindow: 500,
      ticksRate: 2,
      samplesCount: 15
    }, null, (prop, source) => {
      return !utils_default.isUndefined(source[prop]);
    });
    super({
      readableHighWaterMark: options.chunkSize
    });
    const internals = this[kInternals] = {
      timeWindow: options.timeWindow,
      chunkSize: options.chunkSize,
      maxRate: options.maxRate,
      minChunkSize: options.minChunkSize,
      bytesSeen: 0,
      isCaptured: false,
      notifiedBytesLoaded: 0,
      ts: Date.now(),
      bytes: 0,
      onReadCallback: null
    };
    this.on("newListener", (event) => {
      if (event === "progress") {
        if (!internals.isCaptured) {
          internals.isCaptured = true;
        }
      }
    });
  }
  _read(size) {
    const internals = this[kInternals];
    if (internals.onReadCallback) {
      internals.onReadCallback();
    }
    return super._read(size);
  }
  _transform(chunk, encoding, callback) {
    const internals = this[kInternals];
    const maxRate = internals.maxRate;
    const readableHighWaterMark = this.readableHighWaterMark;
    const timeWindow = internals.timeWindow;
    const divider = 1e3 / timeWindow;
    const bytesThreshold = maxRate / divider;
    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;
    const pushChunk = (_chunk, _callback) => {
      const bytes = Buffer.byteLength(_chunk);
      internals.bytesSeen += bytes;
      internals.bytes += bytes;
      internals.isCaptured && this.emit("progress", internals.bytesSeen);
      if (this.push(_chunk)) {
        process.nextTick(_callback);
      } else {
        internals.onReadCallback = () => {
          internals.onReadCallback = null;
          process.nextTick(_callback);
        };
      }
    };
    const transformChunk = (_chunk, _callback) => {
      const chunkSize = Buffer.byteLength(_chunk);
      let chunkRemainder = null;
      let maxChunkSize = readableHighWaterMark;
      let bytesLeft;
      let passed = 0;
      if (maxRate) {
        const now = Date.now();
        if (!internals.ts || (passed = now - internals.ts) >= timeWindow) {
          internals.ts = now;
          bytesLeft = bytesThreshold - internals.bytes;
          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;
          passed = 0;
        }
        bytesLeft = bytesThreshold - internals.bytes;
      }
      if (maxRate) {
        if (bytesLeft <= 0) {
          return setTimeout(() => {
            _callback(null, _chunk);
          }, timeWindow - passed);
        }
        if (bytesLeft < maxChunkSize) {
          maxChunkSize = bytesLeft;
        }
      }
      if (maxChunkSize && chunkSize > maxChunkSize && chunkSize - maxChunkSize > minChunkSize) {
        chunkRemainder = _chunk.subarray(maxChunkSize);
        _chunk = _chunk.subarray(0, maxChunkSize);
      }
      pushChunk(_chunk, chunkRemainder ? () => {
        process.nextTick(_callback, null, chunkRemainder);
      } : _callback);
    };
    transformChunk(chunk, function transformNextChunk(err, _chunk) {
      if (err) {
        return callback(err);
      }
      if (_chunk) {
        transformChunk(_chunk, transformNextChunk);
      } else {
        callback(null);
      }
    });
  }
};
var AxiosTransformStream_default = AxiosTransformStream;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/http.js
var import_events = require("events");

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/formDataToStream.js
init_cjs_shims();
var import_util = __toESM(require("util"), 1);
var import_stream2 = require("stream");

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/readBlob.js
init_cjs_shims();
var { asyncIterator } = Symbol;
var readBlob = async function* (blob) {
  if (blob.stream) {
    yield* blob.stream();
  } else if (blob.arrayBuffer) {
    yield await blob.arrayBuffer();
  } else if (blob[asyncIterator]) {
    yield* blob[asyncIterator]();
  } else {
    yield blob;
  }
};
var readBlob_default = readBlob;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/formDataToStream.js
var BOUNDARY_ALPHABET = platform_default.ALPHABET.ALPHA_DIGIT + "-_";
var textEncoder = typeof TextEncoder === "function" ? new TextEncoder() : new import_util.default.TextEncoder();
var CRLF = "\r\n";
var CRLF_BYTES = textEncoder.encode(CRLF);
var CRLF_BYTES_COUNT = 2;
var FormDataPart = class {
  constructor(name, value) {
    const { escapeName } = this.constructor;
    const isStringValue = utils_default.isString(value);
    let headers = `Content-Disposition: form-data; name="${escapeName(name)}"${!isStringValue && value.name ? `; filename="${escapeName(value.name)}"` : ""}${CRLF}`;
    if (isStringValue) {
      value = textEncoder.encode(String(value).replace(/\r?\n|\r\n?/g, CRLF));
    } else {
      headers += `Content-Type: ${value.type || "application/octet-stream"}${CRLF}`;
    }
    this.headers = textEncoder.encode(headers + CRLF);
    this.contentLength = isStringValue ? value.byteLength : value.size;
    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;
    this.name = name;
    this.value = value;
  }
  async *encode() {
    yield this.headers;
    const { value } = this;
    if (utils_default.isTypedArray(value)) {
      yield value;
    } else {
      yield* readBlob_default(value);
    }
    yield CRLF_BYTES;
  }
  static escapeName(name) {
    return String(name).replace(/[\r\n"]/g, (match) => ({
      "\r": "%0D",
      "\n": "%0A",
      '"': "%22"
    })[match]);
  }
};
var formDataToStream = (form, headersHandler, options) => {
  const {
    tag = "form-data-boundary",
    size = 25,
    boundary = tag + "-" + platform_default.generateString(size, BOUNDARY_ALPHABET)
  } = options || {};
  if (!utils_default.isFormData(form)) {
    throw TypeError("FormData instance required");
  }
  if (boundary.length < 1 || boundary.length > 70) {
    throw Error("boundary must be 10-70 characters long");
  }
  const boundaryBytes = textEncoder.encode("--" + boundary + CRLF);
  const footerBytes = textEncoder.encode("--" + boundary + "--" + CRLF + CRLF);
  let contentLength = footerBytes.byteLength;
  const parts = Array.from(form.entries()).map(([name, value]) => {
    const part = new FormDataPart(name, value);
    contentLength += part.size;
    return part;
  });
  contentLength += boundaryBytes.byteLength * parts.length;
  contentLength = utils_default.toFiniteNumber(contentLength);
  const computedHeaders = {
    "Content-Type": `multipart/form-data; boundary=${boundary}`
  };
  if (Number.isFinite(contentLength)) {
    computedHeaders["Content-Length"] = contentLength;
  }
  headersHandler && headersHandler(computedHeaders);
  return import_stream2.Readable.from(async function* () {
    for (const part of parts) {
      yield boundaryBytes;
      yield* part.encode();
    }
    yield footerBytes;
  }());
};
var formDataToStream_default = formDataToStream;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js
init_cjs_shims();
var import_stream3 = __toESM(require("stream"), 1);
var ZlibHeaderTransformStream = class extends import_stream3.default.Transform {
  __transform(chunk, encoding, callback) {
    this.push(chunk);
    callback();
  }
  _transform(chunk, encoding, callback) {
    if (chunk.length !== 0) {
      this._transform = this.__transform;
      if (chunk[0] !== 120) {
        const header = Buffer.alloc(2);
        header[0] = 120;
        header[1] = 156;
        this.push(header, encoding);
      }
    }
    this.__transform(chunk, encoding, callback);
  }
};
var ZlibHeaderTransformStream_default = ZlibHeaderTransformStream;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/callbackify.js
init_cjs_shims();
var callbackify = (fn, reducer) => {
  return utils_default.isAsyncFn(fn) ? function(...args) {
    const cb = args.pop();
    fn.apply(this, args).then((value) => {
      try {
        reducer ? cb(null, ...reducer(value)) : cb(null, value);
      } catch (err) {
        cb(err);
      }
    }, cb);
  } : fn;
};
var callbackify_default = callbackify;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/progressEventReducer.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/speedometer.js
init_cjs_shims();
function speedometer(samplesCount, min) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head = 0;
  let tail = 0;
  let firstSampleTS;
  min = min !== void 0 ? min : 1e3;
  return function push(chunkLength) {
    const now = Date.now();
    const startedAt = timestamps[tail];
    if (!firstSampleTS) {
      firstSampleTS = now;
    }
    bytes[head] = chunkLength;
    timestamps[head] = now;
    let i = tail;
    let bytesCount = 0;
    while (i !== head) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }
    head = (head + 1) % samplesCount;
    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }
    if (now - firstSampleTS < min) {
      return;
    }
    const passed = startedAt && now - startedAt;
    return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
  };
}
var speedometer_default = speedometer;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/throttle.js
init_cjs_shims();
function throttle(fn, freq) {
  let timestamp = 0;
  let threshold = 1e3 / freq;
  let lastArgs;
  let timer;
  const invoke = (args, now = Date.now()) => {
    timestamp = now;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn.apply(null, args);
  };
  const throttled = (...args) => {
    const now = Date.now();
    const passed = now - timestamp;
    if (passed >= threshold) {
      invoke(args, now);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(() => {
          timer = null;
          invoke(lastArgs);
        }, threshold - passed);
      }
    }
  };
  const flush = () => lastArgs && invoke(lastArgs);
  return [throttled, flush];
}
var throttle_default = throttle;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/progressEventReducer.js
var progressEventReducer = (listener, isDownloadStream, freq = 3) => {
  let bytesNotified = 0;
  const _speedometer = speedometer_default(50, 250);
  return throttle_default((e) => {
    const loaded = e.loaded;
    const total = e.lengthComputable ? e.total : void 0;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange = loaded <= total;
    bytesNotified = loaded;
    const data = {
      loaded,
      total,
      progress: total ? loaded / total : void 0,
      bytes: progressBytes,
      rate: rate ? rate : void 0,
      estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
      event: e,
      lengthComputable: total != null,
      [isDownloadStream ? "download" : "upload"]: true
    };
    listener(data);
  }, freq);
};
var progressEventDecorator = (total, throttled) => {
  const lengthComputable = total != null;
  return [(loaded) => throttled[0]({
    lengthComputable,
    total,
    loaded
  }), throttled[1]];
};
var asyncDecorator = (fn) => (...args) => utils_default.asap(() => fn(...args));

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/http.js
var zlibOptions = {
  flush: import_zlib.default.constants.Z_SYNC_FLUSH,
  finishFlush: import_zlib.default.constants.Z_SYNC_FLUSH
};
var brotliOptions = {
  flush: import_zlib.default.constants.BROTLI_OPERATION_FLUSH,
  finishFlush: import_zlib.default.constants.BROTLI_OPERATION_FLUSH
};
var isBrotliSupported = utils_default.isFunction(import_zlib.default.createBrotliDecompress);
var { http: httpFollow, https: httpsFollow } = import_follow_redirects.default;
var isHttps = /https:?/;
var supportedProtocols = platform_default.protocols.map((protocol) => {
  return protocol + ":";
});
var flushOnFinish = (stream4, [throttled, flush]) => {
  stream4.on("end", flush).on("error", flush);
  return throttled;
};
function dispatchBeforeRedirect(options, responseDetails) {
  if (options.beforeRedirects.proxy) {
    options.beforeRedirects.proxy(options);
  }
  if (options.beforeRedirects.config) {
    options.beforeRedirects.config(options, responseDetails);
  }
}
function setProxy(options, configProxy, location) {
  let proxy = configProxy;
  if (!proxy && proxy !== false) {
    const proxyUrl = import_proxy_from_env.default.getProxyForUrl(location);
    if (proxyUrl) {
      proxy = new URL(proxyUrl);
    }
  }
  if (proxy) {
    if (proxy.username) {
      proxy.auth = (proxy.username || "") + ":" + (proxy.password || "");
    }
    if (proxy.auth) {
      if (proxy.auth.username || proxy.auth.password) {
        proxy.auth = (proxy.auth.username || "") + ":" + (proxy.auth.password || "");
      }
      const base64 = Buffer.from(proxy.auth, "utf8").toString("base64");
      options.headers["Proxy-Authorization"] = "Basic " + base64;
    }
    options.headers.host = options.hostname + (options.port ? ":" + options.port : "");
    const proxyHost = proxy.hostname || proxy.host;
    options.hostname = proxyHost;
    options.host = proxyHost;
    options.port = proxy.port;
    options.path = location;
    if (proxy.protocol) {
      options.protocol = proxy.protocol.includes(":") ? proxy.protocol : `${proxy.protocol}:`;
    }
  }
  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {
    setProxy(redirectOptions, configProxy, redirectOptions.href);
  };
}
var isHttpAdapterSupported = typeof process !== "undefined" && utils_default.kindOf(process) === "process";
var wrapAsync = (asyncExecutor) => {
  return new Promise((resolve, reject) => {
    let onDone;
    let isDone;
    const done = (value, isRejected) => {
      if (isDone) return;
      isDone = true;
      onDone && onDone(value, isRejected);
    };
    const _resolve = (value) => {
      done(value);
      resolve(value);
    };
    const _reject = (reason) => {
      done(reason, true);
      reject(reason);
    };
    asyncExecutor(_resolve, _reject, (onDoneHandler) => onDone = onDoneHandler).catch(_reject);
  });
};
var resolveFamily = ({ address, family }) => {
  if (!utils_default.isString(address)) {
    throw TypeError("address must be a string");
  }
  return {
    address,
    family: family || (address.indexOf(".") < 0 ? 6 : 4)
  };
};
var buildAddressEntry = (address, family) => resolveFamily(utils_default.isObject(address) ? address : { address, family });
var http_default = isHttpAdapterSupported && function httpAdapter(config2) {
  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {
    let { data, lookup, family } = config2;
    const { responseType, responseEncoding } = config2;
    const method = config2.method.toUpperCase();
    let isDone;
    let rejected = false;
    let req;
    if (lookup) {
      const _lookup = callbackify_default(lookup, (value) => utils_default.isArray(value) ? value : [value]);
      lookup = (hostname, opt, cb) => {
        _lookup(hostname, opt, (err, arg0, arg1) => {
          if (err) {
            return cb(err);
          }
          const addresses = utils_default.isArray(arg0) ? arg0.map((addr) => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];
          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);
        });
      };
    }
    const emitter = new import_events.EventEmitter();
    const onFinished = () => {
      if (config2.cancelToken) {
        config2.cancelToken.unsubscribe(abort);
      }
      if (config2.signal) {
        config2.signal.removeEventListener("abort", abort);
      }
      emitter.removeAllListeners();
    };
    onDone((value, isRejected) => {
      isDone = true;
      if (isRejected) {
        rejected = true;
        onFinished();
      }
    });
    function abort(reason) {
      emitter.emit("abort", !reason || reason.type ? new CanceledError_default(null, config2, req) : reason);
    }
    emitter.once("abort", reject);
    if (config2.cancelToken || config2.signal) {
      config2.cancelToken && config2.cancelToken.subscribe(abort);
      if (config2.signal) {
        config2.signal.aborted ? abort() : config2.signal.addEventListener("abort", abort);
      }
    }
    const fullPath = buildFullPath(config2.baseURL, config2.url, config2.allowAbsoluteUrls);
    const parsed = new URL(fullPath, platform_default.hasBrowserEnv ? platform_default.origin : void 0);
    const protocol = parsed.protocol || supportedProtocols[0];
    if (protocol === "data:") {
      let convertedData;
      if (method !== "GET") {
        return settle(resolve, reject, {
          status: 405,
          statusText: "method not allowed",
          headers: {},
          config: config2
        });
      }
      try {
        convertedData = fromDataURI(config2.url, responseType === "blob", {
          Blob: config2.env && config2.env.Blob
        });
      } catch (err) {
        throw AxiosError_default.from(err, AxiosError_default.ERR_BAD_REQUEST, config2);
      }
      if (responseType === "text") {
        convertedData = convertedData.toString(responseEncoding);
        if (!responseEncoding || responseEncoding === "utf8") {
          convertedData = utils_default.stripBOM(convertedData);
        }
      } else if (responseType === "stream") {
        convertedData = import_stream4.default.Readable.from(convertedData);
      }
      return settle(resolve, reject, {
        data: convertedData,
        status: 200,
        statusText: "OK",
        headers: new AxiosHeaders_default(),
        config: config2
      });
    }
    if (supportedProtocols.indexOf(protocol) === -1) {
      return reject(new AxiosError_default(
        "Unsupported protocol " + protocol,
        AxiosError_default.ERR_BAD_REQUEST,
        config2
      ));
    }
    const headers = AxiosHeaders_default.from(config2.headers).normalize();
    headers.set("User-Agent", "axios/" + VERSION, false);
    const { onUploadProgress, onDownloadProgress } = config2;
    const maxRate = config2.maxRate;
    let maxUploadRate = void 0;
    let maxDownloadRate = void 0;
    if (utils_default.isSpecCompliantForm(data)) {
      const userBoundary = headers.getContentType(/boundary=([-_\w\d]{10,70})/i);
      data = formDataToStream_default(data, (formHeaders) => {
        headers.set(formHeaders);
      }, {
        tag: `axios-${VERSION}-boundary`,
        boundary: userBoundary && userBoundary[1] || void 0
      });
    } else if (utils_default.isFormData(data) && utils_default.isFunction(data.getHeaders)) {
      headers.set(data.getHeaders());
      if (!headers.hasContentLength()) {
        try {
          const knownLength = await import_util2.default.promisify(data.getLength).call(data);
          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);
        } catch (e) {
        }
      }
    } else if (utils_default.isBlob(data) || utils_default.isFile(data)) {
      data.size && headers.setContentType(data.type || "application/octet-stream");
      headers.setContentLength(data.size || 0);
      data = import_stream4.default.Readable.from(readBlob_default(data));
    } else if (data && !utils_default.isStream(data)) {
      if (Buffer.isBuffer(data)) {
      } else if (utils_default.isArrayBuffer(data)) {
        data = Buffer.from(new Uint8Array(data));
      } else if (utils_default.isString(data)) {
        data = Buffer.from(data, "utf-8");
      } else {
        return reject(new AxiosError_default(
          "Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",
          AxiosError_default.ERR_BAD_REQUEST,
          config2
        ));
      }
      headers.setContentLength(data.length, false);
      if (config2.maxBodyLength > -1 && data.length > config2.maxBodyLength) {
        return reject(new AxiosError_default(
          "Request body larger than maxBodyLength limit",
          AxiosError_default.ERR_BAD_REQUEST,
          config2
        ));
      }
    }
    const contentLength = utils_default.toFiniteNumber(headers.getContentLength());
    if (utils_default.isArray(maxRate)) {
      maxUploadRate = maxRate[0];
      maxDownloadRate = maxRate[1];
    } else {
      maxUploadRate = maxDownloadRate = maxRate;
    }
    if (data && (onUploadProgress || maxUploadRate)) {
      if (!utils_default.isStream(data)) {
        data = import_stream4.default.Readable.from(data, { objectMode: false });
      }
      data = import_stream4.default.pipeline([data, new AxiosTransformStream_default({
        maxRate: utils_default.toFiniteNumber(maxUploadRate)
      })], utils_default.noop);
      onUploadProgress && data.on("progress", flushOnFinish(
        data,
        progressEventDecorator(
          contentLength,
          progressEventReducer(asyncDecorator(onUploadProgress), false, 3)
        )
      ));
    }
    let auth = void 0;
    if (config2.auth) {
      const username = config2.auth.username || "";
      const password = config2.auth.password || "";
      auth = username + ":" + password;
    }
    if (!auth && parsed.username) {
      const urlUsername = parsed.username;
      const urlPassword = parsed.password;
      auth = urlUsername + ":" + urlPassword;
    }
    auth && headers.delete("authorization");
    let path2;
    try {
      path2 = buildURL(
        parsed.pathname + parsed.search,
        config2.params,
        config2.paramsSerializer
      ).replace(/^\?/, "");
    } catch (err) {
      const customErr = new Error(err.message);
      customErr.config = config2;
      customErr.url = config2.url;
      customErr.exists = true;
      return reject(customErr);
    }
    headers.set(
      "Accept-Encoding",
      "gzip, compress, deflate" + (isBrotliSupported ? ", br" : ""),
      false
    );
    const options = {
      path: path2,
      method,
      headers: headers.toJSON(),
      agents: { http: config2.httpAgent, https: config2.httpsAgent },
      auth,
      protocol,
      family,
      beforeRedirect: dispatchBeforeRedirect,
      beforeRedirects: {}
    };
    !utils_default.isUndefined(lookup) && (options.lookup = lookup);
    if (config2.socketPath) {
      options.socketPath = config2.socketPath;
    } else {
      options.hostname = parsed.hostname.startsWith("[") ? parsed.hostname.slice(1, -1) : parsed.hostname;
      options.port = parsed.port;
      setProxy(options, config2.proxy, protocol + "//" + parsed.hostname + (parsed.port ? ":" + parsed.port : "") + options.path);
    }
    let transport;
    const isHttpsRequest = isHttps.test(options.protocol);
    options.agent = isHttpsRequest ? config2.httpsAgent : config2.httpAgent;
    if (config2.transport) {
      transport = config2.transport;
    } else if (config2.maxRedirects === 0) {
      transport = isHttpsRequest ? import_https.default : import_http.default;
    } else {
      if (config2.maxRedirects) {
        options.maxRedirects = config2.maxRedirects;
      }
      if (config2.beforeRedirect) {
        options.beforeRedirects.config = config2.beforeRedirect;
      }
      transport = isHttpsRequest ? httpsFollow : httpFollow;
    }
    if (config2.maxBodyLength > -1) {
      options.maxBodyLength = config2.maxBodyLength;
    } else {
      options.maxBodyLength = Infinity;
    }
    if (config2.insecureHTTPParser) {
      options.insecureHTTPParser = config2.insecureHTTPParser;
    }
    req = transport.request(options, function handleResponse(res) {
      if (req.destroyed) return;
      const streams = [res];
      const responseLength = +res.headers["content-length"];
      if (onDownloadProgress || maxDownloadRate) {
        const transformStream = new AxiosTransformStream_default({
          maxRate: utils_default.toFiniteNumber(maxDownloadRate)
        });
        onDownloadProgress && transformStream.on("progress", flushOnFinish(
          transformStream,
          progressEventDecorator(
            responseLength,
            progressEventReducer(asyncDecorator(onDownloadProgress), true, 3)
          )
        ));
        streams.push(transformStream);
      }
      let responseStream = res;
      const lastRequest = res.req || req;
      if (config2.decompress !== false && res.headers["content-encoding"]) {
        if (method === "HEAD" || res.statusCode === 204) {
          delete res.headers["content-encoding"];
        }
        switch ((res.headers["content-encoding"] || "").toLowerCase()) {
          /*eslint default-case:0*/
          case "gzip":
          case "x-gzip":
          case "compress":
          case "x-compress":
            streams.push(import_zlib.default.createUnzip(zlibOptions));
            delete res.headers["content-encoding"];
            break;
          case "deflate":
            streams.push(new ZlibHeaderTransformStream_default());
            streams.push(import_zlib.default.createUnzip(zlibOptions));
            delete res.headers["content-encoding"];
            break;
          case "br":
            if (isBrotliSupported) {
              streams.push(import_zlib.default.createBrotliDecompress(brotliOptions));
              delete res.headers["content-encoding"];
            }
        }
      }
      responseStream = streams.length > 1 ? import_stream4.default.pipeline(streams, utils_default.noop) : streams[0];
      const offListeners = import_stream4.default.finished(responseStream, () => {
        offListeners();
        onFinished();
      });
      const response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: new AxiosHeaders_default(res.headers),
        config: config2,
        request: lastRequest
      };
      if (responseType === "stream") {
        response.data = responseStream;
        settle(resolve, reject, response);
      } else {
        const responseBuffer = [];
        let totalResponseBytes = 0;
        responseStream.on("data", function handleStreamData(chunk) {
          responseBuffer.push(chunk);
          totalResponseBytes += chunk.length;
          if (config2.maxContentLength > -1 && totalResponseBytes > config2.maxContentLength) {
            rejected = true;
            responseStream.destroy();
            reject(new AxiosError_default(
              "maxContentLength size of " + config2.maxContentLength + " exceeded",
              AxiosError_default.ERR_BAD_RESPONSE,
              config2,
              lastRequest
            ));
          }
        });
        responseStream.on("aborted", function handlerStreamAborted() {
          if (rejected) {
            return;
          }
          const err = new AxiosError_default(
            "stream has been aborted",
            AxiosError_default.ERR_BAD_RESPONSE,
            config2,
            lastRequest
          );
          responseStream.destroy(err);
          reject(err);
        });
        responseStream.on("error", function handleStreamError(err) {
          if (req.destroyed) return;
          reject(AxiosError_default.from(err, null, config2, lastRequest));
        });
        responseStream.on("end", function handleStreamEnd() {
          try {
            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);
            if (responseType !== "arraybuffer") {
              responseData = responseData.toString(responseEncoding);
              if (!responseEncoding || responseEncoding === "utf8") {
                responseData = utils_default.stripBOM(responseData);
              }
            }
            response.data = responseData;
          } catch (err) {
            return reject(AxiosError_default.from(err, null, config2, response.request, response));
          }
          settle(resolve, reject, response);
        });
      }
      emitter.once("abort", (err) => {
        if (!responseStream.destroyed) {
          responseStream.emit("error", err);
          responseStream.destroy();
        }
      });
    });
    emitter.once("abort", (err) => {
      reject(err);
      req.destroy(err);
    });
    req.on("error", function handleRequestError(err) {
      reject(AxiosError_default.from(err, null, config2, req));
    });
    req.on("socket", function handleRequestSocket(socket) {
      socket.setKeepAlive(true, 1e3 * 60);
    });
    if (config2.timeout) {
      const timeout = parseInt(config2.timeout, 10);
      if (Number.isNaN(timeout)) {
        reject(new AxiosError_default(
          "error trying to parse `config.timeout` to int",
          AxiosError_default.ERR_BAD_OPTION_VALUE,
          config2,
          req
        ));
        return;
      }
      req.setTimeout(timeout, function handleRequestTimeout() {
        if (isDone) return;
        let timeoutErrorMessage = config2.timeout ? "timeout of " + config2.timeout + "ms exceeded" : "timeout exceeded";
        const transitional2 = config2.transitional || transitional_default;
        if (config2.timeoutErrorMessage) {
          timeoutErrorMessage = config2.timeoutErrorMessage;
        }
        reject(new AxiosError_default(
          timeoutErrorMessage,
          transitional2.clarifyTimeoutError ? AxiosError_default.ETIMEDOUT : AxiosError_default.ECONNABORTED,
          config2,
          req
        ));
        abort();
      });
    }
    if (utils_default.isStream(data)) {
      let ended = false;
      let errored = false;
      data.on("end", () => {
        ended = true;
      });
      data.once("error", (err) => {
        errored = true;
        req.destroy(err);
      });
      data.on("close", () => {
        if (!ended && !errored) {
          abort(new CanceledError_default("Request stream has been aborted", config2, req));
        }
      });
      data.pipe(req);
    } else {
      req.end(data);
    }
  });
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/xhr.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/resolveConfig.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/isURLSameOrigin.js
init_cjs_shims();
var isURLSameOrigin_default = platform_default.hasStandardBrowserEnv ? /* @__PURE__ */ ((origin2, isMSIE) => (url2) => {
  url2 = new URL(url2, platform_default.origin);
  return origin2.protocol === url2.protocol && origin2.host === url2.host && (isMSIE || origin2.port === url2.port);
})(
  new URL(platform_default.origin),
  platform_default.navigator && /(msie|trident)/i.test(platform_default.navigator.userAgent)
) : () => true;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/cookies.js
init_cjs_shims();
var cookies_default = platform_default.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(name, value, expires, path2, domain, secure) {
      const cookie = [name + "=" + encodeURIComponent(value)];
      utils_default.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString());
      utils_default.isString(path2) && cookie.push("path=" + path2);
      utils_default.isString(domain) && cookie.push("domain=" + domain);
      secure === true && cookie.push("secure");
      document.cookie = cookie.join("; ");
    },
    read(name) {
      const match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove(name) {
      this.write(name, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/mergeConfig.js
init_cjs_shims();
var headersToObject = (thing) => thing instanceof AxiosHeaders_default ? { ...thing } : thing;
function mergeConfig(config1, config2) {
  config2 = config2 || {};
  const config3 = {};
  function getMergedValue(target, source, prop, caseless) {
    if (utils_default.isPlainObject(target) && utils_default.isPlainObject(source)) {
      return utils_default.merge.call({ caseless }, target, source);
    } else if (utils_default.isPlainObject(source)) {
      return utils_default.merge({}, source);
    } else if (utils_default.isArray(source)) {
      return source.slice();
    }
    return source;
  }
  function mergeDeepProperties(a, b, prop, caseless) {
    if (!utils_default.isUndefined(b)) {
      return getMergedValue(a, b, prop, caseless);
    } else if (!utils_default.isUndefined(a)) {
      return getMergedValue(void 0, a, prop, caseless);
    }
  }
  function valueFromConfig2(a, b) {
    if (!utils_default.isUndefined(b)) {
      return getMergedValue(void 0, b);
    }
  }
  function defaultToConfig2(a, b) {
    if (!utils_default.isUndefined(b)) {
      return getMergedValue(void 0, b);
    } else if (!utils_default.isUndefined(a)) {
      return getMergedValue(void 0, a);
    }
  }
  function mergeDirectKeys(a, b, prop) {
    if (prop in config2) {
      return getMergedValue(a, b);
    } else if (prop in config1) {
      return getMergedValue(void 0, a);
    }
  }
  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a, b, prop) => mergeDeepProperties(headersToObject(a), headersToObject(b), prop, true)
  };
  utils_default.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
    const merge2 = mergeMap[prop] || mergeDeepProperties;
    const configValue = merge2(config1[prop], config2[prop], prop);
    utils_default.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config3[prop] = configValue);
  });
  return config3;
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/resolveConfig.js
var resolveConfig_default = (config2) => {
  const newConfig = mergeConfig({}, config2);
  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
  newConfig.headers = headers = AxiosHeaders_default.from(headers);
  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config2.params, config2.paramsSerializer);
  if (auth) {
    headers.set(
      "Authorization",
      "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : ""))
    );
  }
  let contentType;
  if (utils_default.isFormData(data)) {
    if (platform_default.hasStandardBrowserEnv || platform_default.hasStandardBrowserWebWorkerEnv) {
      headers.setContentType(void 0);
    } else if ((contentType = headers.getContentType()) !== false) {
      const [type, ...tokens] = contentType ? contentType.split(";").map((token) => token.trim()).filter(Boolean) : [];
      headers.setContentType([type || "multipart/form-data", ...tokens].join("; "));
    }
  }
  if (platform_default.hasStandardBrowserEnv) {
    withXSRFToken && utils_default.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
    if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin_default(newConfig.url)) {
      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies_default.read(xsrfCookieName);
      if (xsrfValue) {
        headers.set(xsrfHeaderName, xsrfValue);
      }
    }
  }
  return newConfig;
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/xhr.js
var isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
var xhr_default = isXHRAdapterSupported && function(config2) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    const _config = resolveConfig_default(config2);
    let requestData = _config.data;
    const requestHeaders = AxiosHeaders_default.from(_config.headers).normalize();
    let { responseType, onUploadProgress, onDownloadProgress } = _config;
    let onCanceled;
    let uploadThrottled, downloadThrottled;
    let flushUpload, flushDownload;
    function done() {
      flushUpload && flushUpload();
      flushDownload && flushDownload();
      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
      _config.signal && _config.signal.removeEventListener("abort", onCanceled);
    }
    let request2 = new XMLHttpRequest();
    request2.open(_config.method.toUpperCase(), _config.url, true);
    request2.timeout = _config.timeout;
    function onloadend() {
      if (!request2) {
        return;
      }
      const responseHeaders = AxiosHeaders_default.from(
        "getAllResponseHeaders" in request2 && request2.getAllResponseHeaders()
      );
      const responseData = !responseType || responseType === "text" || responseType === "json" ? request2.responseText : request2.response;
      const response = {
        data: responseData,
        status: request2.status,
        statusText: request2.statusText,
        headers: responseHeaders,
        config: config2,
        request: request2
      };
      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);
      request2 = null;
    }
    if ("onloadend" in request2) {
      request2.onloadend = onloadend;
    } else {
      request2.onreadystatechange = function handleLoad() {
        if (!request2 || request2.readyState !== 4) {
          return;
        }
        if (request2.status === 0 && !(request2.responseURL && request2.responseURL.indexOf("file:") === 0)) {
          return;
        }
        setTimeout(onloadend);
      };
    }
    request2.onabort = function handleAbort() {
      if (!request2) {
        return;
      }
      reject(new AxiosError_default("Request aborted", AxiosError_default.ECONNABORTED, config2, request2));
      request2 = null;
    };
    request2.onerror = function handleError() {
      reject(new AxiosError_default("Network Error", AxiosError_default.ERR_NETWORK, config2, request2));
      request2 = null;
    };
    request2.ontimeout = function handleTimeout() {
      let timeoutErrorMessage = _config.timeout ? "timeout of " + _config.timeout + "ms exceeded" : "timeout exceeded";
      const transitional2 = _config.transitional || transitional_default;
      if (_config.timeoutErrorMessage) {
        timeoutErrorMessage = _config.timeoutErrorMessage;
      }
      reject(new AxiosError_default(
        timeoutErrorMessage,
        transitional2.clarifyTimeoutError ? AxiosError_default.ETIMEDOUT : AxiosError_default.ECONNABORTED,
        config2,
        request2
      ));
      request2 = null;
    };
    requestData === void 0 && requestHeaders.setContentType(null);
    if ("setRequestHeader" in request2) {
      utils_default.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request2.setRequestHeader(key, val);
      });
    }
    if (!utils_default.isUndefined(_config.withCredentials)) {
      request2.withCredentials = !!_config.withCredentials;
    }
    if (responseType && responseType !== "json") {
      request2.responseType = _config.responseType;
    }
    if (onDownloadProgress) {
      [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);
      request2.addEventListener("progress", downloadThrottled);
    }
    if (onUploadProgress && request2.upload) {
      [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
      request2.upload.addEventListener("progress", uploadThrottled);
      request2.upload.addEventListener("loadend", flushUpload);
    }
    if (_config.cancelToken || _config.signal) {
      onCanceled = (cancel) => {
        if (!request2) {
          return;
        }
        reject(!cancel || cancel.type ? new CanceledError_default(null, config2, request2) : cancel);
        request2.abort();
        request2 = null;
      };
      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
      if (_config.signal) {
        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener("abort", onCanceled);
      }
    }
    const protocol = parseProtocol(_config.url);
    if (protocol && platform_default.protocols.indexOf(protocol) === -1) {
      reject(new AxiosError_default("Unsupported protocol " + protocol + ":", AxiosError_default.ERR_BAD_REQUEST, config2));
      return;
    }
    request2.send(requestData || null);
  });
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/fetch.js
init_cjs_shims();

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/composeSignals.js
init_cjs_shims();
var composeSignals = (signals, timeout) => {
  const { length } = signals = signals ? signals.filter(Boolean) : [];
  if (timeout || length) {
    let controller = new AbortController();
    let aborted;
    const onabort = function(reason) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        const err = reason instanceof Error ? reason : this.reason;
        controller.abort(err instanceof AxiosError_default ? err : new CanceledError_default(err instanceof Error ? err.message : err));
      }
    };
    let timer = timeout && setTimeout(() => {
      timer = null;
      onabort(new AxiosError_default(`timeout ${timeout} of ms exceeded`, AxiosError_default.ETIMEDOUT));
    }, timeout);
    const unsubscribe = () => {
      if (signals) {
        timer && clearTimeout(timer);
        timer = null;
        signals.forEach((signal2) => {
          signal2.unsubscribe ? signal2.unsubscribe(onabort) : signal2.removeEventListener("abort", onabort);
        });
        signals = null;
      }
    };
    signals.forEach((signal2) => signal2.addEventListener("abort", onabort));
    const { signal } = controller;
    signal.unsubscribe = () => utils_default.asap(unsubscribe);
    return signal;
  }
};
var composeSignals_default = composeSignals;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/trackStream.js
init_cjs_shims();
var streamChunk = function* (chunk, chunkSize) {
  let len = chunk.byteLength;
  if (!chunkSize || len < chunkSize) {
    yield chunk;
    return;
  }
  let pos = 0;
  let end;
  while (pos < len) {
    end = pos + chunkSize;
    yield chunk.slice(pos, end);
    pos = end;
  }
};
var readBytes = async function* (iterable, chunkSize) {
  for await (const chunk of readStream(iterable)) {
    yield* streamChunk(chunk, chunkSize);
  }
};
var readStream = async function* (stream4) {
  if (stream4[Symbol.asyncIterator]) {
    yield* stream4;
    return;
  }
  const reader = stream4.getReader();
  try {
    for (; ; ) {
      const { done, value } = await reader.read();
      if (done) {
        break;
      }
      yield value;
    }
  } finally {
    await reader.cancel();
  }
};
var trackStream = (stream4, chunkSize, onProgress, onFinish) => {
  const iterator = readBytes(stream4, chunkSize);
  let bytes = 0;
  let done;
  let _onFinish = (e) => {
    if (!done) {
      done = true;
      onFinish && onFinish(e);
    }
  };
  return new ReadableStream({
    async pull(controller) {
      try {
        const { done: done2, value } = await iterator.next();
        if (done2) {
          _onFinish();
          controller.close();
          return;
        }
        let len = value.byteLength;
        if (onProgress) {
          let loadedBytes = bytes += len;
          onProgress(loadedBytes);
        }
        controller.enqueue(new Uint8Array(value));
      } catch (err) {
        _onFinish(err);
        throw err;
      }
    },
    cancel(reason) {
      _onFinish(reason);
      return iterator.return();
    }
  }, {
    highWaterMark: 2
  });
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/fetch.js
var isFetchSupported = typeof fetch === "function" && typeof Request === "function" && typeof Response === "function";
var isReadableStreamSupported = isFetchSupported && typeof ReadableStream === "function";
var encodeText = isFetchSupported && (typeof TextEncoder === "function" ? /* @__PURE__ */ ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) : async (str) => new Uint8Array(await new Response(str).arrayBuffer()));
var test = (fn, ...args) => {
  try {
    return !!fn(...args);
  } catch (e) {
    return false;
  }
};
var supportsRequestStream = isReadableStreamSupported && test(() => {
  let duplexAccessed = false;
  const hasContentType = new Request(platform_default.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      duplexAccessed = true;
      return "half";
    }
  }).headers.has("Content-Type");
  return duplexAccessed && !hasContentType;
});
var DEFAULT_CHUNK_SIZE = 64 * 1024;
var supportsResponseStream = isReadableStreamSupported && test(() => utils_default.isReadableStream(new Response("").body));
var resolvers = {
  stream: supportsResponseStream && ((res) => res.body)
};
isFetchSupported && ((res) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((type) => {
    !resolvers[type] && (resolvers[type] = utils_default.isFunction(res[type]) ? (res2) => res2[type]() : (_, config2) => {
      throw new AxiosError_default(`Response type '${type}' is not supported`, AxiosError_default.ERR_NOT_SUPPORT, config2);
    });
  });
})(new Response());
var getBodyLength = async (body) => {
  if (body == null) {
    return 0;
  }
  if (utils_default.isBlob(body)) {
    return body.size;
  }
  if (utils_default.isSpecCompliantForm(body)) {
    const _request = new Request(platform_default.origin, {
      method: "POST",
      body
    });
    return (await _request.arrayBuffer()).byteLength;
  }
  if (utils_default.isArrayBufferView(body) || utils_default.isArrayBuffer(body)) {
    return body.byteLength;
  }
  if (utils_default.isURLSearchParams(body)) {
    body = body + "";
  }
  if (utils_default.isString(body)) {
    return (await encodeText(body)).byteLength;
  }
};
var resolveBodyLength = async (headers, body) => {
  const length = utils_default.toFiniteNumber(headers.getContentLength());
  return length == null ? getBodyLength(body) : length;
};
var fetch_default = isFetchSupported && (async (config2) => {
  let {
    url: url2,
    method,
    data,
    signal,
    cancelToken,
    timeout,
    onDownloadProgress,
    onUploadProgress,
    responseType,
    headers,
    withCredentials = "same-origin",
    fetchOptions
  } = resolveConfig_default(config2);
  responseType = responseType ? (responseType + "").toLowerCase() : "text";
  let composedSignal = composeSignals_default([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
  let request2;
  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
    composedSignal.unsubscribe();
  });
  let requestContentLength;
  try {
    if (onUploadProgress && supportsRequestStream && method !== "get" && method !== "head" && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
      let _request = new Request(url2, {
        method: "POST",
        body: data,
        duplex: "half"
      });
      let contentTypeHeader;
      if (utils_default.isFormData(data) && (contentTypeHeader = _request.headers.get("content-type"))) {
        headers.setContentType(contentTypeHeader);
      }
      if (_request.body) {
        const [onProgress, flush] = progressEventDecorator(
          requestContentLength,
          progressEventReducer(asyncDecorator(onUploadProgress))
        );
        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
      }
    }
    if (!utils_default.isString(withCredentials)) {
      withCredentials = withCredentials ? "include" : "omit";
    }
    const isCredentialsSupported = "credentials" in Request.prototype;
    request2 = new Request(url2, {
      ...fetchOptions,
      signal: composedSignal,
      method: method.toUpperCase(),
      headers: headers.normalize().toJSON(),
      body: data,
      duplex: "half",
      credentials: isCredentialsSupported ? withCredentials : void 0
    });
    let response = await fetch(request2);
    const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
    if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
      const options = {};
      ["status", "statusText", "headers"].forEach((prop) => {
        options[prop] = response[prop];
      });
      const responseContentLength = utils_default.toFiniteNumber(response.headers.get("content-length"));
      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(
        responseContentLength,
        progressEventReducer(asyncDecorator(onDownloadProgress), true)
      ) || [];
      response = new Response(
        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
          flush && flush();
          unsubscribe && unsubscribe();
        }),
        options
      );
    }
    responseType = responseType || "text";
    let responseData = await resolvers[utils_default.findKey(resolvers, responseType) || "text"](response, config2);
    !isStreamResponse && unsubscribe && unsubscribe();
    return await new Promise((resolve, reject) => {
      settle(resolve, reject, {
        data: responseData,
        headers: AxiosHeaders_default.from(response.headers),
        status: response.status,
        statusText: response.statusText,
        config: config2,
        request: request2
      });
    });
  } catch (err) {
    unsubscribe && unsubscribe();
    if (err && err.name === "TypeError" && /fetch/i.test(err.message)) {
      throw Object.assign(
        new AxiosError_default("Network Error", AxiosError_default.ERR_NETWORK, config2, request2),
        {
          cause: err.cause || err
        }
      );
    }
    throw AxiosError_default.from(err, err && err.code, config2, request2);
  }
});

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/adapters/adapters.js
var knownAdapters = {
  http: http_default,
  xhr: xhr_default,
  fetch: fetch_default
};
utils_default.forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, "name", { value });
    } catch (e) {
    }
    Object.defineProperty(fn, "adapterName", { value });
  }
});
var renderReason = (reason) => `- ${reason}`;
var isResolvedHandle = (adapter) => utils_default.isFunction(adapter) || adapter === null || adapter === false;
var adapters_default = {
  getAdapter: (adapters) => {
    adapters = utils_default.isArray(adapters) ? adapters : [adapters];
    const { length } = adapters;
    let nameOrAdapter;
    let adapter;
    const rejectedReasons = {};
    for (let i = 0; i < length; i++) {
      nameOrAdapter = adapters[i];
      let id;
      adapter = nameOrAdapter;
      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
        if (adapter === void 0) {
          throw new AxiosError_default(`Unknown adapter '${id}'`);
        }
      }
      if (adapter) {
        break;
      }
      rejectedReasons[id || "#" + i] = adapter;
    }
    if (!adapter) {
      const reasons = Object.entries(rejectedReasons).map(
        ([id, state]) => `adapter ${id} ` + (state === false ? "is not supported by the environment" : "is not available in the build")
      );
      let s = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
      throw new AxiosError_default(
        `There is no suitable adapter to dispatch the request ` + s,
        "ERR_NOT_SUPPORT"
      );
    }
    return adapter;
  },
  adapters: knownAdapters
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/dispatchRequest.js
function throwIfCancellationRequested(config2) {
  if (config2.cancelToken) {
    config2.cancelToken.throwIfRequested();
  }
  if (config2.signal && config2.signal.aborted) {
    throw new CanceledError_default(null, config2);
  }
}
function dispatchRequest(config2) {
  throwIfCancellationRequested(config2);
  config2.headers = AxiosHeaders_default.from(config2.headers);
  config2.data = transformData.call(
    config2,
    config2.transformRequest
  );
  if (["post", "put", "patch"].indexOf(config2.method) !== -1) {
    config2.headers.setContentType("application/x-www-form-urlencoded", false);
  }
  const adapter = adapters_default.getAdapter(config2.adapter || defaults_default.adapter);
  return adapter(config2).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config2);
    response.data = transformData.call(
      config2,
      config2.transformResponse,
      response
    );
    response.headers = AxiosHeaders_default.from(response.headers);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config2);
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config2,
          config2.transformResponse,
          reason.response
        );
        reason.response.headers = AxiosHeaders_default.from(reason.response.headers);
      }
    }
    return Promise.reject(reason);
  });
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/validator.js
init_cjs_shims();
var validators = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i) => {
  validators[type] = function validator(thing) {
    return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
  };
});
var deprecatedWarnings = {};
validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
  }
  return (value, opt, opts) => {
    if (validator === false) {
      throw new AxiosError_default(
        formatMessage(opt, " has been removed" + (version ? " in " + version : "")),
        AxiosError_default.ERR_DEPRECATED
      );
    }
    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      console.warn(
        formatMessage(
          opt,
          " has been deprecated since v" + version + " and will be removed in the near future"
        )
      );
    }
    return validator ? validator(value, opt, opts) : true;
  };
};
validators.spelling = function spelling(correctSpelling) {
  return (value, opt) => {
    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
    return true;
  };
};
function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== "object") {
    throw new AxiosError_default("options must be an object", AxiosError_default.ERR_BAD_OPTION_VALUE);
  }
  const keys = Object.keys(options);
  let i = keys.length;
  while (i-- > 0) {
    const opt = keys[i];
    const validator = schema[opt];
    if (validator) {
      const value = options[opt];
      const result = value === void 0 || validator(value, opt, options);
      if (result !== true) {
        throw new AxiosError_default("option " + opt + " must be " + result, AxiosError_default.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError_default("Unknown option " + opt, AxiosError_default.ERR_BAD_OPTION);
    }
  }
}
var validator_default = {
  assertOptions,
  validators
};

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/core/Axios.js
var validators2 = validator_default.validators;
var Axios = class {
  constructor(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
      request: new InterceptorManager_default(),
      response: new InterceptorManager_default()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(configOrUrl, config2) {
    try {
      return await this._request(configOrUrl, config2);
    } catch (err) {
      if (err instanceof Error) {
        let dummy = {};
        Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();
        const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
        try {
          if (!err.stack) {
            err.stack = stack;
          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
            err.stack += "\n" + stack;
          }
        } catch (e) {
        }
      }
      throw err;
    }
  }
  _request(configOrUrl, config2) {
    if (typeof configOrUrl === "string") {
      config2 = config2 || {};
      config2.url = configOrUrl;
    } else {
      config2 = configOrUrl || {};
    }
    config2 = mergeConfig(this.defaults, config2);
    const { transitional: transitional2, paramsSerializer, headers } = config2;
    if (transitional2 !== void 0) {
      validator_default.assertOptions(transitional2, {
        silentJSONParsing: validators2.transitional(validators2.boolean),
        forcedJSONParsing: validators2.transitional(validators2.boolean),
        clarifyTimeoutError: validators2.transitional(validators2.boolean)
      }, false);
    }
    if (paramsSerializer != null) {
      if (utils_default.isFunction(paramsSerializer)) {
        config2.paramsSerializer = {
          serialize: paramsSerializer
        };
      } else {
        validator_default.assertOptions(paramsSerializer, {
          encode: validators2.function,
          serialize: validators2.function
        }, true);
      }
    }
    if (config2.allowAbsoluteUrls !== void 0) {
    } else if (this.defaults.allowAbsoluteUrls !== void 0) {
      config2.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;
    } else {
      config2.allowAbsoluteUrls = true;
    }
    validator_default.assertOptions(config2, {
      baseUrl: validators2.spelling("baseURL"),
      withXsrfToken: validators2.spelling("withXSRFToken")
    }, true);
    config2.method = (config2.method || this.defaults.method || "get").toLowerCase();
    let contextHeaders = headers && utils_default.merge(
      headers.common,
      headers[config2.method]
    );
    headers && utils_default.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (method) => {
        delete headers[method];
      }
    );
    config2.headers = AxiosHeaders_default.concat(contextHeaders, headers);
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config2) === false) {
        return;
      }
      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });
    const responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });
    let promise;
    let i = 0;
    let len;
    if (!synchronousRequestInterceptors) {
      const chain = [dispatchRequest.bind(this), void 0];
      chain.unshift.apply(chain, requestInterceptorChain);
      chain.push.apply(chain, responseInterceptorChain);
      len = chain.length;
      promise = Promise.resolve(config2);
      while (i < len) {
        promise = promise.then(chain[i++], chain[i++]);
      }
      return promise;
    }
    len = requestInterceptorChain.length;
    let newConfig = config2;
    i = 0;
    while (i < len) {
      const onFulfilled = requestInterceptorChain[i++];
      const onRejected = requestInterceptorChain[i++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }
    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }
    i = 0;
    len = responseInterceptorChain.length;
    while (i < len) {
      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
    }
    return promise;
  }
  getUri(config2) {
    config2 = mergeConfig(this.defaults, config2);
    const fullPath = buildFullPath(config2.baseURL, config2.url, config2.allowAbsoluteUrls);
    return buildURL(fullPath, config2.params, config2.paramsSerializer);
  }
};
utils_default.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
  Axios.prototype[method] = function(url2, config2) {
    return this.request(mergeConfig(config2 || {}, {
      method,
      url: url2,
      data: (config2 || {}).data
    }));
  };
});
utils_default.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
  function generateHTTPMethod(isForm) {
    return function httpMethod(url2, data, config2) {
      return this.request(mergeConfig(config2 || {}, {
        method,
        headers: isForm ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: url2,
        data
      }));
    };
  }
  Axios.prototype[method] = generateHTTPMethod();
  Axios.prototype[method + "Form"] = generateHTTPMethod(true);
});
var Axios_default = Axios;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/cancel/CancelToken.js
init_cjs_shims();
var CancelToken = class _CancelToken {
  constructor(executor) {
    if (typeof executor !== "function") {
      throw new TypeError("executor must be a function.");
    }
    let resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });
    const token = this;
    this.promise.then((cancel) => {
      if (!token._listeners) return;
      let i = token._listeners.length;
      while (i-- > 0) {
        token._listeners[i](cancel);
      }
      token._listeners = null;
    });
    this.promise.then = (onfulfilled) => {
      let _resolve;
      const promise = new Promise((resolve) => {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);
      promise.cancel = function reject() {
        token.unsubscribe(_resolve);
      };
      return promise;
    };
    executor(function cancel(message, config2, request2) {
      if (token.reason) {
        return;
      }
      token.reason = new CanceledError_default(message, config2, request2);
      resolvePromise(token.reason);
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }
    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index = this._listeners.indexOf(listener);
    if (index !== -1) {
      this._listeners.splice(index, 1);
    }
  }
  toAbortSignal() {
    const controller = new AbortController();
    const abort = (err) => {
      controller.abort(err);
    };
    this.subscribe(abort);
    controller.signal.unsubscribe = () => this.unsubscribe(abort);
    return controller.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token = new _CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token,
      cancel
    };
  }
};
var CancelToken_default = CancelToken;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/spread.js
init_cjs_shims();
function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/isAxiosError.js
init_cjs_shims();
function isAxiosError(payload) {
  return utils_default.isObject(payload) && payload.isAxiosError === true;
}

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/helpers/HttpStatusCode.js
init_cjs_shims();
var HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode).forEach(([key, value]) => {
  HttpStatusCode[value] = key;
});
var HttpStatusCode_default = HttpStatusCode;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/lib/axios.js
function createInstance(defaultConfig) {
  const context = new Axios_default(defaultConfig);
  const instance = bind(Axios_default.prototype.request, context);
  utils_default.extend(instance, Axios_default.prototype, context, { allOwnKeys: true });
  utils_default.extend(instance, context, null, { allOwnKeys: true });
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };
  return instance;
}
var axios = createInstance(defaults_default);
axios.Axios = Axios_default;
axios.CanceledError = CanceledError_default;
axios.CancelToken = CancelToken_default;
axios.isCancel = isCancel;
axios.VERSION = VERSION;
axios.toFormData = toFormData_default;
axios.AxiosError = AxiosError_default;
axios.Cancel = axios.CanceledError;
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread;
axios.isAxiosError = isAxiosError;
axios.mergeConfig = mergeConfig;
axios.AxiosHeaders = AxiosHeaders_default;
axios.formToJSON = (thing) => formDataToJSON_default(utils_default.isHTMLForm(thing) ? new FormData(thing) : thing);
axios.getAdapter = adapters_default.getAdapter;
axios.HttpStatusCode = HttpStatusCode_default;
axios.default = axios;
var axios_default = axios;

// node_modules/.pnpm/axios@1.8.4/node_modules/axios/index.js
var {
  Axios: Axios2,
  AxiosError: AxiosError2,
  CanceledError: CanceledError2,
  isCancel: isCancel2,
  CancelToken: CancelToken2,
  VERSION: VERSION2,
  all: all2,
  Cancel,
  isAxiosError: isAxiosError2,
  spread: spread2,
  toFormData: toFormData2,
  AxiosHeaders: AxiosHeaders2,
  HttpStatusCode: HttpStatusCode2,
  formToJSON,
  getAdapter,
  mergeConfig: mergeConfig2
} = axios_default;

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/index.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client/index.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v1/client.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/globals.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/index.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/index.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/streaming.v1.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/tweet.v1.types.js
init_cjs_shims();
var EUploadMimeType;
(function(EUploadMimeType2) {
  EUploadMimeType2["Jpeg"] = "image/jpeg";
  EUploadMimeType2["Mp4"] = "video/mp4";
  EUploadMimeType2["Mov"] = "video/quicktime";
  EUploadMimeType2["Gif"] = "image/gif";
  EUploadMimeType2["Png"] = "image/png";
  EUploadMimeType2["Srt"] = "text/plain";
  EUploadMimeType2["Webp"] = "image/webp";
})(EUploadMimeType || (EUploadMimeType = {}));

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/entities.v1.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/user.v1.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/dev-utilities.v1.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/geo.v1.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/trends.v1.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/dm.v1.types.js
init_cjs_shims();
var EDirectMessageEventTypeV1;
(function(EDirectMessageEventTypeV12) {
  EDirectMessageEventTypeV12["Create"] = "message_create";
  EDirectMessageEventTypeV12["WelcomeCreate"] = "welcome_message";
})(EDirectMessageEventTypeV1 || (EDirectMessageEventTypeV1 = {}));

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v1/list.v1.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v2/index.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v2/streaming.v2.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v2/tweet.v2.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v2/tweet.definition.v2.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v2/user.v2.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v2/spaces.v2.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v2/list.v2.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/v2/community.v2.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/errors.types.js
init_cjs_shims();
var ETwitterApiError;
(function(ETwitterApiError2) {
  ETwitterApiError2["Request"] = "request";
  ETwitterApiError2["PartialResponse"] = "partial-response";
  ETwitterApiError2["Response"] = "response";
})(ETwitterApiError || (ETwitterApiError = {}));
var ApiError = class extends Error {
  constructor() {
    super(...arguments);
    this.error = true;
  }
};
var ApiRequestError = class extends ApiError {
  constructor(message, options) {
    super(message);
    this.type = ETwitterApiError.Request;
    Error.captureStackTrace(this, this.constructor);
    Object.defineProperty(this, "_options", { value: options });
  }
  get request() {
    return this._options.request;
  }
  get requestError() {
    return this._options.requestError;
  }
  toJSON() {
    return {
      type: this.type,
      error: this.requestError
    };
  }
};
var ApiPartialResponseError = class extends ApiError {
  constructor(message, options) {
    super(message);
    this.type = ETwitterApiError.PartialResponse;
    Error.captureStackTrace(this, this.constructor);
    Object.defineProperty(this, "_options", { value: options });
  }
  get request() {
    return this._options.request;
  }
  get response() {
    return this._options.response;
  }
  get responseError() {
    return this._options.responseError;
  }
  get rawContent() {
    return this._options.rawContent;
  }
  toJSON() {
    return {
      type: this.type,
      error: this.responseError
    };
  }
};
var ApiResponseError = class extends ApiError {
  constructor(message, options) {
    super(message);
    this.type = ETwitterApiError.Response;
    Error.captureStackTrace(this, this.constructor);
    Object.defineProperty(this, "_options", { value: options });
    this.code = options.code;
    this.headers = options.headers;
    this.rateLimit = options.rateLimit;
    if (options.data && typeof options.data === "object" && "error" in options.data && !options.data.errors) {
      const data = { ...options.data };
      data.errors = [{
        code: EApiV1ErrorCode.InternalError,
        message: data.error
      }];
      this.data = data;
    } else {
      this.data = options.data;
    }
  }
  get request() {
    return this._options.request;
  }
  get response() {
    return this._options.response;
  }
  /** Check for presence of one of given v1/v2 error codes. */
  hasErrorCode(...codes) {
    const errors = this.errors;
    if (!(errors === null || errors === void 0 ? void 0 : errors.length)) {
      return false;
    }
    if ("code" in errors[0]) {
      const v1errors = errors;
      return v1errors.some((error) => codes.includes(error.code));
    }
    const v2error = this.data;
    return codes.includes(v2error.type);
  }
  get errors() {
    var _a;
    return (_a = this.data) === null || _a === void 0 ? void 0 : _a.errors;
  }
  get rateLimitError() {
    return this.code === 420 || this.code === 429;
  }
  get isAuthError() {
    if (this.code === 401) {
      return true;
    }
    return this.hasErrorCode(EApiV1ErrorCode.AuthTimestampInvalid, EApiV1ErrorCode.AuthenticationFail, EApiV1ErrorCode.BadAuthenticationData, EApiV1ErrorCode.InvalidOrExpiredToken);
  }
  toJSON() {
    return {
      type: this.type,
      code: this.code,
      error: this.data,
      rateLimit: this.rateLimit,
      headers: this.headers
    };
  }
};
var EApiV1ErrorCode;
(function(EApiV1ErrorCode2) {
  EApiV1ErrorCode2[EApiV1ErrorCode2["InvalidCoordinates"] = 3] = "InvalidCoordinates";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NoLocationFound"] = 13] = "NoLocationFound";
  EApiV1ErrorCode2[EApiV1ErrorCode2["AuthenticationFail"] = 32] = "AuthenticationFail";
  EApiV1ErrorCode2[EApiV1ErrorCode2["InvalidOrExpiredToken"] = 89] = "InvalidOrExpiredToken";
  EApiV1ErrorCode2[EApiV1ErrorCode2["UnableToVerifyCredentials"] = 99] = "UnableToVerifyCredentials";
  EApiV1ErrorCode2[EApiV1ErrorCode2["AuthTimestampInvalid"] = 135] = "AuthTimestampInvalid";
  EApiV1ErrorCode2[EApiV1ErrorCode2["BadAuthenticationData"] = 215] = "BadAuthenticationData";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NoUserMatch"] = 17] = "NoUserMatch";
  EApiV1ErrorCode2[EApiV1ErrorCode2["UserNotFound"] = 50] = "UserNotFound";
  EApiV1ErrorCode2[EApiV1ErrorCode2["ResourceNotFound"] = 34] = "ResourceNotFound";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetNotFound"] = 144] = "TweetNotFound";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetNotVisible"] = 179] = "TweetNotVisible";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NotAllowedResource"] = 220] = "NotAllowedResource";
  EApiV1ErrorCode2[EApiV1ErrorCode2["MediaIdNotFound"] = 325] = "MediaIdNotFound";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetNoLongerAvailable"] = 421] = "TweetNoLongerAvailable";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetViolatedRules"] = 422] = "TweetViolatedRules";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TargetUserSuspended"] = 63] = "TargetUserSuspended";
  EApiV1ErrorCode2[EApiV1ErrorCode2["YouAreSuspended"] = 64] = "YouAreSuspended";
  EApiV1ErrorCode2[EApiV1ErrorCode2["AccountUpdateFailed"] = 120] = "AccountUpdateFailed";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NoSelfSpamReport"] = 36] = "NoSelfSpamReport";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NoSelfMute"] = 271] = "NoSelfMute";
  EApiV1ErrorCode2[EApiV1ErrorCode2["AccountLocked"] = 326] = "AccountLocked";
  EApiV1ErrorCode2[EApiV1ErrorCode2["RateLimitExceeded"] = 88] = "RateLimitExceeded";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NoDMRightForApp"] = 93] = "NoDMRightForApp";
  EApiV1ErrorCode2[EApiV1ErrorCode2["OverCapacity"] = 130] = "OverCapacity";
  EApiV1ErrorCode2[EApiV1ErrorCode2["InternalError"] = 131] = "InternalError";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TooManyFollowings"] = 161] = "TooManyFollowings";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetLimitExceeded"] = 185] = "TweetLimitExceeded";
  EApiV1ErrorCode2[EApiV1ErrorCode2["DuplicatedTweet"] = 187] = "DuplicatedTweet";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TooManySpamReports"] = 205] = "TooManySpamReports";
  EApiV1ErrorCode2[EApiV1ErrorCode2["RequestLooksLikeSpam"] = 226] = "RequestLooksLikeSpam";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NoWriteRightForApp"] = 261] = "NoWriteRightForApp";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetActionsDisabled"] = 425] = "TweetActionsDisabled";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetRepliesRestricted"] = 433] = "TweetRepliesRestricted";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NamedParameterMissing"] = 38] = "NamedParameterMissing";
  EApiV1ErrorCode2[EApiV1ErrorCode2["InvalidAttachmentUrl"] = 44] = "InvalidAttachmentUrl";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetTextTooLong"] = 186] = "TweetTextTooLong";
  EApiV1ErrorCode2[EApiV1ErrorCode2["MissingUrlParameter"] = 195] = "MissingUrlParameter";
  EApiV1ErrorCode2[EApiV1ErrorCode2["NoMultipleGifs"] = 323] = "NoMultipleGifs";
  EApiV1ErrorCode2[EApiV1ErrorCode2["InvalidMediaIds"] = 324] = "InvalidMediaIds";
  EApiV1ErrorCode2[EApiV1ErrorCode2["InvalidUrl"] = 407] = "InvalidUrl";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TooManyTweetAttachments"] = 386] = "TooManyTweetAttachments";
  EApiV1ErrorCode2[EApiV1ErrorCode2["StatusAlreadyFavorited"] = 139] = "StatusAlreadyFavorited";
  EApiV1ErrorCode2[EApiV1ErrorCode2["FollowRequestAlreadySent"] = 160] = "FollowRequestAlreadySent";
  EApiV1ErrorCode2[EApiV1ErrorCode2["CannotUnmuteANonMutedAccount"] = 272] = "CannotUnmuteANonMutedAccount";
  EApiV1ErrorCode2[EApiV1ErrorCode2["TweetAlreadyRetweeted"] = 327] = "TweetAlreadyRetweeted";
  EApiV1ErrorCode2[EApiV1ErrorCode2["ReplyToDeletedTweet"] = 385] = "ReplyToDeletedTweet";
  EApiV1ErrorCode2[EApiV1ErrorCode2["DMReceiverNotFollowingYou"] = 150] = "DMReceiverNotFollowingYou";
  EApiV1ErrorCode2[EApiV1ErrorCode2["UnableToSendDM"] = 151] = "UnableToSendDM";
  EApiV1ErrorCode2[EApiV1ErrorCode2["MustAllowDMFromAnyone"] = 214] = "MustAllowDMFromAnyone";
  EApiV1ErrorCode2[EApiV1ErrorCode2["CannotSendDMToThisUser"] = 349] = "CannotSendDMToThisUser";
  EApiV1ErrorCode2[EApiV1ErrorCode2["DMTextTooLong"] = 354] = "DMTextTooLong";
  EApiV1ErrorCode2[EApiV1ErrorCode2["SubscriptionAlreadyExists"] = 355] = "SubscriptionAlreadyExists";
  EApiV1ErrorCode2[EApiV1ErrorCode2["CallbackUrlNotApproved"] = 415] = "CallbackUrlNotApproved";
  EApiV1ErrorCode2[EApiV1ErrorCode2["SuspendedApplication"] = 416] = "SuspendedApplication";
  EApiV1ErrorCode2[EApiV1ErrorCode2["OobOauthIsNotAllowed"] = 417] = "OobOauthIsNotAllowed";
})(EApiV1ErrorCode || (EApiV1ErrorCode = {}));
var EApiV2ErrorCode;
(function(EApiV2ErrorCode2) {
  EApiV2ErrorCode2["InvalidRequest"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#invalid-request";
  EApiV2ErrorCode2["ClientForbidden"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#client-forbidden";
  EApiV2ErrorCode2["UnsupportedAuthentication"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#unsupported-authentication";
  EApiV2ErrorCode2["InvalidRules"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#invalid-rules";
  EApiV2ErrorCode2["TooManyRules"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#rule-cap";
  EApiV2ErrorCode2["DuplicatedRules"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#duplicate-rules";
  EApiV2ErrorCode2["RateLimitExceeded"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#usage-capped";
  EApiV2ErrorCode2["ConnectionError"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#streaming-connection";
  EApiV2ErrorCode2["ClientDisconnected"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#client-disconnected";
  EApiV2ErrorCode2["TwitterDisconnectedYou"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#operational-disconnect";
  EApiV2ErrorCode2["ResourceNotFound"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#resource-not-found";
  EApiV2ErrorCode2["ResourceUnauthorized"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#not-authorized-for-resource";
  EApiV2ErrorCode2["DisallowedResource"] = "https://developer.x.com/en/support/x-api/error-troubleshooting#disallowed-resource";
})(EApiV2ErrorCode || (EApiV2ErrorCode = {}));

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/responses.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/client.types.js
init_cjs_shims();
var ETwitterStreamEvent;
(function(ETwitterStreamEvent2) {
  ETwitterStreamEvent2["Connected"] = "connected";
  ETwitterStreamEvent2["ConnectError"] = "connect error";
  ETwitterStreamEvent2["ConnectionError"] = "connection error";
  ETwitterStreamEvent2["ConnectionClosed"] = "connection closed";
  ETwitterStreamEvent2["ConnectionLost"] = "connection lost";
  ETwitterStreamEvent2["ReconnectAttempt"] = "reconnect attempt";
  ETwitterStreamEvent2["Reconnected"] = "reconnected";
  ETwitterStreamEvent2["ReconnectError"] = "reconnect error";
  ETwitterStreamEvent2["ReconnectLimitExceeded"] = "reconnect limit exceeded";
  ETwitterStreamEvent2["DataKeepAlive"] = "data keep-alive";
  ETwitterStreamEvent2["Data"] = "data event content";
  ETwitterStreamEvent2["DataError"] = "data twitter error";
  ETwitterStreamEvent2["TweetParseError"] = "data tweet parse error";
  ETwitterStreamEvent2["Error"] = "stream error";
})(ETwitterStreamEvent || (ETwitterStreamEvent = {}));

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/auth.types.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/plugins/index.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/types/plugins/client.plugins.types.js
init_cjs_shims();
var TwitterApiPluginResponseOverride = class {
  constructor(value) {
    this.value = value;
  }
};

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v1/client.v1.write.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/helpers.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/settings.js
init_cjs_shims();
var TwitterApiV2Settings = {
  debug: false,
  deprecationWarnings: true,
  logger: { log: console.log.bind(console) }
};

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/helpers.js
function arrayWrap(value) {
  if (Array.isArray(value)) {
    return value;
  }
  return [value];
}
function trimUndefinedProperties(object) {
  for (const parameter in object) {
    if (object[parameter] === void 0)
      delete object[parameter];
  }
}

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v1/client.v1.read.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client.subclient.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client.base.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client-mixins/request-maker.mixin.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/stream/TweetStream.js
init_cjs_shims();
var import_events5 = require("events");

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client-mixins/request-handler.helper.js
init_cjs_shims();
var import_https2 = require("https");
var zlib2 = __toESM(require("zlib"));
var import_events2 = require("events");
var RequestHandlerHelper = class {
  constructor(requestData) {
    this.requestData = requestData;
    this.requestErrorHandled = false;
    this.responseData = [];
  }
  /* Request helpers */
  get hrefPathname() {
    const url2 = this.requestData.url;
    return url2.hostname + url2.pathname;
  }
  isCompressionDisabled() {
    return !this.requestData.compression || this.requestData.compression === "identity";
  }
  isFormEncodedEndpoint() {
    return this.requestData.url.href.startsWith("https://api.x.com/oauth/");
  }
  /* Error helpers */
  createRequestError(error) {
    if (TwitterApiV2Settings.debug) {
      TwitterApiV2Settings.logger.log("Request error:", error);
    }
    return new ApiRequestError("Request failed.", {
      request: this.req,
      error
    });
  }
  createPartialResponseError(error, abortClose) {
    const res = this.res;
    let message = `Request failed with partial response with HTTP code ${res.statusCode}`;
    if (abortClose) {
      message += " (connection abruptly closed)";
    } else {
      message += " (parse error)";
    }
    return new ApiPartialResponseError(message, {
      request: this.req,
      response: this.res,
      responseError: error,
      rawContent: Buffer.concat(this.responseData).toString()
    });
  }
  formatV1Errors(errors) {
    return errors.map(({ code, message }) => `${message} (Twitter code ${code})`).join(", ");
  }
  formatV2Error(error) {
    return `${error.title}: ${error.detail} (see ${error.type})`;
  }
  createResponseError({ res, data, rateLimit, code }) {
    var _a;
    if (TwitterApiV2Settings.debug) {
      TwitterApiV2Settings.logger.log(`Request failed with code ${code}, data:`, data);
      TwitterApiV2Settings.logger.log("Response headers:", res.headers);
    }
    let errorString = `Request failed with code ${code}`;
    if ((_a = data === null || data === void 0 ? void 0 : data.errors) === null || _a === void 0 ? void 0 : _a.length) {
      const errors = data.errors;
      if ("code" in errors[0]) {
        errorString += " - " + this.formatV1Errors(errors);
      } else {
        errorString += " - " + this.formatV2Error(data);
      }
    }
    return new ApiResponseError(errorString, {
      code,
      data,
      headers: res.headers,
      request: this.req,
      response: res,
      rateLimit
    });
  }
  /* Response helpers */
  getResponseDataStream(res) {
    if (this.isCompressionDisabled()) {
      return res;
    }
    const contentEncoding = (res.headers["content-encoding"] || "identity").trim().toLowerCase();
    if (contentEncoding === "br") {
      const brotli = zlib2.createBrotliDecompress({
        flush: zlib2.constants.BROTLI_OPERATION_FLUSH,
        finishFlush: zlib2.constants.BROTLI_OPERATION_FLUSH
      });
      res.pipe(brotli);
      return brotli;
    }
    if (contentEncoding === "gzip") {
      const gunzip = zlib2.createGunzip({
        flush: zlib2.constants.Z_SYNC_FLUSH,
        finishFlush: zlib2.constants.Z_SYNC_FLUSH
      });
      res.pipe(gunzip);
      return gunzip;
    }
    if (contentEncoding === "deflate") {
      const inflate = zlib2.createInflate({
        flush: zlib2.constants.Z_SYNC_FLUSH,
        finishFlush: zlib2.constants.Z_SYNC_FLUSH
      });
      res.pipe(inflate);
      return inflate;
    }
    return res;
  }
  detectResponseType(res) {
    var _a, _b;
    if (((_a = res.headers["content-type"]) === null || _a === void 0 ? void 0 : _a.includes("application/json")) || ((_b = res.headers["content-type"]) === null || _b === void 0 ? void 0 : _b.includes("application/problem+json"))) {
      return "json";
    } else if (this.isFormEncodedEndpoint()) {
      return "url";
    }
    return "text";
  }
  getParsedResponse(res) {
    const data = this.responseData;
    const mode = this.requestData.forceParseMode || this.detectResponseType(res);
    if (mode === "buffer") {
      return Buffer.concat(data);
    } else if (mode === "text") {
      return Buffer.concat(data).toString();
    } else if (mode === "json") {
      const asText = Buffer.concat(data).toString();
      return asText.length ? JSON.parse(asText) : void 0;
    } else if (mode === "url") {
      const asText = Buffer.concat(data).toString();
      const formEntries = {};
      for (const [item, value] of new URLSearchParams(asText)) {
        formEntries[item] = value;
      }
      return formEntries;
    } else {
      return void 0;
    }
  }
  getRateLimitFromResponse(res) {
    let rateLimit = void 0;
    if (res.headers["x-rate-limit-limit"]) {
      rateLimit = {
        limit: Number(res.headers["x-rate-limit-limit"]),
        remaining: Number(res.headers["x-rate-limit-remaining"]),
        reset: Number(res.headers["x-rate-limit-reset"])
      };
      if (res.headers["x-app-limit-24hour-limit"]) {
        rateLimit.day = {
          limit: Number(res.headers["x-app-limit-24hour-limit"]),
          remaining: Number(res.headers["x-app-limit-24hour-remaining"]),
          reset: Number(res.headers["x-app-limit-24hour-reset"])
        };
      }
      if (this.requestData.rateLimitSaver) {
        this.requestData.rateLimitSaver(rateLimit);
      }
    }
    return rateLimit;
  }
  /* Request event handlers */
  onSocketEventHandler(reject, cleanupListener, socket) {
    const onClose = this.onSocketCloseHandler.bind(this, reject);
    socket.on("close", onClose);
    cleanupListener.on("complete", () => socket.off("close", onClose));
  }
  onSocketCloseHandler(reject) {
    this.req.removeAllListeners("timeout");
    const res = this.res;
    if (res) {
      return;
    }
    if (!this.requestErrorHandled) {
      return reject(this.createRequestError(new Error("Socket closed without any information.")));
    }
  }
  requestErrorHandler(reject, requestError) {
    var _a, _b;
    (_b = (_a = this.requestData).requestEventDebugHandler) === null || _b === void 0 ? void 0 : _b.call(_a, "request-error", { requestError });
    this.requestErrorHandled = true;
    reject(this.createRequestError(requestError));
  }
  timeoutErrorHandler() {
    this.requestErrorHandled = true;
    this.req.destroy(new Error("Request timeout."));
  }
  /* Response event handlers */
  classicResponseHandler(resolve, reject, res) {
    this.res = res;
    const dataStream = this.getResponseDataStream(res);
    dataStream.on("data", (chunk) => this.responseData.push(chunk));
    dataStream.on("end", this.onResponseEndHandler.bind(this, resolve, reject));
    dataStream.on("close", this.onResponseCloseHandler.bind(this, resolve, reject));
    if (this.requestData.requestEventDebugHandler) {
      this.requestData.requestEventDebugHandler("response", { res });
      res.on("aborted", (error) => this.requestData.requestEventDebugHandler("response-aborted", { error }));
      res.on("error", (error) => this.requestData.requestEventDebugHandler("response-error", { error }));
      res.on("close", () => this.requestData.requestEventDebugHandler("response-close", { data: this.responseData }));
      res.on("end", () => this.requestData.requestEventDebugHandler("response-end"));
    }
  }
  onResponseEndHandler(resolve, reject) {
    const rateLimit = this.getRateLimitFromResponse(this.res);
    let data;
    try {
      data = this.getParsedResponse(this.res);
    } catch (e) {
      reject(this.createPartialResponseError(e, false));
      return;
    }
    const code = this.res.statusCode;
    if (code >= 400) {
      reject(this.createResponseError({ data, res: this.res, rateLimit, code }));
      return;
    }
    if (TwitterApiV2Settings.debug) {
      TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${this.res.statusCode}`);
      TwitterApiV2Settings.logger.log("Response body:", data);
    }
    resolve({
      data,
      headers: this.res.headers,
      rateLimit
    });
  }
  onResponseCloseHandler(resolve, reject) {
    const res = this.res;
    if (res.aborted) {
      try {
        this.getParsedResponse(this.res);
        return this.onResponseEndHandler(resolve, reject);
      } catch (e) {
        return reject(this.createPartialResponseError(e, true));
      }
    }
    if (!res.complete) {
      return reject(this.createPartialResponseError(new Error("Response has been interrupted before response could be parsed."), true));
    }
  }
  streamResponseHandler(resolve, reject, res) {
    const code = res.statusCode;
    if (code < 400) {
      if (TwitterApiV2Settings.debug) {
        TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${res.statusCode} (starting stream)`);
      }
      const dataStream = this.getResponseDataStream(res);
      resolve({ req: this.req, res: dataStream, originalResponse: res, requestData: this.requestData });
    } else {
      this.classicResponseHandler(() => void 0, reject, res);
    }
  }
  /* Wrappers for request lifecycle */
  debugRequest() {
    const url2 = this.requestData.url;
    TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]`, this.requestData.options);
    if (url2.search) {
      TwitterApiV2Settings.logger.log("Request parameters:", [...url2.searchParams.entries()].map(([key, value]) => `${key}: ${value}`));
    }
    if (this.requestData.body) {
      TwitterApiV2Settings.logger.log("Request body:", this.requestData.body);
    }
  }
  buildRequest() {
    var _a;
    const url2 = this.requestData.url;
    const auth = url2.username ? `${url2.username}:${url2.password}` : void 0;
    const headers = (_a = this.requestData.options.headers) !== null && _a !== void 0 ? _a : {};
    if (this.requestData.compression === true || this.requestData.compression === "brotli") {
      headers["accept-encoding"] = "br;q=1.0, gzip;q=0.8, deflate;q=0.5, *;q=0.1";
    } else if (this.requestData.compression === "gzip") {
      headers["accept-encoding"] = "gzip;q=1, deflate;q=0.5, *;q=0.1";
    } else if (this.requestData.compression === "deflate") {
      headers["accept-encoding"] = "deflate;q=1, *;q=0.1";
    }
    if (TwitterApiV2Settings.debug) {
      this.debugRequest();
    }
    this.req = (0, import_https2.request)({
      ...this.requestData.options,
      // Define URL params manually, addresses dependencies error https://github.com/PLhery/node-twitter-api-v2/issues/94
      host: url2.hostname,
      port: url2.port || void 0,
      path: url2.pathname + url2.search,
      protocol: url2.protocol,
      auth,
      headers
    });
  }
  registerRequestEventDebugHandlers(req) {
    req.on("close", () => this.requestData.requestEventDebugHandler("close"));
    req.on("abort", () => this.requestData.requestEventDebugHandler("abort"));
    req.on("socket", (socket) => {
      this.requestData.requestEventDebugHandler("socket", { socket });
      socket.on("error", (error) => this.requestData.requestEventDebugHandler("socket-error", { socket, error }));
      socket.on("connect", () => this.requestData.requestEventDebugHandler("socket-connect", { socket }));
      socket.on("close", (withError) => this.requestData.requestEventDebugHandler("socket-close", { socket, withError }));
      socket.on("end", () => this.requestData.requestEventDebugHandler("socket-end", { socket }));
      socket.on("lookup", (...data) => this.requestData.requestEventDebugHandler("socket-lookup", { socket, data }));
      socket.on("timeout", () => this.requestData.requestEventDebugHandler("socket-timeout", { socket }));
    });
  }
  makeRequest() {
    this.buildRequest();
    return new Promise((_resolve, _reject) => {
      const resolve = (value) => {
        cleanupListener.emit("complete");
        _resolve(value);
      };
      const reject = (value) => {
        cleanupListener.emit("complete");
        _reject(value);
      };
      const cleanupListener = new import_events2.EventEmitter();
      const req = this.req;
      req.on("error", this.requestErrorHandler.bind(this, reject));
      req.on("socket", this.onSocketEventHandler.bind(this, reject, cleanupListener));
      req.on("response", this.classicResponseHandler.bind(this, resolve, reject));
      if (this.requestData.options.timeout) {
        req.on("timeout", this.timeoutErrorHandler.bind(this));
      }
      if (this.requestData.requestEventDebugHandler) {
        this.registerRequestEventDebugHandlers(req);
      }
      if (this.requestData.body) {
        req.write(this.requestData.body);
      }
      req.end();
    });
  }
  async makeRequestAsStream() {
    const { req, res, requestData, originalResponse } = await this.makeRequestAndResolveWhenReady();
    return new TweetStream_default(requestData, { req, res, originalResponse });
  }
  makeRequestAndResolveWhenReady() {
    this.buildRequest();
    return new Promise((resolve, reject) => {
      const req = this.req;
      req.on("error", this.requestErrorHandler.bind(this, reject));
      req.on("response", this.streamResponseHandler.bind(this, resolve, reject));
      if (this.requestData.body) {
        req.write(this.requestData.body);
      }
      req.end();
    });
  }
};
var request_handler_helper_default = RequestHandlerHelper;

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/stream/TweetStreamEventCombiner.js
init_cjs_shims();
var import_events3 = require("events");
var TweetStreamEventCombiner = class extends import_events3.EventEmitter {
  constructor(stream4) {
    super();
    this.stream = stream4;
    this.stack = [];
    this.onStreamData = this.onStreamData.bind(this);
    this.onStreamError = this.onStreamError.bind(this);
    this.onceNewEvent = this.once.bind(this, "event");
    stream4.on(ETwitterStreamEvent.Data, this.onStreamData);
    stream4.on(ETwitterStreamEvent.ConnectionError, this.onStreamError);
    stream4.on(ETwitterStreamEvent.TweetParseError, this.onStreamError);
    stream4.on(ETwitterStreamEvent.ConnectionClosed, this.onStreamError);
  }
  /** Returns a new `Promise` that will `resolve` on next event (`data` or any sort of error). */
  nextEvent() {
    return new Promise(this.onceNewEvent);
  }
  /** Returns `true` if there's something in the stack. */
  hasStack() {
    return this.stack.length > 0;
  }
  /** Returns stacked data events, and clean the stack. */
  popStack() {
    const stack = this.stack;
    this.stack = [];
    return stack;
  }
  /** Cleanup all the listeners attached on stream. */
  destroy() {
    this.removeAllListeners();
    this.stream.off(ETwitterStreamEvent.Data, this.onStreamData);
    this.stream.off(ETwitterStreamEvent.ConnectionError, this.onStreamError);
    this.stream.off(ETwitterStreamEvent.TweetParseError, this.onStreamError);
    this.stream.off(ETwitterStreamEvent.ConnectionClosed, this.onStreamError);
  }
  emitEvent(type, payload) {
    this.emit("event", { type, payload });
  }
  onStreamError(payload) {
    this.emitEvent("error", payload);
  }
  onStreamData(payload) {
    this.stack.push(payload);
    this.emitEvent("data", payload);
  }
};
var TweetStreamEventCombiner_default = TweetStreamEventCombiner;

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/stream/TweetStreamParser.js
init_cjs_shims();
var import_events4 = require("events");
var TweetStreamParser = class extends import_events4.EventEmitter {
  constructor() {
    super(...arguments);
    this.currentMessage = "";
  }
  // Code partially belongs to twitter-stream-api for this
  // https://github.com/trygve-lie/twitter-stream-api/blob/master/lib/parser.js
  push(chunk) {
    this.currentMessage += chunk;
    chunk = this.currentMessage;
    const size = chunk.length;
    let start = 0;
    let offset = 0;
    while (offset < size) {
      if (chunk.slice(offset, offset + 2) === "\r\n") {
        const piece = chunk.slice(start, offset);
        start = offset += 2;
        if (!piece.length) {
          continue;
        }
        try {
          const payload = JSON.parse(piece);
          if (payload) {
            this.emit(EStreamParserEvent.ParsedData, payload);
            continue;
          }
        } catch (error) {
          this.emit(EStreamParserEvent.ParseError, error);
        }
      }
      offset++;
    }
    this.currentMessage = chunk.slice(start, size);
  }
  /** Reset the currently stored message (f.e. on connection reset) */
  reset() {
    this.currentMessage = "";
  }
};
var EStreamParserEvent;
(function(EStreamParserEvent2) {
  EStreamParserEvent2["ParsedData"] = "parsed data";
  EStreamParserEvent2["ParseError"] = "parse error";
})(EStreamParserEvent || (EStreamParserEvent = {}));

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/stream/TweetStream.js
var basicRetriesAttempt = [5, 15, 30, 60, 90, 120, 180, 300, 600, 900];
var basicReconnectRetry = (tryOccurrence) => tryOccurrence > basicRetriesAttempt.length ? 901e3 : basicRetriesAttempt[tryOccurrence - 1] * 1e3;
var TweetStream = class extends import_events5.EventEmitter {
  constructor(requestData, connection) {
    super();
    this.requestData = requestData;
    this.autoReconnect = false;
    this.autoReconnectRetries = 5;
    this.keepAliveTimeoutMs = 1e3 * 120;
    this.nextRetryTimeout = basicReconnectRetry;
    this.parser = new TweetStreamParser();
    this.connectionProcessRunning = false;
    this.onKeepAliveTimeout = this.onKeepAliveTimeout.bind(this);
    this.initEventsFromParser();
    if (connection) {
      this.req = connection.req;
      this.res = connection.res;
      this.originalResponse = connection.originalResponse;
      this.initEventsFromRequest();
    }
  }
  on(event, handler) {
    return super.on(event, handler);
  }
  initEventsFromRequest() {
    if (!this.req || !this.res) {
      throw new Error("TweetStream error: You cannot init TweetStream without a request and response object.");
    }
    const errorHandler = (err) => {
      this.emit(ETwitterStreamEvent.ConnectionError, err);
      this.emit(ETwitterStreamEvent.Error, {
        type: ETwitterStreamEvent.ConnectionError,
        error: err,
        message: "Connection lost or closed by Twitter."
      });
      this.onConnectionError();
    };
    this.req.on("error", errorHandler);
    this.res.on("error", errorHandler);
    this.res.on("close", () => errorHandler(new Error("Connection closed by Twitter.")));
    this.res.on("data", (chunk) => {
      this.resetKeepAliveTimeout();
      if (chunk.toString() === "\r\n") {
        return this.emit(ETwitterStreamEvent.DataKeepAlive);
      }
      this.parser.push(chunk.toString());
    });
    this.resetKeepAliveTimeout();
  }
  initEventsFromParser() {
    const payloadIsError = this.requestData.payloadIsError;
    this.parser.on(EStreamParserEvent.ParsedData, (eventData) => {
      if (payloadIsError && payloadIsError(eventData)) {
        this.emit(ETwitterStreamEvent.DataError, eventData);
        this.emit(ETwitterStreamEvent.Error, {
          type: ETwitterStreamEvent.DataError,
          error: eventData,
          message: "Twitter sent a payload that is detected as an error payload."
        });
      } else {
        this.emit(ETwitterStreamEvent.Data, eventData);
      }
    });
    this.parser.on(EStreamParserEvent.ParseError, (error) => {
      this.emit(ETwitterStreamEvent.TweetParseError, error);
      this.emit(ETwitterStreamEvent.Error, {
        type: ETwitterStreamEvent.TweetParseError,
        error,
        message: "Failed to parse stream data."
      });
    });
  }
  resetKeepAliveTimeout() {
    this.unbindKeepAliveTimeout();
    if (this.keepAliveTimeoutMs !== Infinity) {
      this.keepAliveTimeout = setTimeout(this.onKeepAliveTimeout, this.keepAliveTimeoutMs);
    }
  }
  onKeepAliveTimeout() {
    this.emit(ETwitterStreamEvent.ConnectionLost);
    this.onConnectionError();
  }
  unbindTimeouts() {
    this.unbindRetryTimeout();
    this.unbindKeepAliveTimeout();
  }
  unbindKeepAliveTimeout() {
    if (this.keepAliveTimeout) {
      clearTimeout(this.keepAliveTimeout);
      this.keepAliveTimeout = void 0;
    }
  }
  unbindRetryTimeout() {
    if (this.retryTimeout) {
      clearTimeout(this.retryTimeout);
      this.retryTimeout = void 0;
    }
  }
  closeWithoutEmit() {
    this.unbindTimeouts();
    if (this.res) {
      this.res.removeAllListeners();
      this.res.destroy();
    }
    if (this.req) {
      this.req.removeAllListeners();
      this.req.destroy();
    }
  }
  /** Terminate connection to Twitter. */
  close() {
    this.emit(ETwitterStreamEvent.ConnectionClosed);
    this.closeWithoutEmit();
  }
  /** Unbind all listeners, and close connection. */
  destroy() {
    this.removeAllListeners();
    this.close();
  }
  /**
   * Make a new request that creates a new `TweetStream` instance with
   * the same parameters, and bind current listeners to new stream.
   */
  async clone() {
    const newRequest = new request_handler_helper_default(this.requestData);
    const newStream = await newRequest.makeRequestAsStream();
    const listenerNames = this.eventNames();
    for (const listener of listenerNames) {
      const callbacks = this.listeners(listener);
      for (const callback of callbacks) {
        newStream.on(listener, callback);
      }
    }
    return newStream;
  }
  /** Start initial stream connection, setup options on current instance and returns itself. */
  async connect(options = {}) {
    if (typeof options.autoReconnect !== "undefined") {
      this.autoReconnect = options.autoReconnect;
    }
    if (typeof options.autoReconnectRetries !== "undefined") {
      this.autoReconnectRetries = options.autoReconnectRetries === "unlimited" ? Infinity : options.autoReconnectRetries;
    }
    if (typeof options.keepAliveTimeout !== "undefined") {
      this.keepAliveTimeoutMs = options.keepAliveTimeout === "disable" ? Infinity : options.keepAliveTimeout;
    }
    if (typeof options.nextRetryTimeout !== "undefined") {
      this.nextRetryTimeout = options.nextRetryTimeout;
    }
    this.unbindTimeouts();
    try {
      await this.reconnect();
    } catch (e) {
      this.emit(ETwitterStreamEvent.ConnectError, 0);
      this.emit(ETwitterStreamEvent.Error, {
        type: ETwitterStreamEvent.ConnectError,
        error: e,
        message: "Connect error - Initial connection just failed."
      });
      if (this.autoReconnect) {
        this.makeAutoReconnectRetry(0, e);
      } else {
        throw e;
      }
    }
    return this;
  }
  /** Make a new request to (re)connect to Twitter. */
  async reconnect() {
    if (this.connectionProcessRunning) {
      throw new Error("Connection process is already running.");
    }
    this.connectionProcessRunning = true;
    try {
      let initialConnection = true;
      if (this.req) {
        initialConnection = false;
        this.closeWithoutEmit();
      }
      const { req, res, originalResponse } = await new request_handler_helper_default(this.requestData).makeRequestAndResolveWhenReady();
      this.req = req;
      this.res = res;
      this.originalResponse = originalResponse;
      this.emit(initialConnection ? ETwitterStreamEvent.Connected : ETwitterStreamEvent.Reconnected);
      this.parser.reset();
      this.initEventsFromRequest();
    } finally {
      this.connectionProcessRunning = false;
    }
  }
  async onConnectionError(retryOccurrence = 0) {
    this.unbindTimeouts();
    this.closeWithoutEmit();
    if (!this.autoReconnect) {
      this.emit(ETwitterStreamEvent.ConnectionClosed);
      return;
    }
    if (retryOccurrence >= this.autoReconnectRetries) {
      this.emit(ETwitterStreamEvent.ReconnectLimitExceeded);
      this.emit(ETwitterStreamEvent.ConnectionClosed);
      return;
    }
    try {
      this.emit(ETwitterStreamEvent.ReconnectAttempt, retryOccurrence);
      await this.reconnect();
    } catch (e) {
      this.emit(ETwitterStreamEvent.ReconnectError, retryOccurrence);
      this.emit(ETwitterStreamEvent.Error, {
        type: ETwitterStreamEvent.ReconnectError,
        error: e,
        message: `Reconnect error - ${retryOccurrence + 1} attempts made yet.`
      });
      this.makeAutoReconnectRetry(retryOccurrence, e);
    }
  }
  makeAutoReconnectRetry(retryOccurrence, error) {
    const nextRetry = this.nextRetryTimeout(retryOccurrence + 1, error);
    this.retryTimeout = setTimeout(() => {
      this.onConnectionError(retryOccurrence + 1);
    }, nextRetry);
  }
  async *[Symbol.asyncIterator]() {
    const eventCombiner = new TweetStreamEventCombiner_default(this);
    try {
      while (true) {
        if (!this.req || this.req.aborted) {
          throw new Error("Connection closed");
        }
        if (eventCombiner.hasStack()) {
          yield* eventCombiner.popStack();
        }
        const { type, payload } = await eventCombiner.nextEvent();
        if (type === "error") {
          throw payload;
        }
      }
    } finally {
      eventCombiner.destroy();
    }
  }
};
var TweetStream_default = TweetStream;

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/plugins/helpers.js
init_cjs_shims();
function hasRequestErrorPlugins(client) {
  var _a;
  if (!((_a = client.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length)) {
    return false;
  }
  for (const plugin of client.clientSettings.plugins) {
    if (plugin.onRequestError || plugin.onResponseError) {
      return true;
    }
  }
  return false;
}
async function applyResponseHooks(requestParams, computedParams, requestOptions, error) {
  let override;
  if (error instanceof ApiRequestError || error instanceof ApiPartialResponseError) {
    override = await this.applyPluginMethod("onRequestError", {
      client: this,
      url: this.getUrlObjectFromUrlString(requestParams.url),
      params: requestParams,
      computedParams,
      requestOptions,
      error
    });
  } else if (error instanceof ApiResponseError) {
    override = await this.applyPluginMethod("onResponseError", {
      client: this,
      url: this.getUrlObjectFromUrlString(requestParams.url),
      params: requestParams,
      computedParams,
      requestOptions,
      error
    });
  }
  if (override && override instanceof TwitterApiPluginResponseOverride) {
    return override.value;
  }
  return Promise.reject(error);
}

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client-mixins/oauth1.helper.js
init_cjs_shims();
var crypto2 = __toESM(require("crypto"));
var OAuth1Helper = class _OAuth1Helper {
  constructor(options) {
    this.nonceLength = 32;
    this.consumerKeys = options.consumerKeys;
  }
  static percentEncode(str) {
    return encodeURIComponent(str).replace(/!/g, "%21").replace(/\*/g, "%2A").replace(/'/g, "%27").replace(/\(/g, "%28").replace(/\)/g, "%29");
  }
  hash(base, key) {
    return crypto2.createHmac("sha1", key).update(base).digest("base64");
  }
  authorize(request2, accessTokens = {}) {
    const oauthInfo = {
      oauth_consumer_key: this.consumerKeys.key,
      oauth_nonce: this.getNonce(),
      oauth_signature_method: "HMAC-SHA1",
      oauth_timestamp: this.getTimestamp(),
      oauth_version: "1.0"
    };
    if (accessTokens.key !== void 0) {
      oauthInfo.oauth_token = accessTokens.key;
    }
    if (!request2.data) {
      request2.data = {};
    }
    oauthInfo.oauth_signature = this.getSignature(request2, accessTokens.secret, oauthInfo);
    return oauthInfo;
  }
  toHeader(oauthInfo) {
    const sorted = sortObject(oauthInfo);
    let header_value = "OAuth ";
    for (const element of sorted) {
      if (element.key.indexOf("oauth_") !== 0) {
        continue;
      }
      header_value += _OAuth1Helper.percentEncode(element.key) + '="' + _OAuth1Helper.percentEncode(element.value) + '",';
    }
    return {
      // Remove the last ,
      Authorization: header_value.slice(0, header_value.length - 1)
    };
  }
  getNonce() {
    const wordCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    let result = "";
    for (let i = 0; i < this.nonceLength; i++) {
      result += wordCharacters[Math.trunc(Math.random() * wordCharacters.length)];
    }
    return result;
  }
  getTimestamp() {
    return Math.trunc((/* @__PURE__ */ new Date()).getTime() / 1e3);
  }
  getSignature(request2, tokenSecret, oauthInfo) {
    return this.hash(this.getBaseString(request2, oauthInfo), this.getSigningKey(tokenSecret));
  }
  getSigningKey(tokenSecret) {
    return _OAuth1Helper.percentEncode(this.consumerKeys.secret) + "&" + _OAuth1Helper.percentEncode(tokenSecret || "");
  }
  getBaseString(request2, oauthInfo) {
    return request2.method.toUpperCase() + "&" + _OAuth1Helper.percentEncode(this.getBaseUrl(request2.url)) + "&" + _OAuth1Helper.percentEncode(this.getParameterString(request2, oauthInfo));
  }
  getParameterString(request2, oauthInfo) {
    const baseStringData = sortObject(percentEncodeData(mergeObject(oauthInfo, mergeObject(request2.data, deParamUrl(request2.url)))));
    let dataStr = "";
    for (const { key, value } of baseStringData) {
      if (value && Array.isArray(value)) {
        value.sort();
        let valString = "";
        value.forEach((item, i) => {
          valString += key + "=" + item;
          if (i < value.length) {
            valString += "&";
          }
        });
        dataStr += valString;
      } else {
        dataStr += key + "=" + value + "&";
      }
    }
    return dataStr.slice(0, dataStr.length - 1);
  }
  getBaseUrl(url2) {
    return url2.split("?")[0];
  }
};
var oauth1_helper_default = OAuth1Helper;
function mergeObject(obj1, obj2) {
  return {
    ...obj1 || {},
    ...obj2 || {}
  };
}
function sortObject(data) {
  return Object.keys(data).sort().map((key) => ({ key, value: data[key] }));
}
function deParam(string) {
  const split = string.split("&");
  const data = {};
  for (const coupleKeyValue of split) {
    const [key, value = ""] = coupleKeyValue.split("=");
    if (data[key]) {
      if (!Array.isArray(data[key])) {
        data[key] = [data[key]];
      }
      data[key].push(decodeURIComponent(value));
    } else {
      data[key] = decodeURIComponent(value);
    }
  }
  return data;
}
function deParamUrl(url2) {
  const tmp = url2.split("?");
  if (tmp.length === 1)
    return {};
  return deParam(tmp[1]);
}
function percentEncodeData(data) {
  const result = {};
  for (const key in data) {
    let value = data[key];
    if (value && Array.isArray(value)) {
      value = value.map((v) => OAuth1Helper.percentEncode(v));
    } else {
      value = OAuth1Helper.percentEncode(value);
    }
    result[OAuth1Helper.percentEncode(key)] = value;
  }
  return result;
}

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client-mixins/request-param.helper.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client-mixins/form-data.helper.js
init_cjs_shims();
var FormDataHelper = class _FormDataHelper {
  constructor() {
    this._boundary = "";
    this._chunks = [];
  }
  bodyAppend(...values) {
    const allAsBuffer = values.map((val) => val instanceof Buffer ? val : Buffer.from(val));
    this._chunks.push(...allAsBuffer);
  }
  append(field, value, contentType) {
    const convertedValue = value instanceof Buffer ? value : value.toString();
    const header = this.getMultipartHeader(field, convertedValue, contentType);
    this.bodyAppend(header, convertedValue, _FormDataHelper.LINE_BREAK);
  }
  getHeaders() {
    return {
      "content-type": "multipart/form-data; boundary=" + this.getBoundary()
    };
  }
  /** Length of form-data (including footer length). */
  getLength() {
    return this._chunks.reduce((acc, cur) => acc + cur.length, this.getMultipartFooter().length);
  }
  getBuffer() {
    const allChunks = [...this._chunks, this.getMultipartFooter()];
    const totalBuffer = Buffer.alloc(this.getLength());
    let i = 0;
    for (const chunk of allChunks) {
      for (let j = 0; j < chunk.length; i++, j++) {
        totalBuffer[i] = chunk[j];
      }
    }
    return totalBuffer;
  }
  getBoundary() {
    if (!this._boundary) {
      this.generateBoundary();
    }
    return this._boundary;
  }
  generateBoundary() {
    let boundary = "--------------------------";
    for (let i = 0; i < 24; i++) {
      boundary += Math.floor(Math.random() * 10).toString(16);
    }
    this._boundary = boundary;
  }
  getMultipartHeader(field, value, contentType) {
    if (!contentType) {
      contentType = value instanceof Buffer ? _FormDataHelper.DEFAULT_CONTENT_TYPE : "";
    }
    const headers = {
      "Content-Disposition": ["form-data", `name="${field}"`],
      "Content-Type": contentType
    };
    let contents = "";
    for (const [prop, header] of Object.entries(headers)) {
      if (!header.length) {
        continue;
      }
      contents += prop + ": " + arrayWrap(header).join("; ") + _FormDataHelper.LINE_BREAK;
    }
    return "--" + this.getBoundary() + _FormDataHelper.LINE_BREAK + contents + _FormDataHelper.LINE_BREAK;
  }
  getMultipartFooter() {
    if (this._footerChunk) {
      return this._footerChunk;
    }
    return this._footerChunk = Buffer.from("--" + this.getBoundary() + "--" + _FormDataHelper.LINE_BREAK);
  }
};
FormDataHelper.LINE_BREAK = "\r\n";
FormDataHelper.DEFAULT_CONTENT_TYPE = "application/octet-stream";

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client-mixins/request-param.helper.js
var RequestParamHelpers = class {
  static formatQueryToString(query) {
    const formattedQuery = {};
    for (const prop in query) {
      if (typeof query[prop] === "string") {
        formattedQuery[prop] = query[prop];
      } else if (typeof query[prop] !== "undefined") {
        formattedQuery[prop] = String(query[prop]);
      }
    }
    return formattedQuery;
  }
  static autoDetectBodyType(url2) {
    if (url2.pathname.startsWith("/2/") || url2.pathname.startsWith("/labs/2/")) {
      if (url2.password.startsWith("/2/oauth2")) {
        return "url";
      }
      return "json";
    }
    if (url2.hostname === "upload.x.com") {
      if (url2.pathname === "/1.1/media/upload.json") {
        return "form-data";
      }
      return "json";
    }
    const endpoint = url2.pathname.split("/1.1/", 2)[1];
    if (this.JSON_1_1_ENDPOINTS.has(endpoint)) {
      return "json";
    }
    return "url";
  }
  static addQueryParamsToUrl(url2, query) {
    const queryEntries = Object.entries(query);
    if (queryEntries.length) {
      let search = "";
      for (const [key, value] of queryEntries) {
        search += (search.length ? "&" : "?") + `${oauth1_helper_default.percentEncode(key)}=${oauth1_helper_default.percentEncode(value)}`;
      }
      url2.search = search;
    }
  }
  static constructBodyParams(body, headers, mode) {
    if (body instanceof Buffer) {
      return body;
    }
    if (mode === "json") {
      if (!headers["content-type"]) {
        headers["content-type"] = "application/json;charset=UTF-8";
      }
      return JSON.stringify(body);
    } else if (mode === "url") {
      if (!headers["content-type"]) {
        headers["content-type"] = "application/x-www-form-urlencoded;charset=UTF-8";
      }
      if (Object.keys(body).length) {
        return new URLSearchParams(body).toString().replace(/\*/g, "%2A");
      }
      return "";
    } else if (mode === "raw") {
      throw new Error("You can only use raw body mode with Buffers. To give a string, use Buffer.from(str).");
    } else {
      const form = new FormDataHelper();
      for (const parameter in body) {
        form.append(parameter, body[parameter]);
      }
      if (!headers["content-type"]) {
        const formHeaders = form.getHeaders();
        headers["content-type"] = formHeaders["content-type"];
      }
      return form.getBuffer();
    }
  }
  static setBodyLengthHeader(options, body) {
    var _a;
    options.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : {};
    if (typeof body === "string") {
      options.headers["content-length"] = Buffer.byteLength(body);
    } else {
      options.headers["content-length"] = body.length;
    }
  }
  static isOAuthSerializable(item) {
    return !(item instanceof Buffer);
  }
  static mergeQueryAndBodyForOAuth(query, body) {
    const parameters = {};
    for (const prop in query) {
      parameters[prop] = query[prop];
    }
    if (this.isOAuthSerializable(body)) {
      for (const prop in body) {
        const bodyProp = body[prop];
        if (this.isOAuthSerializable(bodyProp)) {
          parameters[prop] = typeof bodyProp === "object" && bodyProp !== null && "toString" in bodyProp ? bodyProp.toString() : bodyProp;
        }
      }
    }
    return parameters;
  }
  static moveUrlQueryParamsIntoObject(url2, query) {
    for (const [param, value] of url2.searchParams) {
      query[param] = value;
    }
    url2.search = "";
    return url2;
  }
  /**
   * Replace URL parameters available in pathname, like `:id`, with data given in `parameters`:
   * `https://x.com/:id.json` + `{ id: '20' }` => `https://x.com/20.json`
   */
  static applyRequestParametersToUrl(url2, parameters) {
    url2.pathname = url2.pathname.replace(/:([A-Z_-]+)/ig, (fullMatch, paramName) => {
      if (parameters[paramName] !== void 0) {
        return String(parameters[paramName]);
      }
      return fullMatch;
    });
    return url2;
  }
};
RequestParamHelpers.JSON_1_1_ENDPOINTS = /* @__PURE__ */ new Set([
  "direct_messages/events/new.json",
  "direct_messages/welcome_messages/new.json",
  "direct_messages/welcome_messages/rules/new.json",
  "media/metadata/create.json",
  "collections/entries/curate.json"
]);
var request_param_helper_default = RequestParamHelpers;

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client-mixins/oauth2.helper.js
init_cjs_shims();
var crypto3 = __toESM(require("crypto"));
var OAuth2Helper = class {
  static getCodeVerifier() {
    return this.generateRandomString(128);
  }
  static getCodeChallengeFromVerifier(verifier) {
    return this.escapeBase64Url(crypto3.createHash("sha256").update(verifier).digest("base64"));
  }
  static getAuthHeader(clientId, clientSecret) {
    const key = encodeURIComponent(clientId) + ":" + encodeURIComponent(clientSecret);
    return Buffer.from(key).toString("base64");
  }
  static generateRandomString(length) {
    let text = "";
    const possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~";
    for (let i = 0; i < length; i++) {
      text += possible[Math.floor(Math.random() * possible.length)];
    }
    return text;
  }
  static escapeBase64Url(string) {
    return string.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
  }
};

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client-mixins/request-maker.mixin.js
var ClientRequestMaker = class _ClientRequestMaker {
  constructor(settings) {
    this.rateLimits = {};
    this.clientSettings = {};
    if (settings) {
      this.clientSettings = settings;
    }
  }
  /** @deprecated - Switch to `@twitter-api-v2/plugin-rate-limit` */
  getRateLimits() {
    return this.rateLimits;
  }
  saveRateLimit(originalUrl, rateLimit) {
    this.rateLimits[originalUrl] = rateLimit;
  }
  /** Send a new request and returns a wrapped `Promise<TwitterResponse<T>`. */
  async send(requestParams) {
    var _a, _b, _c, _d, _e;
    if ((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length) {
      const possibleResponse = await this.applyPreRequestConfigHooks(requestParams);
      if (possibleResponse) {
        return possibleResponse;
      }
    }
    const args = this.getHttpRequestArgs(requestParams);
    const options = {
      method: args.method,
      headers: args.headers,
      timeout: requestParams.timeout,
      agent: this.clientSettings.httpAgent
    };
    const enableRateLimitSave = requestParams.enableRateLimitSave !== false;
    if (args.body) {
      request_param_helper_default.setBodyLengthHeader(options, args.body);
    }
    if ((_b = this.clientSettings.plugins) === null || _b === void 0 ? void 0 : _b.length) {
      await this.applyPreRequestHooks(requestParams, args, options);
    }
    let request2 = new request_handler_helper_default({
      url: args.url,
      options,
      body: args.body,
      rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : void 0,
      requestEventDebugHandler: requestParams.requestEventDebugHandler,
      compression: (_d = (_c = requestParams.compression) !== null && _c !== void 0 ? _c : this.clientSettings.compression) !== null && _d !== void 0 ? _d : true,
      forceParseMode: requestParams.forceParseMode
    }).makeRequest();
    if (hasRequestErrorPlugins(this)) {
      request2 = this.applyResponseErrorHooks(requestParams, args, options, request2);
    }
    const response = await request2;
    if ((_e = this.clientSettings.plugins) === null || _e === void 0 ? void 0 : _e.length) {
      const responseOverride = await this.applyPostRequestHooks(requestParams, args, options, response);
      if (responseOverride) {
        return responseOverride.value;
      }
    }
    return response;
  }
  sendStream(requestParams) {
    var _a, _b;
    if (this.clientSettings.plugins) {
      this.applyPreStreamRequestConfigHooks(requestParams);
    }
    const args = this.getHttpRequestArgs(requestParams);
    const options = {
      method: args.method,
      headers: args.headers,
      agent: this.clientSettings.httpAgent
    };
    const enableRateLimitSave = requestParams.enableRateLimitSave !== false;
    const enableAutoConnect = requestParams.autoConnect !== false;
    if (args.body) {
      request_param_helper_default.setBodyLengthHeader(options, args.body);
    }
    const requestData = {
      url: args.url,
      options,
      body: args.body,
      rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : void 0,
      payloadIsError: requestParams.payloadIsError,
      compression: (_b = (_a = requestParams.compression) !== null && _a !== void 0 ? _a : this.clientSettings.compression) !== null && _b !== void 0 ? _b : true
    };
    const stream4 = new TweetStream_default(requestData);
    if (!enableAutoConnect) {
      return stream4;
    }
    return stream4.connect();
  }
  /* Token helpers */
  initializeToken(token) {
    if (typeof token === "string") {
      this.bearerToken = token;
    } else if (typeof token === "object" && "appKey" in token) {
      this.consumerToken = token.appKey;
      this.consumerSecret = token.appSecret;
      if (token.accessToken && token.accessSecret) {
        this.accessToken = token.accessToken;
        this.accessSecret = token.accessSecret;
      }
      this._oauth = this.buildOAuth();
    } else if (typeof token === "object" && "username" in token) {
      const key = encodeURIComponent(token.username) + ":" + encodeURIComponent(token.password);
      this.basicToken = Buffer.from(key).toString("base64");
    } else if (typeof token === "object" && "clientId" in token) {
      this.clientId = token.clientId;
      this.clientSecret = token.clientSecret;
    }
  }
  getActiveTokens() {
    if (this.bearerToken) {
      return {
        type: "oauth2",
        bearerToken: this.bearerToken
      };
    } else if (this.basicToken) {
      return {
        type: "basic",
        token: this.basicToken
      };
    } else if (this.consumerSecret && this._oauth) {
      return {
        type: "oauth-1.0a",
        appKey: this.consumerToken,
        appSecret: this.consumerSecret,
        accessToken: this.accessToken,
        accessSecret: this.accessSecret
      };
    } else if (this.clientId) {
      return {
        type: "oauth2-user",
        clientId: this.clientId
      };
    }
    return { type: "none" };
  }
  buildOAuth() {
    if (!this.consumerSecret || !this.consumerToken)
      throw new Error("Invalid consumer tokens");
    return new oauth1_helper_default({
      consumerKeys: { key: this.consumerToken, secret: this.consumerSecret }
    });
  }
  getOAuthAccessTokens() {
    if (!this.accessSecret || !this.accessToken)
      return;
    return {
      key: this.accessToken,
      secret: this.accessSecret
    };
  }
  /* Plugin helpers */
  getPlugins() {
    var _a;
    return (_a = this.clientSettings.plugins) !== null && _a !== void 0 ? _a : [];
  }
  hasPlugins() {
    var _a;
    return !!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length);
  }
  async applyPluginMethod(method, args) {
    var _a;
    let returnValue;
    for (const plugin of this.getPlugins()) {
      const value = await ((_a = plugin[method]) === null || _a === void 0 ? void 0 : _a.call(plugin, args));
      if (value && value instanceof TwitterApiPluginResponseOverride) {
        returnValue = value;
      }
    }
    return returnValue;
  }
  /* Request helpers */
  writeAuthHeaders({ headers, bodyInSignature, url: url2, method, query, body }) {
    headers = { ...headers };
    if (this.bearerToken) {
      headers.Authorization = "Bearer " + this.bearerToken;
    } else if (this.basicToken) {
      headers.Authorization = "Basic " + this.basicToken;
    } else if (this.clientId && this.clientSecret) {
      headers.Authorization = "Basic " + OAuth2Helper.getAuthHeader(this.clientId, this.clientSecret);
    } else if (this.consumerSecret && this._oauth) {
      const data = bodyInSignature ? request_param_helper_default.mergeQueryAndBodyForOAuth(query, body) : query;
      const auth = this._oauth.authorize({
        url: url2.toString(),
        method,
        data
      }, this.getOAuthAccessTokens());
      headers = { ...headers, ...this._oauth.toHeader(auth) };
    }
    return headers;
  }
  getUrlObjectFromUrlString(url2) {
    if (!url2.startsWith("http")) {
      url2 = "https://" + url2;
    }
    return new URL(url2);
  }
  getHttpRequestArgs({ url: stringUrl, method, query: rawQuery = {}, body: rawBody = {}, headers, forceBodyMode, enableAuth, params }) {
    let body = void 0;
    method = method.toUpperCase();
    headers = headers !== null && headers !== void 0 ? headers : {};
    if (!headers["x-user-agent"]) {
      headers["x-user-agent"] = "Node.twitter-api-v2";
    }
    const url2 = this.getUrlObjectFromUrlString(stringUrl);
    const rawUrl = url2.origin + url2.pathname;
    if (params) {
      request_param_helper_default.applyRequestParametersToUrl(url2, params);
    }
    const query = request_param_helper_default.formatQueryToString(rawQuery);
    request_param_helper_default.moveUrlQueryParamsIntoObject(url2, query);
    if (!(rawBody instanceof Buffer)) {
      trimUndefinedProperties(rawBody);
    }
    const bodyType = forceBodyMode !== null && forceBodyMode !== void 0 ? forceBodyMode : request_param_helper_default.autoDetectBodyType(url2);
    if (enableAuth !== false) {
      const bodyInSignature = _ClientRequestMaker.BODY_METHODS.has(method) && bodyType === "url";
      headers = this.writeAuthHeaders({ headers, bodyInSignature, method, query, url: url2, body: rawBody });
    }
    if (_ClientRequestMaker.BODY_METHODS.has(method)) {
      body = request_param_helper_default.constructBodyParams(rawBody, headers, bodyType) || void 0;
    }
    request_param_helper_default.addQueryParamsToUrl(url2, query);
    return {
      rawUrl,
      url: url2,
      method,
      headers,
      body
    };
  }
  /* Plugin helpers */
  async applyPreRequestConfigHooks(requestParams) {
    var _a;
    const url2 = this.getUrlObjectFromUrlString(requestParams.url);
    for (const plugin of this.getPlugins()) {
      const result = await ((_a = plugin.onBeforeRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {
        client: this,
        url: url2,
        params: requestParams
      }));
      if (result) {
        return result;
      }
    }
  }
  applyPreStreamRequestConfigHooks(requestParams) {
    var _a;
    const url2 = this.getUrlObjectFromUrlString(requestParams.url);
    for (const plugin of this.getPlugins()) {
      (_a = plugin.onBeforeStreamRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {
        client: this,
        url: url2,
        params: requestParams
      });
    }
  }
  async applyPreRequestHooks(requestParams, computedParams, requestOptions) {
    await this.applyPluginMethod("onBeforeRequest", {
      client: this,
      url: this.getUrlObjectFromUrlString(requestParams.url),
      params: requestParams,
      computedParams,
      requestOptions
    });
  }
  async applyPostRequestHooks(requestParams, computedParams, requestOptions, response) {
    return await this.applyPluginMethod("onAfterRequest", {
      client: this,
      url: this.getUrlObjectFromUrlString(requestParams.url),
      params: requestParams,
      computedParams,
      requestOptions,
      response
    });
  }
  applyResponseErrorHooks(requestParams, computedParams, requestOptions, promise) {
    return promise.catch(applyResponseHooks.bind(this, requestParams, computedParams, requestOptions));
  }
};
ClientRequestMaker.BODY_METHODS = /* @__PURE__ */ new Set(["POST", "PUT", "PATCH"]);

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/mutes.paginator.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/followers.paginator.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/friends.paginator.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v1/media-helpers.v1.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v2/client.v2.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v2/client.v2.write.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v2/client.v2.read.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/index.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v2.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/v2.paginator.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v2/includes.v2.helper.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v2.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v2.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.read.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v2.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.write.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client/readwrite.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/client/readonly.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/ads/client.ads.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/ads/client.ads.write.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/ads/client.ads.read.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.write.js
init_cjs_shims();

// node_modules/.pnpm/twitter-api-v2@1.22.0/node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.read.js
init_cjs_shims();

// scripts/utils.ts
var import_fs = __toESM(require("fs"), 1);
var import_dotenv = __toESM(require_main(), 1);
var import_path = __toESM(require("path"), 1);
console.log("\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55 (process.cwd()):", process.cwd());
console.log("\u5F53\u524D\u6587\u4EF6\u8DEF\u5F84 (__filename):", __filename);
console.log("\u5F53\u524D\u6587\u4EF6\u6240\u5728\u76EE\u5F55 (__dirname):", __dirname);
console.log("\u6267\u884C\u811A\u672C\u8DEF\u5F84 (process.argv[1]):", process.argv[1]);
console.log("\u5F53\u524D\u6587\u4EF6\u6240\u5728\u76EE\u5F55 (path.dirname(process.argv[1])):", import_path.default.dirname(process.argv[1] || __filename));
var ENV_PATH = process.env.ENV_FILE_PATH || import_path.default.resolve(__dirname, ".env");
(0, import_dotenv.config)({ path: ENV_PATH });
console.log("ENV_PATH:", ENV_PATH);
console.log("\u5C1D\u8BD5\u52A0\u8F7D\u7684 .env \u6587\u4EF6\u662F\u5426\u5B58\u5728:", import_fs.default.existsSync(ENV_PATH));
var PROXY_URL = process.env.PROXY_URL || "";
var CURRENT_DIR = import_path.default.dirname(process.argv[1] || __filename);
var PROJECT_ROOT = import_path.default.resolve(CURRENT_DIR, "..");
var getProxiedUrl = (url2) => {
  if (url2.startsWith(PROXY_URL)) {
    return url2;
  }
  return PROXY_URL ? `${PROXY_URL}${url2}` : url2;
};
var originalFetchApi = import_twitter_openapi_typescript.TwitterOpenApi.fetchApi;
import_twitter_openapi_typescript.TwitterOpenApi.fetchApi = async (url2, init) => {
  const proxiedUrl = getProxiedUrl(url2);
  console.log(`\u4EE3\u7406\u8BF7\u6C42: ${url2} -> ${proxiedUrl}`);
  return originalFetchApi(proxiedUrl, init);
};
var _xClient = async (TOKEN) => {
  console.log("\u{1F680} ~ const_xClient= ~ TOKEN:", TOKEN.slice(0, 3) + "***");
  try {
    const response = await axios_default.get(getProxiedUrl("https://x.com/manifest.json"), {
      headers: {
        cookie: `auth_token=${TOKEN}`
      },
      timeout: 1e4
    });
    if (response.status !== 200) {
      throw new Error(`HTTP\u9519\u8BEF! \u72B6\u6001: ${response.status}`);
    }
    console.log("\u8BF7\u6C42\u6210\u529F\uFF0C\u89E3\u6790cookie");
    const cookies = response.headers["set-cookie"] || [];
    console.log("cookies", cookies);
    const cookieObj = cookies.reduce((acc, cookie) => {
      const [name, value] = cookie.split(";")[0].split("=");
      acc[name] = value;
      return acc;
    }, {});
    console.log("\u521D\u59CB\u5316TwitterOpenApi");
    const api = new import_twitter_openapi_typescript.TwitterOpenApi();
    const client = await api.getClientFromCookies({ ...cookieObj, auth_token: TOKEN });
    console.log("\u5DF2\u521B\u5EFA\u5BA2\u6237\u7AEF\uFF0C\u4F46X API\u8BF7\u6C42\u9700\u8981\u624B\u52A8\u6DFB\u52A0\u4EE3\u7406\u524D\u7F00");
    console.log("Twitter URL: https://api.twitter.com -> \u4EE3\u7406URL: " + getProxiedUrl("https://api.twitter.com"));
    return client;
  } catch (error) {
    console.error("\u8BF7\u6C42x.com\u5931\u8D25:", error.message);
    import_fs.default.writeFileSync("error.log", JSON.stringify({
      message: error.message,
      stack: error.stack
    }, null, 2));
    throw error;
  }
};
var XAuthClient = () => _xClient(process.env.AUTH_TOKEN || "");

// scripts/fetch-tweets.ts
var import_lodash = __toESM(require_lodash(), 1);
var import_dayjs = __toESM(require_dayjs_min(), 1);
var import_isBetween = __toESM(require_isBetween(), 1);
var import_fs_extra = __toESM(require_lib(), 1);
import_dayjs.default.extend(import_isBetween.default);
var fetchTweets = async () => {
  const client = await XAuthClient();
  const resp = await client.getTweetApi().getHomeLatestTimeline({
    count: 100
  });
  const originalTweets = resp.data.data.filter((tweet) => {
    return !tweet.referenced_tweets || tweet.referenced_tweets.length === 0;
  });
  const rows = [];
  originalTweets.forEach((tweet) => {
    const isQuoteStatus = (0, import_lodash.get)(tweet, "raw.result.legacy.isQuoteStatus");
    if (isQuoteStatus) {
      return;
    }
    const fullText = (0, import_lodash.get)(tweet, "raw.result.legacy.fullText", "RT @");
    if (fullText?.includes("RT @")) {
      return;
    }
    const createdAt = (0, import_lodash.get)(tweet, "raw.result.legacy.createdAt");
    const tweetDate = (0, import_dayjs.default)(createdAt);
    const now = (0, import_dayjs.default)();
    const twentyFourHoursAgo = now.subtract(24, "hour");
    if (!tweetDate.isBetween(twentyFourHoursAgo, now)) {
      return;
    }
    const screenName = (0, import_lodash.get)(tweet, "user.legacy.screenName");
    const tweetUrl = `https://x.com/${screenName}/status/${(0, import_lodash.get)(
      tweet,
      "raw.result.legacy.idStr"
    )}`;
    const user = {
      screenName: (0, import_lodash.get)(tweet, "user.legacy.screenName"),
      name: (0, import_lodash.get)(tweet, "user.legacy.name"),
      profileImageUrl: (0, import_lodash.get)(tweet, "user.legacy.profileImageUrlHttps"),
      description: (0, import_lodash.get)(tweet, "user.legacy.description"),
      followersCount: (0, import_lodash.get)(tweet, "user.legacy.followersCount"),
      friendsCount: (0, import_lodash.get)(tweet, "user.legacy.friendsCount"),
      location: (0, import_lodash.get)(tweet, "user.legacy.location")
    };
    const mediaItems = (0, import_lodash.get)(
      tweet,
      "raw.result.legacy.extendedEntities.media",
      []
    );
    const images = mediaItems.filter((media) => media.type === "photo").map((media) => media.mediaUrlHttps);
    const videos = mediaItems.filter(
      (media) => media.type === "video" || media.type === "animated_gif"
    ).map((media) => {
      const variants = (0, import_lodash.get)(media, "videoInfo.variants", []);
      const bestQuality = variants.filter((v) => v.contentType === "video/mp4").sort((a, b) => (b.bitrate || 0) - (a.bitrate || 0))[0];
      return bestQuality?.url;
    }).filter(Boolean);
    rows.push({
      // @ts-ignore
      user,
      images,
      videos,
      tweetUrl,
      fullText
    });
  });
  const outputPath = `./tweets/${(0, import_dayjs.default)().format("YYYY-MM-DD")}.json`;
  let existingRows = [];
  if (import_fs_extra.default.existsSync(outputPath)) {
    existingRows = JSON.parse(import_fs_extra.default.readFileSync(outputPath, "utf-8"));
  }
  const allRows = [...existingRows, ...rows];
  const uniqueRows = Array.from(
    new Map(allRows.map((row) => [row.tweetUrl, row])).values()
  );
  const sortedRows = uniqueRows.sort((a, b) => {
    const urlA = new URL(a.tweetUrl);
    const urlB = new URL(b.tweetUrl);
    const idA = urlA.pathname.split("/").pop() || "";
    const idB = urlB.pathname.split("/").pop() || "";
    return idB.localeCompare(idA);
  });
  console.log(sortedRows);
  return sortedRows;
};
if (typeof process !== "undefined" && process.versions && process.versions.node) {
  if (require.main === module) {
    fetchTweets().catch(console.error);
  }
} else {
  fetchTweets().catch(console.error);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  fetchTweets
});
/*! Bundled license information:

mime-db/index.js:
  (*!
   * mime-db
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-types/index.js:
  (*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

lodash/lodash.js:
  (**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)
*/
//# sourceMappingURL=fetch-tweets.cjs.map